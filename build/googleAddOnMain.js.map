{"version":3,"file":"googleAddOnMain.js","sources":["../src/tsModules/hotkey-util/hotkeyAndCode.ts","../src/tsModules/hotkey-util/hotkeyUtil.ts","../src/tsModules/undo/undoMgr.ts","../src/tsModules/textarea-spreadsheet/cell.ts","../src/tsModules/textarea-spreadsheet/copyState.ts","../src/tsModules/textarea-spreadsheet/textTable.ts","../src/tsModules/textarea-spreadsheet/tsCursor.ts","../src/tsModules/textarea-spreadsheet/tsEditor.ts","../src/tsModules/textarea-spreadsheet/tsUi.ts","../src/url.ts","../src/tsModules/textarea-spreadsheet/textUtil.ts","../src/tsModules/music-spreadsheet/parsingUtil.ts","../src/tsModules/music-spreadsheet/output.ts","../src/tsModules/music-spreadsheet/keyToNoteNumMapping.ts","../src/tsModules/music-spreadsheet/noteNumToAbcMapping.ts","../src/tsModules/music-spreadsheet/msEditor.ts","../src/tsModules/music-spreadsheet/msUi.ts","../src/esModules/math-util/mathUtil.js","../src/esModules/fraction/fraction.js","../src/esModules/chord/interval.js","../src/esModules/array-util/arrayUtil.js","../src/esModules/chord/spell.js","../src/esModules/chord/chord.js","../src/esModules/song-sheet/changesOverTime.js","../src/esModules/song-sheet/timeSigChanges.js","../src/esModules/song-sheet/swingChanges.js","../src/esModules/midi-data/midiNote.js","../src/esModules/song-sheet/quantizedNoteGp.js","../src/esModules/musical-sound/musicalSound.js","../src/esModules/song-sheet/voiceSettings.js","../src/esModules/song-sheet/voice.js","../src/esModules/song-sheet/chordChanges.js","../src/esModules/song-sheet/keySigChanges.js","../src/esModules/date-util/pretty.js","../src/esModules/solo-tactics/scale.js","../src/esModules/solfege-util/solfege.js","../src/esModules/solo-tactics/tactics.js","../src/esModules/song-sheet/song.js","../src/esModules/sheet-to-song/songPart.js","../src/esModules/music-comping/rhythm.js","../src/esModules/sheet-to-song/orchestrate.js","../src/esModules/sheet-to-song/songForm.js","../src/esModules/musical-beat/pattern.js","../src/esModules/sheet-to-song/parse.js","../src/esModules/solfege-util/scaleDegree.js","../src/esModules/sheet-melody/parseSheet.js","../src/esModules/sheet-to-song/parseV2.js","../src/esModules/fire/math.js","../src/esModules/fire/frac.js","../src/esModules/fire/beat.js","../src/esModules/fire/bassComp.js","../src/esModules/fire/comp.js","../src/esModules/fire/location.js","../src/esModules/fire/chunking.js","../src/esModules/fire/debug.js","../src/esModules/fire/pointed.js","../src/esModules/fire/iter.js","../src/esModules/fire/spell.js","../src/esModules/fire/storage.js","../src/esModules/fire/state.js","../src/esModules/fire/banner.js","../src/esModules/sheet-to-song/render.js","../src/genSheetImage.ts","../src/googleAddOnActions.ts","../src/tsModules/google-add-on/googleAddOn.ts","../src/main.ts","../src/googleAddOnMain.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"\nexport function mod(x, y) {\n  return ((x % y) + y) % y;\n}\n\nexport function gcd(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  while(y) {\n    var t = y;\n    y = x % y;\n    x = t;\n  }\n  return x;\n}\n\nexport function isPowerOf2(v) {\n  return v && !(v & (v - 1));\n}\n\n","/**\n * @fileoverview Description of this file.\n */\n\nimport * as math from '../math-util/mathUtil.js';\n\nexport function makeFrac(numer, denom) {\n  if (isNaN(denom)) {\n    denom = 1;\n  }\n  return new Frac({numer: numer, denom: denom});\n}\n\nexport function fromString(str) {\n  const [numerStr, denomStr] = str.split('/');\n  const numer = parseInt(numerStr);\n  const denom = parseInt(denomStr);\n  if (isNaN(numer) || isNaN(denom)) {\n    throw new Error('Unable to parse this as fraction: ' + str);\n  }\n  return makeFrac(numer, denom);\n}\n\nexport class Frac {\n  constructor({numer = 0, denom = 1}) {\n    if (isNaN(numer)) {\n      throw 'numerator is NaN';\n    }\n    if (isNaN(denom)) {\n      throw 'denominator is NaN';\n    }\n    if (denom == 0) {\n      throw new Error(\"denominator must be non-zero.\");\n    }\n    // Obtaining a unique rep.\n    if (denom < 0) {\n      numer = -numer;\n      denom = -denom;\n    }\n    const gcd = math.gcd(numer, denom);\n    this.numer = numer / gcd;\n    this.denom = denom / gcd;\n  }\n\n  getDenom() {\n    return this.denom;\n  }\n\n  getNumer() {\n    return this.numer;\n  }\n\n  isWhole() {\n    return this.denom === 1;\n  }\n\n  plus(f2) {\n    const f1 = this;\n    f2 = typeof f2 === 'number' ? makeFrac(f2) : f2;\n    return new Frac({\n      numer: f1.numer * f2.denom + f2.numer * f1.denom,\n      denom: f1.denom * f2.denom,\n    });\n  }\n\n  minus(f2) {\n    const f1 = this;\n    f2 = typeof f2 === 'number' ? makeFrac(f2) : f2;\n    return f1.plus(f2.negative());\n  }\n\n  times(f2) {\n    const f1 = this;\n    f2 = typeof f2 === 'number' ? makeFrac(f2) : f2;\n    return new Frac({\n      numer: f1.numer * f2.numer,\n      denom: f1.denom * f2.denom,\n    });\n  }\n\n  over(f2) {\n    const f1 = this;\n    f2 = typeof f2 === 'number' ? makeFrac(f2) : f2;\n    return new Frac({\n      numer: f1.numer * f2.denom,\n      denom: f1.denom * f2.numer,\n    });\n  }\n\n  negative() {\n    return new Frac({\n      numer: -this.numer,\n      denom: this.denom,\n    });\n  }\n\n  toString() {\n    return `${this.numer}/${this.denom}`;\n  }\n\n  toFloat() {\n    return this.numer / this.denom;\n  }\n\n  equals(frac2) {\n    frac2 = typeof frac2 === 'number' ? makeFrac(frac2) : frac2;\n    return this.numer === frac2.numer && this.denom === frac2.denom;\n  }\n\n  lessThan(frac2) {\n    // Assumes that denom is > 0 always.\n    frac2 = typeof frac2 === 'number' ? makeFrac(frac2) : frac2;\n    return this.numer * frac2.denom < frac2.numer * this.denom;\n  }\n  leq(frac2) {\n    return this.lessThan(frac2) || this.equals(frac2);\n  }\n\n  geq(frac2) {\n    return !this.lessThan(frac2);\n  }\n\n  greaterThan(frac2) {\n    return !this.leq(frac2);\n  }\n\n  weaklyInside(left, right) {\n    return left.leq(this) && this.leq(right);\n  }\n\n  strictlyInside(left, right) {\n    return left.lessThan(this) && this.lessThan(right);\n  }\n\n  fractionalPart() {\n    return this.minus(this.wholePart());\n  }\n\n  wholePart() {\n    return Math.floor(this.toFloat());\n  }\n}","\nexport const Intervals = Object.freeze({\n  P1: 0,\n  m2: 1,\n  M2: 2,\n  m3: 3,\n  M3: 4,\n  P4: 5,\n  s4: 6,\n  tritone: 6,\n  b5: 6,\n  P5: 7,\n  s5: 8,\n  m6: 8,\n  M6: 9,\n  m7: 10,\n  M7: 11,\n  P8: 12,\n  octave: 12,\n  b9: 13,\n  M9: 14,\n  s9: 15,\n  P11: 17,\n  s11: 18,\n  b13: 20,\n  M13: 21,\n});\n","export function range(start, end, step) {\n  step = step || 1;\n  const res = [];\n  for (let i = start; i < end; i += step) {\n    res.push(i);\n  }\n  return res;\n}\n\nexport function chunkArray(arr, isNextChunkFunc) {\n  const res = [];\n  let currChunk = [];\n  arr.forEach((item, idx) => {\n    if (isNextChunkFunc(item, currChunk, idx)) {\n      if (currChunk.length > 0) {\n        res.push(currChunk);\n      }\n      currChunk = [item];\n      return;\n    }\n    currChunk.push(item)\n  });\n  if (currChunk.length > 0) {\n    res.push(currChunk);\n  }\n  return res;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} a items An array containing the items.\n */\nexport function shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\n// arr[0] will be the key and arr[1] will be the val.\nexport function arrayToObject(arr) {\n  const obj = {};\n  arr.forEach(item => {\n    obj[item[0]] = item[1];\n  });\n  return obj;\n}\n\nexport function findLast(arr, predicate) {\n  let selected;\n  arr.forEach((item, idx) => {\n    if (predicate(item, idx)) {\n      selected = item;\n    }\n  });\n  return selected;\n}","import { range } from '../array-util/arrayUtil.js';\nimport { mod } from '../math-util/mathUtil.js';\n\nexport const letterToNoteNum = Object.freeze({\n  C: 0,\n  Db: 1,\n  D: 2,\n  Eb: 3,\n  E: 4,\n  F: 5,\n  Gb: 6,\n  G: 7,\n  Ab: 8,\n  A: 9,\n  Bb: 10,\n  B: 11,\n})\nexport function fromNoteNum(num) {\n  let mapping = {\n    1: makeSpelling('C', 1),\n    3: makeSpelling('E', -1),\n    6: makeSpelling('F', 1),\n    8: makeSpelling('A', -1),\n    10: makeSpelling('B', -1),\n  };\n  mapping = Object.assign(mapping, getNoteNumToNoAccidSpelling());\n  return fromNoteNumWithMapping(num, mapping);\n}\nexport function fromNoteNumWithFlat(num) {\n  let mapping = {\n    1: makeSpelling('D', -1),\n    3: makeSpelling('E', -1),\n    6: makeSpelling('G', -1),\n    8: makeSpelling('A', -1),\n    10: makeSpelling('B', -1),\n  };\n  mapping = Object.assign(mapping, getNoteNumToNoAccidSpelling());\n\n  return fromNoteNumWithMapping(num, mapping);\n}\n\nexport function fromNoteNumWithSharp(num) {\n  let mapping = {\n    1: makeSpelling('C', 1),\n    3: makeSpelling('D', 1),\n    6: makeSpelling('F', 1),\n    8: makeSpelling('G', 1),\n    10: makeSpelling('A', 1),\n  };\n  mapping = Object.assign(mapping, getNoteNumToNoAccidSpelling());\n\n  return fromNoteNumWithMapping(num, mapping);\n}\n\nexport function fromNoteNumWithChord(num, chord) {\n  if (!chord) {\n    return fromNoteNum(num);\n  }\n\n  let mappingInC = getStandardMappingInC();\n  if (chord.isDiminished()) {\n    mappingInC = getDiminishedMappingInC();\n  }\n  if (chord.isAugmented()) {\n    mappingInC[8] = makeSpelling('G', 1);\n  }\n  const finalMapping = translateMapping(mappingInC, chord);\n  return fromNoteNumWithMapping(num, finalMapping);\n}\n\n\nexport function makeSpelling(letter, numSharps, hasNatural) {\n  return new Spelling({letter: letter, numSharps: numSharps, hasNatural: hasNatural})\n}\n\nexport class Spelling {\n  constructor({letter = 'C', numSharps = 0, hasNatural = false}) {\n    this.letter = letter.toUpperCase();\n    this.numSharps = numSharps;\n    this.hasNatural = hasNatural;\n  }\n\n  equals(sp2) {\n    return (\n      this.letter === sp2.letter\n      && this.numSharps === sp2.numSharps\n      && this.hasNatural === sp2.hasNatural\n    );\n  }\n\n  // TODO move it at an ABC-specific module.\n  toAbc(octaveNum) {\n    const octaveNumRelC4 = octaveNum - 4;\n    return [\n      this.numSharps > 0 ? '^'.repeat(this.numSharps) : '',\n      this.numSharps < 0 ? '_'.repeat(-this.numSharps) : '',\n      this.hasNatural ? '=' : '',\n      this.letter.toUpperCase(),\n      octaveNumRelC4 > 0 ? \"'\".repeat(octaveNumRelC4) : '',\n      octaveNumRelC4 < 0 ? \",\".repeat(-octaveNumRelC4) : '',\n    ].join('');\n  }\n\n  toNoteNum(octaveNum) {\n    octaveNum = octaveNum || 0;\n    return octaveNum * 12 + letterToBaseNoteNum[this.letter] + this.numSharps;\n  }\n\n  toString() {\n    const accidentals = this.numSharps > 0 ? '#'.repeat(this.numSharps) : 'b'.repeat(-this.numSharps);\n    return `${this.letter.toUpperCase()}${accidentals}`;\n  }\n\n  // Assuming a major scale.\n  // TODO do we need another arg to allow for minor scale?\n  toRomanNumeralString(baseMajKey) {\n    const charShift = _minus(this.letter, baseMajKey.letter);\n    const numeral = {\n      0: 'I',\n      1: 'II',\n      2: 'III',\n      3: 'IV',\n      4: 'V',\n      5: 'VI',\n      6: 'VII',\n    }[charShift];\n    const numSharps = this.numSharpsRelMajKey(baseMajKey);\n    const prefix = numSharps > 0 ? range(0, numSharps).map(_ => '#').join('') : range(0, -numSharps).map(_ => 'b').join('');\n    return `${prefix}${numeral}`\n  }\n\n  numSharpsRelMajKey(baseMajKey) {\n    const charShift = _minus(this.letter, baseMajKey.letter);\n    // Assuming a major scale.\n    const noteNumShift = {\n      0: 0,\n      1: 2,\n      2: 4,\n      3: 5,\n      4: 7,\n      5: 9,\n      6: 11,\n    }[charShift];\n    const currNoteNum = baseMajKey.toNoteNum() + noteNumShift;\n    const wantNoteNum = this.toNoteNum();\n    const numSharps = mod(wantNoteNum - currNoteNum, 12);\n    if (numSharps <= 6) {\n      return numSharps;\n    }\n    return numSharps - 12;\n  }\n\n  shift(key1, key2, minimizeNumAccidentals) {\n    const noteNumShift = mod(key2.toNoteNum() - key1.toNoteNum(), 12);\n    const charShift = _minus(key2.letter, key1.letter);\n    let newLetter = this.letter;\n    range(0, charShift).forEach(_ => {\n      newLetter = getNextLetter(newLetter);\n    });\n    const targetNoteNum = this.toNoteNum() + noteNumShift;\n    const possSpelling = fromNoteNumWithLetter(targetNoteNum, newLetter);\n    if (minimizeNumAccidentals && possSpelling.toString() === 'Cb') {\n      return makeSpelling('B');\n    }\n    if (minimizeNumAccidentals && possSpelling.toString() === 'Fb') {\n      return makeSpelling('E');\n    }\n    if (minimizeNumAccidentals && possSpelling.toString() === 'B#') {\n      return makeSpelling('C');\n    }\n    if (minimizeNumAccidentals && possSpelling.toString() === 'E#') {\n      return makeSpelling('F');\n    }\n    if (Math.abs(possSpelling.numSharps) < 2) {\n      return possSpelling;\n    }\n    if (possSpelling.numSharps >= 2) {\n      return fromNoteNumWithSharp(targetNoteNum);\n    }\n    return fromNoteNumWithFlat(targetNoteNum);\n  }\n}\n\nfunction _minus(letter1, letter2) {\n  const numMusicalLetters = 7;\n  return mod(_asciiNum(letter1) - _asciiNum(letter2), numMusicalLetters);\n}\n\nfunction _asciiNum(a) {\n  return a.charCodeAt(0);\n}\n\nconst letterToBaseNoteNum = {\n  C: 0,\n  D: 2,\n  E: 4,\n  F: 5,\n  G: 7,\n  A: 9,\n  B: 11,\n}\n\nfunction getNoteNumToNoAccidSpelling(){\n  return {\n    0: makeSpelling('C'),\n    2: makeSpelling('D'),\n    4: makeSpelling('E'),\n    5: makeSpelling('F'),\n    7: makeSpelling('G'),\n    9: makeSpelling('A'),\n    11: makeSpelling('B'),\n  };\n}\n\nfunction fromNoteNumWithLetter(num, letter) {\n  const numModOctave = mod(num, 12);\n  for (let numSharps = 0; numSharps <= 2; numSharps++) {\n    const try1 = makeSpelling(letter, numSharps);\n    if (mod(try1.toNoteNum(), 12) == numModOctave) {\n      return try1;\n    }\n    const try2 = makeSpelling(letter, -numSharps);\n    if (mod(try2.toNoteNum(), 12) == numModOctave) {\n      return try2;\n    }\n  }\n  console.warn(\n    'Unable to find spelling with les than 3 accidentals from note number for letter.',\n    num, letter);\n  return fromNoteNum(num);\n}\n\nfunction fromNoteNumWithMapping(num, mapping) {\n  const numModOctave = mod(num, 12);\n  return mapping[numModOctave];\n}\n\nfunction getNextLetter(letter) {\n  return {\n    A: 'B',\n    B: 'C',\n    C: 'D',\n    D: 'E',\n    E: 'F',\n    F: 'G',\n    G: 'A',\n  }[letter];\n}\n\nfunction translateMapping(mappingInC, chord) {\n  let currLetter = 'C';\n  const letterRaises = [];\n  range(0, 12).forEach(idx => {\n    const nextLetter = mappingInC[idx].letter;\n    letterRaises.push(nextLetter !== currLetter);\n    currLetter = nextLetter;\n  });\n  const finalMapping = {};\n  let currSpelling = chord.root;\n  range(0, 12).forEach(idx => {\n    let letterToUse = currSpelling.letter;\n    if (letterRaises[idx]) {\n      letterToUse = getNextLetter(currSpelling.letter);\n    }\n    const currNoteNum = mod(chord.root.toNoteNum() + idx, 12);\n    currSpelling = fromNoteNumWithLetter(currNoteNum, letterToUse)\n    finalMapping[currNoteNum] = currSpelling;\n  });\n  return finalMapping;\n}\n\nfunction getStandardMappingInC() {\n  const mappingInC = {\n    1: makeSpelling('D', -1),\n    3: makeSpelling('E', -1),\n    6: makeSpelling('F', 1),\n    8: makeSpelling('A', -1),\n    10: makeSpelling('B', -1),\n  };\n  return Object.assign(mappingInC, getNoteNumToNoAccidSpelling())\n}\n\nfunction getDiminishedMappingInC() {\n  return {\n    0: makeSpelling('C'),\n    1: makeSpelling('D', -1),\n    2: makeSpelling('D'),\n    3: makeSpelling('E', -1),\n    4: makeSpelling('F', - 1),\n    5: makeSpelling('F'),\n    6: makeSpelling('G', -1),\n    7: makeSpelling('G'),\n    8: makeSpelling('A', -1),\n    9: makeSpelling('B', -2),\n    10: makeSpelling('B', -1),\n    11: makeSpelling('C', -1),\n  }\n}\n","import { Intervals } from './interval.js';\nimport { Spelling } from './spell.js';\nimport { mod } from '../math-util/mathUtil.js';\n\nexport class Chord {\n  constructor({\n    bass, root, quality = '', extension,\n    suspension, alterations = []}) {\n    this.bass = bass ? (bass instanceof Spelling ? bass : new Spelling(bass)) : null;\n    if (!root) {\n      throw 'root is a required argument.'\n    }\n    this.root = root instanceof Spelling ? root : new Spelling(root);\n    if (this.bass && this.bass.toNoteNum() == this.root.toNoteNum()) {\n      this.bass = null;\n    }\n    // Some external uses require major quality to be a non-empty string, but internally, we use ''.\n    quality = quality || '';\n    this.quality = quality == 'maj' ? '' : quality;\n    this.suspension = suspension;\n    this.extension = extension;\n    this.alterations = alterations;\n    this._altMap = {};\n    alterations.forEach(item => {\n      this._altMap[item.extensionNum] = item.numSharps;\n    });\n  }\n\n  toString() {\n    return this._toString();\n  }\n  toPrettyString() {\n    const str = this.toString();\n    return abbreviate(str);\n  }\n  toRomanNumeralString(baseKey) {\n    const str = this._toString(baseKey);\n    return abbreviateRomanNumeral(str);\n  }\n  _toString(baseKey) {\n    const sus = (this.suspension == 4 ? 'sus' : (\n      this.suspension == 2 ? 'sus2' : '')\n    );\n    const alt = this.alterations.map(item => {\n      let prefix = item.numSharps > 0 ? '#' : (item.numSharps < 0 ? 'b' : 'add');\n      if (item.extensionNum === 6 && this._toStringForExtension() === '') {\n        prefix = '';\n      }\n      return `${prefix}${item.extensionNum}`\n    }).join('');\n    let bassStr = '';\n    if (this.bass) {\n      const bass = baseKey ? this.bass.toRomanNumeralString(baseKey) : this.bass.toString();\n      bassStr = `/${bass}`;\n    }\n    let rootStr = this.root.toString();\n    if (baseKey) {\n      rootStr = this.root.toRomanNumeralString(baseKey);\n      if (this.getThirdInterval() == Intervals.m3) {\n        rootStr = rootStr.toLowerCase();\n      }\n    }\n    return `${rootStr}${this.quality}${this._toStringForExtension()}${sus}${alt}${bassStr}`;\n  }\n\n  isMajor() {\n    return this.getThirdInterval() == Intervals.M3 && this.getSeventhInterval() == Intervals.M7;\n  }\n  isDominant() {\n    return this.getThirdInterval() == Intervals.M3 && this.getSeventhInterval() == Intervals.m7;\n  }\n  isMinor() {\n    return this.getThirdInterval() == Intervals.m3 && this.getFifthInterval() == Intervals.P5;\n  }\n  hasExtension() {\n    return this.extension || this.alterations.length;\n  }\n  // Both half- and full-diminished\n  isDiminished() {\n    return this.getThirdInterval() == Intervals.m3 && this.getFifthInterval() == Intervals.tritone;\n  }\n  isAugmented() {\n    return this.getThirdInterval() == Intervals.M3 && this.getFifthInterval() == Intervals.m6;\n  }\n  isHalfDiminished() {\n    return this.getThirdInterval() == Intervals.m3 && this.getFifthInterval() == Intervals.tritone && this. getSeventhInterval() == Intervals.m7;\n  }\n\n  getThirdInterval() {\n    if (this.suspension == 2) {\n      return Intervals.M2;\n    }\n    if (this.suspension == 4) {\n      return Intervals.P4;\n    }\n    if (this.quality == 'dim' || this.quality == 'm') {\n      return Intervals.m3;\n    }\n    return Intervals.M3;\n  }\n  getFifthInterval() {\n    if (this.quality == 'dim') {\n      return Intervals.tritone;\n    }\n    if (this.quality == 'aug') {\n      return Intervals.m6;\n    }\n    return Intervals.P5 + this.getAlteredAmount(5);\n  }\n  getSeventhInterval() {\n    if (this.quality == 'dim') {\n      return Intervals.M6;\n    }\n    if (this.suspension) {\n      return Intervals.m7;\n    }\n    // Major chord without major 7.\n    if (!this.quality && !this.extension) {\n      return Intervals.M6;\n    }\n    if (this.extension && this.extension.isMajor7) {\n      return Intervals.M7;\n    }\n    // minor 6th chord\n    if (this.quality == 'm' && this._altMap[6] === 0) {\n      return Intervals.M6;\n    }\n    return Intervals.m7;\n  }\n\n  getAlteredAmount(extension) {\n    return this._altMap[extension] || 0;\n  }\n\n  // In order of importance\n  getSpecifiedColorNoteNums(includeAll, keySig) {\n    const res = new Set();\n    const rootNoteNum = this.root.toNoteNum();\n    const isBassNoteNum = noteNum => {\n      const bassNoteNum = this.bass ? this.bass.toNoteNum() : rootNoteNum;\n      return mod(bassNoteNum - noteNum, 12) == 0\n    };\n    const addToResIfNotBass = noteNum => {\n      if (!isBassNoteNum(noteNum)) {\n        res.add(mod(noteNum, 12));\n      }\n    };\n\n    addToResIfNotBass(rootNoteNum + this.getThirdInterval());\n  \n    if (this.extension) {\n      addToResIfNotBass(rootNoteNum + this.getSeventhInterval());\n      if (this.extension.extensionNum === 9) {\n        addToResIfNotBass(rootNoteNum + Intervals.M2);\n      }\n      if (this.extension.extensionNum === 11) {\n        addToResIfNotBass(rootNoteNum + Intervals.P4);\n      }\n      if (this.extension.extensionNum === 13) {\n        addToResIfNotBass(rootNoteNum + Intervals.M6);\n      }\n    }\n    if (this.quality == 'dim' || this.quality == 'aug') {\n      addToResIfNotBass(rootNoteNum + this.getFifthInterval());\n    }\n    Object.entries(this._altMap).forEach(([extNum, numSharps]) => {\n      if (extNum === '5') {\n        addToResIfNotBass(rootNoteNum + Intervals.P5 + numSharps);\n      }\n      if (extNum === '9') {\n        addToResIfNotBass(rootNoteNum + Intervals.M2 + numSharps);\n      }\n      if (extNum === '11') {\n        addToResIfNotBass(rootNoteNum + Intervals.P4 + numSharps);\n      }\n      if (extNum === '6' || extNum === '13') {\n        addToResIfNotBass(rootNoteNum + Intervals.M6 + numSharps);\n      }\n    });\n    \n    if (includeAll || res.size < 2) {\n      addToResIfNotBass(this.root.toNoteNum());\n    }\n\n    if (includeAll || res.size < 2) {\n      addToResIfNotBass(rootNoteNum + this.getFifthInterval());\n    }\n    if (includeAll) {\n      const isLocrian = this.isHalfDiminished();\n      const isPhrygian = keySig && (this.quality === 'm' && mod(this.root.toNoteNum(), keySig.toNoteNum(), 12) == Intervals.M3)\n      if (!isLocrian && !isPhrygian) {\n        addToResIfNotBass(rootNoteNum + Intervals.M2);\n      }\n    }\n    if (includeAll) {\n      if (this.getThirdInterval() == Intervals.m3) {\n        addToResIfNotBass(rootNoteNum + Intervals.P4);\n      }\n    }\n    // if (includeAll) {\n    //   if (this.getThirdInterval() == intervals.M3 && this.getFifthInterval() != intervals.m6) {\n    //     addToResIfNotBass(rootNoteNum + intervals.M6);\n    //   }\n    // }\n    return [...res];\n  }\n\n  _toStringForExtension() {\n    const ext = this.extension;\n    if (!ext) {\n      return '';\n    }\n    if (!ext.isMajor7) {\n      return `${ext.extensionNum}`;\n    }\n    // Use `maj` when possible because is easier to read than `M`.\n    return `${this.quality == '' ? 'maj' : 'M'}${ext.extensionNum}`;\n  }\n\n  // TODO Avoid mutation by implementing clone.\n  // Mutate.\n  shift(key1, key2) {\n    this.root = this.root.shift(key1, key2, /*minimizeNumAccidentals=*/true);\n    if (this.bass) {\n      this.bass = this.bass.shift(key1, key2, /*minimizeNumAccidentals=*/true);\n    }\n  }\n}\n\nfunction abbreviate(str) {\n  return str\n    .replace('m7b5', 'ø7')\n    .replace('dim', '°')\n    .replace('maj', 'Δ')\n    .replace('M', 'Δ')\n    .replace('aug', '+')\n    ;\n}\n\n// Hacks to make Roman Numeral chord more readable\nfunction abbreviateRomanNumeral(str) {\n  return abbreviate(str)\n    .replace('m', '-')\n    .replace('I7', 'I 7')\n    .replace('I9', 'I 9')\n    .replace('I1', 'I 1')\n    ;\n}\n","import { Frac, makeFrac } from \"../fraction/fraction.js\";\n\nexport class ChangesOverTime {\n  constructor({\n    changes = [],\n    defaultVal = undefined,\n  }) {\n    if (defaultVal !== undefined) {\n      this.defaultVal =  this._deserialize(defaultVal);\n    }\n    this.changes = changes.map(({start8n, val}) => {\n      return new Change({start8n: start8n, val: this._deserialize(val)});\n    });\n\n    this._sortAndDedupChanges();\n  }\n  // This should be overriden.\n  _deserialize(val) {\n    return val;\n  }\n  // This should be overriden.\n  _equal(a, b) {\n    return a === b;\n  }\n\n  upsert(start8n, val) {\n    this.changes.push({start8n: start8n, val: val});\n    this._sortAndDedupChanges();\n    this._dedupFirstChangeWithDefaultVal();\n  }\n  getChange(start8n, toTheLeft) {\n    let currChange = new Change({start8n: makeFrac(0), val: this.defaultVal});\n    for (const change of this.changes) {\n      const usePrevChange = toTheLeft ? change.start8n.geq(start8n) : change.start8n.greaterThan(start8n);\n      if (usePrevChange) {\n        break;\n      }\n      currChange = change;\n    }\n    return currChange;\n  }\n  getChanges() {\n    return this.changes;\n  }\n  // Remove changes if inside [start8n, end8n)\n  removeWithinInterval(start8n, end8n) {\n    this.changes = this.changes.filter(\n      change => !(start8n.leq(change.start8n) && (!end8n || change.start8n.lessThan(end8n))));\n    this._dedupFirstChangeWithDefaultVal();\n  }\n\n  _getStart8nStrToObj() {\n    return _toMap(this.getChanges());\n  }\n  _sortAndDedupChanges() {\n    this.changes.sort((a, b) => a.start8n.minus(b.start8n).toFloat());\n    this.changes = this.changes.reduce((accum, currChange, idx) => {\n      const prevObj = idx >= 1 ? this.changes[idx - 1].val : this.defaultVal;\n      if (prevObj && this._equal(currChange.val, prevObj)) {\n        return accum;\n      }\n      accum.push(currChange);\n      return accum;\n    }, []);\n  }\n  _dedupFirstChangeWithDefaultVal() {\n    if (this.defaultVal !== undefined && this.changes.length > 0 && this._equal(this.defaultVal, this.changes[0].val)) {\n      this.changes.splice(0, 1);\n    }\n  }\n}\n\nexport class Change {\n  constructor({\n    start8n,\n    // This val should already be deserialized.\n    val,\n  }) {\n    this.start8n = new Frac(start8n);\n    this.val = val;\n  }\n}\n\nfunction _toMap(changes) {\n  const map = {};\n  changes.forEach(({start8n, val}) => {\n    map[start8n.toString()] = val;\n  });\n  return map;\n}\n","import { makeFrac } from \"../fraction/fraction.js\";\nimport { ChangesOverTime } from \"./changesOverTime.js\";\n\nexport class TimeSig {\n  constructor({\n    upperNumeral = 4,\n    lowerNumeral = 4,\n  }) {\n    this.upperNumeral = upperNumeral;\n    this.lowerNumeral = lowerNumeral;\n  }\n  equals(other) {\n    return (\n      this.upperNumeral == other.upperNumeral &&\n      this.lowerNumeral == other.lowerNumeral);\n  }\n  isCompound() {\n    return this.upperNumeral >= 6 && this.upperNumeral % 3 === 0;\n  }\n  toString() {\n    return `${this.upperNumeral}/${this.lowerNumeral}`;\n  }\n  getDurPerMeasure8n() {\n    return makeFrac(8 * this.upperNumeral, this.lowerNumeral);\n  }\n}\n\n\nexport class TimeSigChanges extends ChangesOverTime {\n  constructor({\n    defaultVal = {},\n    ...rest\n  }) {\n    super({defaultVal: defaultVal, ...rest});\n  }\n\n  _deserialize(val) {\n    return new TimeSig(val);\n  }\n  _equal(a, b) {\n    return a.equals(b);\n  }\n}","\nimport { Frac, makeFrac } from \"../fraction/fraction.js\";\nimport { ChangesOverTime } from \"./changesOverTime.js\";\n\nexport class Swing {\n  constructor({\n    ratio = makeFrac(1),\n    dur8n = makeFrac(1),\n  }) {\n    this.ratio = new Frac(ratio);\n    this.dur8n = new Frac(dur8n);\n  }\n  equals(other) {\n    return (\n      this.ratio.equals(other.ratio) &&\n      this.dur8n.equals(other.dur8n)\n    );\n  }\n}\nexport class SwingChanges extends ChangesOverTime {\n  constructor({\n    defaultVal = new Swing({}),\n    ...rest\n  }) {\n    super({defaultVal: defaultVal, ...rest});\n  }\n  _deserialize(val) {\n    return new Swing(val);\n  }\n  _equal(a, b) {\n    return a.equals(b);\n  }\n}\n\n","import * as midiEvent from './midiEvent.js';\n\nexport class MidiNote {\n  constructor({noteNum, startTime, endTime, velocity, channelNum, spelling}) {\n    this.noteNum = noteNum;\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.velocity = velocity;\n    this.channelNum = channelNum;\n    this.spelling = spelling;\n  }\n}\n\n// The notes are in the order of the startTime.\nexport function toMidiNotes(midiEvts) {\n  const noteNumToUnfinishedMidiNote = {};\n  const accum = [];\n  midiEvts.forEach(midiEvt => {\n    if (midiEvt.type == midiEvent.midiEvtType.NoteOff) {\n      _handleNoteOff(midiEvt, noteNumToUnfinishedMidiNote);\n    } else if (midiEvt.type == midiEvent.midiEvtType.NoteOn) {\n      _handleNoteOn(midiEvt, noteNumToUnfinishedMidiNote, accum);\n    }\n  });\n  return accum;\n}\n\nfunction _handleNoteOn(midiEvt, noteNumToUnfinishedMidiNote, accum) {\n  const midiNote = new MidiNote({\n    noteNum: midiEvt.noteNum,\n    startTime: midiEvt.time,\n    velocity: midiEvt.velocity,\n    channelNum: midiEvt.channelNum});\n  \n  if (noteNumToUnfinishedMidiNote[midiEvt.noteNum]) {\n    console.warn('Consecutive noteOn without noteOff of note number: ', midiEvt.noteNum);\n    _handleNoteOff(midiEvt, noteNumToUnfinishedMidiNote);\n  }\n  noteNumToUnfinishedMidiNote[midiEvt.noteNum] = midiNote;\n  accum.push(midiNote);\n}\n\nfunction _handleNoteOff(midiEvt, noteNumToUnfinishedMidiNote) {\n  const midiNote = noteNumToUnfinishedMidiNote[midiEvt.noteNum];\n  delete noteNumToUnfinishedMidiNote[midiEvt.noteNum];\n  if (midiNote) {\n    midiNote.endTime = midiEvt.time;\n  } else {\n    console.warn('Unable to find noteOn for the noteOff of note number: ', midiEvt.noteNum);\n  }\n}","import { Frac } from \"../fraction/fraction.js\";\nimport { MidiNote } from \"../midi-data/midiNote.js\";\n\nexport function makeRest(start8n, end8n) {\n  return new QuantizedNoteGp({\n    start8n: start8n,\n    end8n: end8n,\n    realEnd8n: end8n,\n  });\n}\n\nexport class DecoratedNoteGp {\n  constructor({\n    midiNotes = [],\n    isGraceNote = false,\n    isRollingUp = false,\n    isRollingDown = false,\n    isStaccato = false,\n  }) {\n    this.midiNotes = [];\n    this.setMidiNotes(midiNotes.map(midiNote => new MidiNote(midiNote)));\n\n    this.isGraceNote = isGraceNote;\n    this.isRollingUp = isRollingUp;\n    this.isRollingDown = isRollingDown;\n    this.isStaccato = isStaccato;\n  }\n\n  get isRest() {\n    return this.midiNotes.length == 0;\n  }\n\n  addMidiNotes(midiNotes) {\n    this.setMidiNotes(this.midiNotes.concat(midiNotes));\n  }\n\n  setMidiNotes(midiNotes) {\n    this.midiNotes = midiNotes;\n    this.midiNotes.sort((n1, n2) => {\n      return n1.noteNum - n2.noteNum;\n    });\n  }\n\n  getLatestStartTime() {\n    return this.midiNotes.reduce((accum, note) => {\n      return Math.max(accum, note.startTime);\n    }, 0);\n  }\n\n  getEarliestStartTime() {\n    return this.midiNotes.reduce((accum, note) => {\n      return Math.min(accum, note.startTime);\n    }, Infinity);\n  }\n\n  getLatestEndTime() {\n    return this.midiNotes.reduce((accum, note) => {\n      return Math.max(accum, note.endTime);\n    }, 0);\n  }\n  getEarliestEndTime() {\n    return this.midiNotes.reduce((accum, note) => {\n      return Math.min(accum, note.endTime);\n    }, Infinity);\n  }\n  getNoteNums() {\n    return this.midiNotes.map(note => note.noteNum);\n  }\n}\n\nexport function makeSimpleQng(start8n, end8n, noteNums, velocity, spellings, channelNum) {\n  noteNums = noteNums || [];\n  velocity = velocity === undefined ? 120 : velocity;\n  return new QuantizedNoteGp({\n    start8n: start8n, end8n: end8n, realEnd8n: end8n,\n    midiNotes: noteNums.map((noteNum, idx) => new MidiNote({\n      noteNum: noteNum, velocity: velocity, channelNum: channelNum || 0,\n      spelling: spellings ? spellings[idx] : undefined,\n    })),\n  });\n}\n\nexport class QuantizedNoteGp extends DecoratedNoteGp {\n  constructor(obj) {\n    super(obj);\n    this.start8n = obj.start8n ? new Frac(obj.start8n) : null;\n    this.end8n = obj.end8n ? new Frac(obj.end8n) : null;\n    // This is needed for replay to be faithful to recording.\n    // It can also be used for end8n after rounding up to the nearest beat.\n    this.realEnd8n = obj.realEnd8n ? new Frac(obj.realEnd8n) : null;\n    this.lyrics = obj.lyrics || '';\n  }\n\n  // isGraceNote should only be used before quantizing.\n  // Once quantized, this is the definitive way to determine grace note status.\n  get isLogicalGraceNote() {\n    return (this.start8n && this.end8n && this.start8n.equals(this.end8n));\n  }\n}","import * as midiEvent from '../midi-data/midiEvent.js';\n\nexport const instruments = Object.freeze({\n  electric_grand_piano: 'electric_grand_piano',\n  acoustic_grand_piano: 'acoustic_grand_piano',\n  electric_guitar_clean: 'electric_guitar_clean',\n  // A softer but more sustained sound\n  electric_piano_1: 'electric_piano_1',\n  // A more electric and sustained sound\n  electric_piano_2: 'electric_piano_2',\n  // A percussive sound used to set the tempo\n  synth_drum: 'synth_drum',\n});\n\n// Load more if needed later.\nconst basicInstrumentsArr = [\n  instruments.electric_grand_piano,\n  instruments.acoustic_grand_piano,\n  instruments.electric_piano_1,\n  instruments.electric_piano_2,\n  instruments.electric_guitar_clean,\n  instruments.synth_drum,\n];\n\nexport class MusicalSound {\n  constructor({midiJs, soundSub, eBanner, readyPub}) {\n    this._channelNumtoNoteNums = {};\n    this._midiJs = midiJs;\n    this._isReady = false;\n    this._eBanner = eBanner;\n    this._soundSub = soundSub;\n    this._loadedInstruments = [];\n    this._readyPub = readyPub;\n\n    this._load();\n  }\n  _load(instrumentsArr, channelInfos) {\n    this._loadedInstruments = instrumentsArr || basicInstrumentsArr\n    this._isReady = false;\n    this._midiJs.loadPlugin({\n      soundfontUrl: \"./lib/midi.js/soundfont/\",\n      instruments: this._loadedInstruments,\n      onsuccess: _ => {\n        this._isReady = true;\n        this._eBanner.success('Sound enabled.');\n        this.configure(channelInfos);\n\n        if (this._soundSub) {\n          this._soundSub(midiEvt => {\n            this.execute(midiEvt);\n          });\n        }\n        if (this._readyPub) {\n          this._readyPub();\n        }\n      }\n    });\n  }\n\n  // TODO call _load if not all instruments are loaded\n  configure(channelInfos) {\n    channelInfos = channelInfos || [{\n      channelNum: 0,\n      instrumentName: instruments.electric_grand_piano,\n    },\n    {\n      channelNum: 1,\n      instrumentName: instruments.electric_grand_piano,\n    }];\n    const defaultVolume = 60;\n    channelInfos.forEach(channelInfo => {\n      this._midiJs.programChange(channelInfo.channelNum, this._midiJs.GM.byName[channelInfo.instrumentName].number);\n      this._midiJs.setVolume(channelInfo.channelNum, defaultVolume);\n    });\n  }\n\n  // midiEvt being null means stopping all sounds.\n  execute(midiEvt) {\n    play(midiEvt, this._midiJs);\n    updateState(midiEvt, this._channelNumtoNoteNums);\n  }\n\n  stopAll() {\n    stop(this._channelNumtoNoteNums, this._midiJs);\n    this._channelNumtoNoteNums = {};\n  }\n}\n\nfunction updateState(midiEvt, channelNumtoNoteNums) {\n  const noteNumsMap = channelNumtoNoteNums[midiEvt.channelNum] || {};\n  if (midiEvt.type == midiEvent.midiEvtType.NoteOn) {\n    noteNumsMap[midiEvt.noteNum] = true;\n    channelNumtoNoteNums[midiEvt.channelNum] = noteNumsMap;\n  }\n  if (midiEvt.type == midiEvent.midiEvtType.NoteOff) {\n    delete noteNumsMap[midiEvt.noteNum];\n  }\n}\n\nfunction stop(channelNumtoNoteNums, midiJs) {\n  Object.entries(channelNumtoNoteNums).forEach(([channelNum, noteNums]) => {\n    Object.keys(noteNums).forEach(noteNum => play(new midiEvent.NoteOffEvt({\n      noteNum: noteNum,\n      channelNum: channelNum,\n    }), midiJs))\n  });\n}\n\nfunction play(midiEvt, midiJs) {\n  if (midiEvt.type == midiEvent.midiEvtType.NoteOn) {\n    const volume = midiEvt.velocity;\n    midiJs.noteOn(midiEvt.channelNum, midiEvt.noteNum, volume);\n  }\n  if (midiEvt.type == midiEvent.midiEvtType.NoteOff) {\n    midiJs.noteOff(midiEvt.channelNum, midiEvt.noteNum);\n  }\n}\n","import { instruments } from \"../musical-sound/musicalSound.js\";\nimport { ChangesOverTime } from \"./changesOverTime.js\";\n\nexport class VoiceSettings {\n  constructor({\n    volumePercent = 100,\n    hide = false,\n    instrument = instruments.acoustic_grand_piano,\n    name = '',\n  }) {\n    this.volumePercent = volumePercent;\n    this.hide = hide;\n    this.instrument = instrument;\n    this.name = name;\n  }\n  equals(other) {\n    return (\n      this.volumePercent === other.volumePercent &&\n      this.instrument === other.instrument);\n  }\n}\n\nexport class SettingsChanges extends ChangesOverTime {\n  constructor({\n    defaultVal = new VoiceSettings({}),\n    ...rest\n  }) {\n    super({defaultVal: defaultVal, ...rest});\n  }\n\n  _deserialize(val) {\n    return new VoiceSettings(val);\n  }\n\n  _equal(a, b) {\n    return a.equals(b);\n  }\n}","import { makeRest, QuantizedNoteGp } from \"./quantizedNoteGp.js\";\nimport { VoiceSettings, SettingsChanges } from \"./voiceSettings.js\";\n\nexport const clefType = Object.freeze({\n  Treble: 'Treble',\n  Bass: 'Bass',\n});\n\nexport class Voice {\n  constructor({\n    noteGps = [],\n    lyricsTokens = [],\n    clef = clefType.Treble,\n    // settings = {},\n    settingsChanges = {},\n  }) {\n    this.noteGps = noteGps.map(ng => new QuantizedNoteGp(ng));\n    this.lyricsTokens = lyricsTokens;\n    this.clef = clef;\n    this.settingsChanges = new SettingsChanges(settingsChanges);\n    // TODO: migrate away from the settings argument so we don't need to process it.\n    // if (Object.keys(settings).length) {\n    //   this.settingsChanges.defaultVal = new VoiceSettings(settings);\n    // }\n  }\n\n  get settings() {\n    return this.settingsChanges.defaultVal;\n  }\n\n  sanitizeNoteGps(pickup8n) {\n    // 1. Make sure there are no gaps; give warning if there are overlaps.\n    // Not worth fixing overlap, because we don't know the root cause.\n    this.noteGps = this.noteGps.reduce((accum, noteGp, idx) => {\n      if (idx == 0 && !pickup8n) {\n        accum.push(noteGp);\n        return accum;\n      }\n\n      const prevEnd8n = idx == 0 ? pickup8n : this.noteGps[idx - 1].end8n;\n      if (prevEnd8n.lessThan(noteGp.start8n)) {\n        accum.push(makeRest(prevEnd8n, noteGp.start8n));\n      } else if (prevEnd8n.greaterThan(noteGp.start8n)) {\n        console.warn('NoteGp has smaller start8n than expected (got, want): ', noteGp, prevEnd8n);\n      }\n      accum.push(noteGp);\n      return accum;\n    }, []);\n\n    // 2. merge rests.\n    this.noteGps = this.noteGps.reduce((accum, noteGp) => {\n      if (!noteGp.isRest || accum.length == 0 || !accum[accum.length - 1].isRest) {\n        accum.push(noteGp);\n        return accum;\n      }\n      accum[accum.length - 1].end8n = noteGp.end8n;\n      accum[accum.length - 1].realEnd8n = noteGp.end8n;\n      return accum;\n    }, []);\n  }\n\n  getAbcLyricsString() {\n    return this.lyricsTokens.map(token => token.endsWith('-') ? token : token + ' ').join('');\n  }\n  fromAbcLyricsString(abcLyrics) {\n    this.lyricsTokens = toLyricsTokens(abcLyrics);\n  }\n  insertAbcLyricsString(abcLyrics, idx) {\n    const tokens = toLyricsTokens(abcLyrics);\n    if (tokens.length == 0) {\n      if (idx >= this.lyricsTokens.length) {\n        return 0;\n      }\n      // When there are no tokens, we still need to splice if idx < this.lyricsTokens.length.\n    }\n    if (tokens.length > 0) {\n      while (this.lyricsTokens.length < idx) {\n        this.lyricsTokens.push('*');\n      }\n    }\n    this.lyricsTokens.splice(idx, 1, ...tokens);\n    return tokens.length;\n  }\n  getLyricsTokensWithCursor(cursorLyricsIdx) {\n    const res = this.lyricsTokens.slice();\n    if (cursorLyricsIdx === undefined) {\n      return res;\n    }\n    while (res.length <= cursorLyricsIdx) {\n      res.push('*');\n    }\n    const toBeDecorated = res[cursorLyricsIdx];\n    res[cursorLyricsIdx] = toBeDecorated.indexOf(['_', '*']) >= 0 ? '?' : '?' + toBeDecorated;\n    return res;\n  }\n\n  // The preferred way to add things to noteGps without introducing gaps.\n  // pickup8n is needed to handle a possible gap in the left end by filling it with a rest.\n  upsert(qngs, cursorStart8n, pickup8n) {\n    this._upsertWithoutLeftAlignmentNorMergeRests(qngs, cursorStart8n);\n    this.sanitizeNoteGps(pickup8n);\n  }\n\n  // mergeRests() {\n  //   this.noteGps = this.noteGps.reduce((accum, noteGp) => {\n  //     if (!noteGp.isRest || accum.length == 0 || !accum[accum.length - 1].isRest) {\n  //       accum.push(noteGp);\n  //       return accum;\n  //     }\n  //     accum[accum.length - 1].end8n = noteGp.end8n;\n  //     accum[accum.length - 1].realEnd8n = noteGp.end8n;\n  //     return accum;\n  //   }, []);\n  // }\n\n  _upsertWithoutLeftAlignmentNorMergeRests(qngs, cursorStart8n) {\n    if (qngs.length == 0) {\n      return;\n    }\n\n    const earliestTime = qngs[0].start8n.plus(cursorStart8n);\n    const latestTime = qngs[qngs.length - 1].end8n.plus(cursorStart8n);\n\n    /** 0.   prev\n     *     |------|\n     *        |+++++++++|    */\n    // Before branching into different cases, truncate prev.\n    const prevIdx = this.noteGps.findIndex(noteGp => noteGp.end8n.greaterThan(earliestTime));\n    if (prevIdx >= 0) {\n      // If the earliestTime also cuts into the note before splice start, truncate the note.\n      const prev = this.noteGps[prevIdx];\n      if (prev.end8n.greaterThan(earliestTime)) {\n        prev.end8n = earliestTime;\n        if (prev.realEnd8n.greaterThan(earliestTime)) {\n          prev.realEnd8n = earliestTime;\n        }\n      }\n    }\n\n    const translatedQngs = qngs.map(qng => new QuantizedNoteGp({\n      ...qng,\n      start8n: qng.start8n.plus(cursorStart8n),\n      end8n: qng.end8n.plus(cursorStart8n),\n      realEnd8n: qng.realEnd8n.plus(cursorStart8n),\n    }));\n\n    // Grace notes at the earliestTime wil be removed/spliced as well.\n    // TODO if we more fine-grained control, pass in noteGpIdx\n    const spliceStartIdx = this.noteGps.findIndex(noteGp => noteGp.start8n.geq(earliestTime));\n\n    // 1. No overlap: ----|++++\n    if (spliceStartIdx === -1) {\n      // 2. Has gap: ----|    ++++\n      if (this.noteGps.length > 0 && this.noteGps[this.noteGps.length - 1].end8n.lessThan(earliestTime)) {\n        this.noteGps.push(makeRest(this.noteGps[this.noteGps.length - 1].end8n, earliestTime));\n      }\n      this.noteGps.push(...translatedQngs);\n      return;\n    }\n    \n    /** 3. prev  spliceStart   spliceEnd\n     *     -----|------------|------\n     *       ++++++| possGap |    */\n    // 3a. deal with possGap\n    let spliceEndIdx = this.noteGps.findIndex(noteGp => noteGp.start8n.geq(latestTime));\n    spliceEndIdx = spliceEndIdx === -1 ? this.noteGps.length : spliceEndIdx;\n    const spliceEnd = this.noteGps[spliceEndIdx];\n    if (spliceEnd && spliceEnd.start8n.greaterThan(latestTime)) {\n      translatedQngs[translatedQngs.length - 1].end8n = spliceEnd.start8n;\n      translatedQngs[translatedQngs.length - 1].realEnd8n = spliceEnd.start8n;\n    }\n    // 3b. splice from spliceStartIdx to spliceEndIdx - 1.\n    this.noteGps.splice(spliceStartIdx, spliceEndIdx - spliceStartIdx, ...translatedQngs);\n  }\n}\n\n/* E.g.\n[K:C] G   A c   f    e   G   G  A      c   d   c\nw:   when-e-ver you need me, * I~will be there _ \n\ntokens:\n['when-', 'e-', 'ver', 'you', 'need', 'me', '', 'I~will', 'be', 'there', '']\n\n['when-ever'] => 'when\\-ever'.\n*/\nfunction toLyricsTokens(lyricsString) {\n  const asianRegexStr = '[\\u3040-\\u30ff\\u3400-\\u4dbf\\u4e00-\\u9fff\\uf900-\\ufaff\\uff66-\\uff9f]';\n  // 'abc  def' => ['abc', 'def']\n  return lyricsString.split(/[\\s]+/)\n    // 'abc_def' => ['abc', '_', 'def']\n    .flatMap(phrase => splitAndIncludeDelimiter(phrase, '_'))\n    // 'abc*def' => ['abc', '*', 'def']\n    .flatMap(phrase => splitAndIncludeDelimiter(phrase, '*'))\n    // 'ab-cd' => ['ab-', 'cd']\n    .flatMap(phrase => splitAfter(phrase, '-'))\n    // '天如' => ['天', '如']\n    // Not using splitAfter here because we want:\n    // '天?' => ['天?']\n    .flatMap(phrase => splitBefore(phrase, asianRegexStr))\n    .filter(phrase => phrase !== '');\n}\n\nfunction splitAndIncludeDelimiter(phrase, delimiter) {\n  const tokens = phrase.split(delimiter);\n  return tokens.flatMap((token, idx) => {\n    if (idx >= tokens.length - 1) {\n      return [token];\n    }\n    return [token, delimiter];\n  });\n}\n\nfunction splitBefore(phrase, delimiterSubregexString) {\n  // use positive look-ahead so that the split doesn't remove the delimiter.\n  return phrase.split(new RegExp(`(?=${delimiterSubregexString})`));\n}\n\nfunction splitAfter(phrase, delimiterSubregexString) {\n  // use positive look-behind so that the split doesn't remove the delimiter.\n  return phrase.split(new RegExp(`(?<=${delimiterSubregexString})`));\n}\n","\nimport { Chord } from \"../chord/chord.js\";\nimport { ChangesOverTime } from \"./changesOverTime.js\";\n\nexport class ChordChanges extends ChangesOverTime {\n  _deserialize(chord) {\n    return new Chord(chord);\n  }\n  _equal(a, b) {\n    return false;\n    // return a.toString() === b.toString();\n  }\n}\n\n","import { Spelling } from \"../chord/spell.js\";\nimport { ChangesOverTime } from \"./changesOverTime.js\";\n\nexport const KeySig = Spelling;\n\nexport class KeySigChanges extends ChangesOverTime {\n  constructor({\n    defaultVal = new KeySig({letter: 'C'}),\n    ...rest\n  }) {\n    super({defaultVal: defaultVal, ...rest});\n  }\n\n  _deserialize(val) {\n    return new KeySig(val);\n  }\n\n  _equal(a, b) {\n    return a.equals(b);\n  }\n}","\nexport function getPrettyDateStr(dateMs) {\n  const date = new Date(dateMs);\n  const currDateMs = Date.now();\n  const isSameWeek = currDateMs >= dateMs && currDateMs - dateMs < 1000 * 3600 * 6;\n  const moreThanOneWeekOptions = {\n    weekday: 'short',\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  };\n  const sameWeekOptions = {\n    month: 'short',\n    day: 'numeric',\n    weekday: 'short',\n    hour: 'numeric',\n    minute: 'numeric',\n  };\n  const options = isSameWeek ? sameWeekOptions : moreThanOneWeekOptions;\n  const formatter = new Intl.DateTimeFormat('en-US', options);\n  return formatter.format(date);\n}\n","\n\nexport const Scales = {\n  chord_tones: ' arppeg.',\n  pentatonic: ' penta.',\n  minor_pentatonic: 'm penta.',\n  // major: 'major',\n  // lydian: 'lydian',\n  // minor: 'minor', // natural\n  // dorian: 'dorian',\n  diminished: ' dim.',\n  half_diminished: ' half dim.',\n  diatonic: ' diatonic', // Catch-all to describe the church mode scales.\n};\n\n\n// function makeScale(name, intervals) {\n//   return new ScaleInfo({name: name, intervals: intervals});\n// }\n\n// class ScaleInfo {\n//   constructor({name, intervals}) {\n//     this.name = name;\n//     this.intervals = intervals;\n//   }\n\n//   getNoteSpellings(root, chord) {\n\n//   }\n// }\n\n// const ScaleInfos = {\n//   chord_tones: makeScale('arppeg.', [\n//     0,\n//     ch => ch.getThirdInterval(),\n//     ch => ch.getFifthInterval(),\n//     ch => ch.getSeventhInterval(),\n//   ]),\n//   pentatonic: makeScale('penta.', [0, 2, 4, 7, 9]),\n//   minor_pentatonic: makeScale('min penta.', [0, 3, 5, 7, 10]),\n//   // How do we make spelling correct?\n//   diminished: 'dim. scale',\n//   half_diminished: 'half dim. scale',\n//   diatonic: 'diatonic', // Catch-all to describe the church mode scales.\n// };\n","import { makeSpelling, Spelling } from \"../chord/spell.js\";\n\nconst solfegeToSpelling = {\n  de: makeSpelling('C', -1),\n  do: makeSpelling('C', 0),\n  du: makeSpelling('C', 1),\n  ri: makeSpelling('D', -2),\n  ra: makeSpelling('D', -1),\n  re: makeSpelling('D', 0),\n  ro: makeSpelling('D', 1),\n  ru: makeSpelling('D', 2),\n  mo: makeSpelling('E', -2),\n  mu: makeSpelling('E', -1),\n  mi: makeSpelling('E', 0),\n  ma: makeSpelling('E', 1),\n  faw: makeSpelling('F', 2),\n  fi: makeSpelling('F', -1),\n  fa: makeSpelling('F', 0),\n  fe: makeSpelling('F', 1),\n  fo: makeSpelling('F', 2),\n  sa: makeSpelling('G', -2),\n  se: makeSpelling('G', -1),\n  so: makeSpelling('G', 0),\n  su: makeSpelling('G', 1),\n  si: makeSpelling('G', 2),\n  lu: makeSpelling('A', -2),\n  li: makeSpelling('A', -1),\n  la: makeSpelling('A', 0),\n  le: makeSpelling('A', 1),\n  lo: makeSpelling('A', 2),\n  to: makeSpelling('B', -2),\n  tu: makeSpelling('B', -1),\n  ti: makeSpelling('B', 0),\n  ta: makeSpelling('B', 1),\n};\n\nlet spellingToSolfege;\n\nexport function toSpelling(str) {\n  const res = solfegeToSpelling[str.toLowerCase()];\n  // Cloning in case the caller modifies it.\n  return new Spelling(res);\n}\n\nexport function toSolfege(spellingStr) {\n  if (!spellingToSolfege) {\n    spellingToSolfege = new Map(Object.keys(solfegeToSpelling).map(solfege => {\n      return [solfegeToSpelling[solfege].toString(), solfege];\n    }));\n  }\n  const res = spellingToSolfege.get(spellingStr);\n  if (!res) {\n    return '';\n  }\n  return capitalize(res);\n}\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","import { ChangesOverTime } from \"../song-sheet/changesOverTime.js\";\nimport { Intervals } from \"../chord/interval.js\";\nimport { fromNoteNumWithChord } from \"../chord/spell.js\";\nimport { Scales } from \"./scale.js\";\nimport { toSolfege } from \"../solfege-util/solfege.js\";\n\nexport class Tactic {\n  constructor({scale, root, chord, targetNote, addChromaticism = false}) {\n    this.scale = scale;\n    this.root = root;\n    this.chord = chord;\n    this.targetNote = targetNote;\n    this.addChromaticism = addChromaticism;\n  }\n\n  toString() {\n    const scale = capitalizeFirstLetter(this.scale == Scales.chord_tones ? this.scale : `${this.root}${this.scale}`);\n    if (!this.targetNote) {\n      return scale;\n    }\n    \n    return `${scale} (${toSolfege(this.targetNote.toString())})`\n  }\n}\n\nexport class TacticChanges extends ChangesOverTime {\n  _deserialize(tactic) {\n    return new Tactic(tactic);\n  }\n  _equal(a, b) {\n    return a.toString === b.toString();\n  }\n}\n\nfunction makeTactic(scale, root, chord) {\n  const targetNote = randomizeRoot(\n    chord,\n    [chord.getThirdInterval(), chord.getFifthInterval(), chord.getSeventhInterval()],\n    [0.45, 0.2, 0.3]);\n  return new Tactic({\n    scale: scale, root: root, chord: chord, targetNote: targetNote,\n  });\n}\n\nfunction randomizeRoot(chord, allowedIntervals, pmf) {\n  const observation = Math.random();\n  let cumProb = 0;\n  for (let idx = 0; idx < allowedIntervals.length; idx++) {\n    cumProb += pmf[idx];\n    if (observation < cumProb) {\n      return fromNoteNumWithChord(chord.root.toNoteNum() + allowedIntervals[idx], chord);\n    }\n  }\n  return chord.root;\n}\n\nexport function toTactic(chord, {level = 0, /*key, prevChord, nextChord*/}) {\n  const beyondSimple = Math.random() < 2 * level;\n  if (!beyondSimple) {\n    return makeTactic(Scales.chord_tones, chord.root, chord);\n  }\n  if (chord.isMajor()) {\n    const usePenta = Math.random() > level;\n    if (usePenta) {\n      return makeTactic(Scales.pentatonic, randomizeRoot(chord, [Intervals.M2, Intervals.P5], [0.2, 0.5]), chord);\n    }\n  }\n  if (chord.isMinor()) {\n    const usePenta = Math.random() > level;\n    if (usePenta) {\n      return makeTactic(Scales.minor_pentatonic, randomizeRoot(chord, [Intervals.M2, Intervals.P5], [0.2, 0.5]), chord);\n    }\n  }\n  if (chord.isDominant() || chord.isAugmented()){\n    if (Math.random() < 0.5) {\n      return makeTactic(Scales.pentatonic, randomizeRoot(chord, [Intervals.P4, Intervals.m7, Intervals.tritone], [0.4, 0.4, 0.1]), chord);\n    } else if (Math.random() < 0.8) {\n      return makeTactic(Scales.minor_pentatonic, randomizeRoot(chord, [Intervals.P4, Intervals.m7], [0.4, 0.4]), chord);\n    }\n  }\n  // TODO for Bm7b5 or Bdim, treat it like G7.\n  if (chord.isHalfDiminished()) {\n    if (Math.random() < 0.8) {\n      return makeTactic(Scales.minor_pentatonic, randomizeRoot(chord, [Intervals.P4, Intervals.m7, Intervals.m2, Intervals.m3, Intervals.tritone], [0.15, 0.15, 0.15, 0.15, 0.15]), chord);\n    }\n    // return makeTactic(Scales.half_diminished, chord.root, chord);\n  } else if (chord.isDiminished()) {\n    if (Math.random() < 0.8) {\n      return makeTactic(Scales.minor_pentatonic, randomizeRoot(chord, [Intervals.P4, Intervals.m7, Intervals.m2, Intervals.m3, Intervals.tritone], [0.15, 0.15, 0.15, 0.15, 0.15]), chord);\n    }\n    return makeTactic(Scales.diminished, chord.root, chord);\n    // TODO add harmonic minor (e.g. for Bdim7 use C harm. min.)\n  }\n  return makeTactic(Scales.diatonic, chord.root, chord);\n}\n\nfunction capitalizeFirstLetter(string) {\n  return string.replace(/\\b\\w/g, l => l.toUpperCase());\n}","import { Voice } from \"./voice.js\";\nimport { ChordChanges } from \"./chordChanges.js\";\nimport { Frac, makeFrac } from \"../fraction/fraction.js\";\nimport { KeySigChanges } from \"./keySigChanges.js\";\nimport { TimeSigChanges } from \"./timeSigChanges.js\";\nimport { ChangesOverTime } from \"./changesOverTime.js\";\nimport { SwingChanges } from \"./swingChanges.js\";\nimport { getPrettyDateStr } from \"../date-util/pretty.js\";\nimport { TacticChanges } from \"../solo-tactics/tactics.js\";\n\nexport class Song {\n  constructor({\n    title = getPrettyDateStr(Date.now()),\n    chordChanges = {},\n    pickup8n = makeFrac(0),\n    voices = [{}],\n    keySigChanges = {},\n    timeSigChanges = {},\n    tempo8nPerMinChanges = {defaultVal: 180},\n    swingChanges = {},\n    tacticChanges = {},\n  }) {\n    this.title = title;\n    this.voices = voices.map(voice => new Voice(voice));\n    this.pickup8n = new Frac(pickup8n);\n    this.chordChanges = new ChordChanges(chordChanges);\n    this.keySigChanges = new KeySigChanges(keySigChanges);\n    this.timeSigChanges = new TimeSigChanges(timeSigChanges);\n    this.tempo8nPerMinChanges = new ChangesOverTime(tempo8nPerMinChanges);\n    this.swingChanges = new SwingChanges(swingChanges);\n    this.tacticChanges = new TacticChanges(tacticChanges);\n  }\n\n  addVoice(voice, idx) {\n    if (idx === undefined) {\n      this.voices.push(voice);\n      return;\n    }\n    this.voices.splice(idx, 0, voice);\n  }\n  getVoice(idx) {\n    return this.voices[idx];\n  }\n  getSoundingVoices() {\n    return this.voices.filter(voice => voice.settings.volumePercent != 0)\n  }\n  getVisibleVoices() {\n    return this.voices.filter(voice => !voice.settings.hide)\n  }\n  getStart8n() {\n    return this.pickup8n;\n  }\n  getEnd8n() {\n    return this.voices.reduce((accum, voice) => {\n      if (voice.noteGps.length == 0) {\n        return accum;\n      }\n      const end8n = voice.noteGps[voice.noteGps.length - 1].end8n\n      return end8n.leq(accum) ? accum : end8n;\n    }, this.getStart8n());\n  }\n  getFinalChordTime8n() {\n    const changes = this.chordChanges.getChanges();\n    if (changes.length === 0) {\n      return makeFrac(0);\n    }\n    const lastChange = changes.slice(changes.length - 1)[0];\n    return lastChange.start8n;\n  }\n  // // [Frac].\n  // _getBarsInTime8n() {\n  //   const res = [];\n  //   let currTime8n = makeFrac(0);\n  //   let currBarDur8n = this.timeSigChanges.defaultVal.getDurPerMeasure8n();\n  //   const end8n = this.getStart8n();\n  //   while (currTime8n.lessThan(end8n)) {\n  //     res.push(currTime8n);\n  //     currTime8n = currTime8n.plus(currBarDur8n);\n  //   }\n  //   res.push(end8n);\n  //   return res;\n  // }\n  getChordChangesAcrossBars(skipProbability) {\n    skipProbability = skipProbability || 0;\n    const durPerMeasure8n = this.timeSigChanges.defaultVal.getDurPerMeasure8n();\n    const changes = this.chordChanges.changes;\n    return changes.flatMap((change, idx) => {\n      // For endings, we don't the chord to be repeated.\n      if (idx + 1 === changes.length) {\n        return [change];\n      }\n      const nextChange = changes[idx + 1];\n      const changeDur8n = nextChange.start8n.minus(change.start8n);\n      if (changeDur8n.leq(durPerMeasure8n)) {\n        return [change];\n      }\n      const measureNum = change.start8n.over(durPerMeasure8n).wholePart();\n      const nextMeasureNum = nextChange.start8n.over(durPerMeasure8n).wholePart();\n      const res = [change];\n      // Don't skip 2 in a row.\n      let skipped = false;\n      for (let idx = measureNum + 1; idx < nextMeasureNum; idx++) {\n        if (skipped || Math.random() >= skipProbability) {\n          res.push({val: change.val, start8n: durPerMeasure8n.times(idx)});\n          skipped = false;\n        } else {\n          skipped = true;\n        }\n      }\n      return res;\n    });\n  }\n}\n\nfunction msPer8nToBpm(msPer8n, num8nPerBeat) {\n  return 60000 / (msPer8n * num8nPerBeat);\n}\n// function bpmToSecPer8n(bpm, num8nPerBeat) {\n//   const bps = bpm / 60;\n//   const num8nPerSec = bps * num8nPerBeat;\n//   return 1 / num8nPerSec;\n// }","import { Song } from \"../song-sheet/song.js\";\nimport { makeSimpleQng } from \"../song-sheet/quantizedNoteGp.js\";\nimport { clefType, Voice } from \"../song-sheet/voice.js\";\nimport { Intervals } from \"../chord/interval.js\";\nimport { TacticChanges, toTactic } from \"../solo-tactics/tactics.js\";\n\nconst num8nPerBeat = 2;\nconst skipProbability = 0.25;\n\n// TODO we will need to add structural info, such as whether this part is copied from\n// another part, so that we can render a shorter version in the future.\nexport class SongPart {\n  constructor({\n    song = {}, // Song, which can have a melody or rest. Comping will be added in SongForm.\n    turnaroundStart8n = undefined, // Frac, time after which chord changes should be discarded when used as the final part.\n    compingStyle = CompingStyle.default,\n    syncopationPct = 20,\n    densityPct = 20,\n    transpose = 0,\n  }) {\n    this.song = new Song(song);\n    this.turnaroundStart8n = turnaroundStart8n;\n    this.compingStyle = compingStyle;\n    this.syncopationFactor = syncopationPct / 100;\n    this.densityFactor = densityPct / 100;\n    this.transpose = transpose;\n  }\n\n  updateTacticChanges() {\n    this.song.tacticChanges = new TacticChanges({});\n    const changes = this.song.getChordChangesAcrossBars(skipProbability);\n    changes.forEach(change => {\n      this.song.tacticChanges.upsert(change.start8n, toTactic(change.val, {level: 0.3}));\n    });\n  }\n\n  // TODO remove\n  updateComping() {\n    const changes = this.song.getChordChangesAcrossBars(skipProbability);\n    const bassQngs = [];\n    const trebleQngs = [];\n\n    const durFor4Beats = 4 * num8nPerBeat;\n    const durFor3Beats = 3 * num8nPerBeat;\n    const durFor2Beats = 2 * num8nPerBeat;\n    const maxBass = 56;\n    const minBass = 40;\n    const maxTreble = 76;\n    let prevBassNoteNum = 50;\n    let prevTrebleNoteNums = [66];\n    let isDenseBass = false;\n    changes.forEach((change, idx) => {\n      const isFinalNote = idx + 1 === changes.length;\n      if (idx === 0 && this.song.pickup8n.lessThan(change.start8n)) {\n        bassQngs.push(makeSimpleQng(this.song.pickup8n, change.start8n, []));\n        trebleQngs.push(makeSimpleQng(this.song.pickup8n, change.start8n, []));\n      }\n      // Bass\n      const end8n = isFinalNote ? this.song.getEnd8n() : changes[idx + 1].start8n;\n      const chord = change.val;\n      const bass = chord.bass || chord.root;\n      const bassNoteNum = genNearestNums([bass.toNoteNum()], [prevBassNoteNum], minBass, maxBass);\n      const dur8n = end8n.minus(change.start8n);\n      let quickBass = false;\n      if (dur8n.greaterThan(durFor3Beats) || dur8n.lessThan(durFor2Beats)) {\n        isDenseBass = false;\n      } else {\n        if (isDenseBass) {\n          isDenseBass = Math.random() < this.densityFactor * 4;\n        } else {\n          isDenseBass = Math.random() < this.densityFactor * 1.5;\n        }\n      }\n      let isDenseBaseForLongDur =  (dur8n.greaterThan(durFor3Beats) && Math.random() < this.densityFactor * 3);\n      if (dur8n.greaterThan(durFor4Beats)) {\n        isDenseBaseForLongDur = true;\n      }\n      // Make this higher than bassNoteNum unless it's higher than maxBass\n      let bassNoteNum2 = chord.root.toNoteNum(4);\n      if (chord.bass) {\n        if (bassNoteNum2 > maxBass) {\n          bassNoteNum2 -= 12;\n        }\n      } else {\n        bassNoteNum2 = chord.root.toNoteNum(3) + chord.getFifthInterval();\n        if (bassNoteNum2 < bassNoteNum && bassNoteNum2 + 12 < maxBass) {\n          bassNoteNum2 += 12;\n        }\n      }\n      if ((isDenseBaseForLongDur || isDenseBass) && !isFinalNote) {\n        let syncopateBass = dur8n.geq(8) ? Math.random() < this.syncopationFactor : Math.random() < this.syncopationFactor / 1.5;\n        if (dur8n.equals(durFor3Beats)) {\n          syncopateBass = false;\n        }\n        const dur8nFromEnd = syncopateBass ? 1 : 2;\n        bassQngs.push(makeSimpleQng(change.start8n, end8n.minus(dur8nFromEnd), [bassNoteNum]));\n        bassQngs.push(makeSimpleQng(end8n.minus(dur8nFromEnd), end8n, [bassNoteNum2]));\n        prevBassNoteNum = bassNoteNum2;\n      } else {\n        quickBass = dur8n.leq(durFor2Beats) ? Math.random() < this.syncopationFactor * 1.5 : false;\n        if (quickBass && !isFinalNote) {\n          bassQngs.push(makeSimpleQng(change.start8n, change.start8n.plus(num8nPerBeat - 1), [bassNoteNum]));\n          bassQngs.push(makeSimpleQng(change.start8n.plus(num8nPerBeat - 1), end8n, [bassNoteNum2]));\n          prevBassNoteNum = bassNoteNum2;\n        } else {\n          bassQngs.push(makeSimpleQng(change.start8n, end8n, [bassNoteNum]));\n          prevBassNoteNum = bassNoteNum;\n        }\n      }\n      \n      const minTreble = Math.max(bassNoteNum, bassNoteNum2, 51) + 1;\n      // Treble\n      const specifiedColorNoteNums = chord.getSpecifiedColorNoteNums();\n      const trebleNoteNums = genNearestNums(specifiedColorNoteNums, prevTrebleNoteNums, minTreble, maxTreble);\n      // Tuned for the 3/4 meter song, \"Someday My Prince Will Come\"\n      let isDenseTreble = false;\n      if (dur8n.greaterThan(durFor4Beats)) {\n        isDenseTreble = true;\n      } else if (dur8n.geq(durFor4Beats)) {\n        isDenseTreble = (isDenseBaseForLongDur ?\n          Math.random() < this.densityFactor * 3 :\n          Math.random() < this.densityFactor * 4);\n      } else if (dur8n.geq(durFor3Beats)) {\n        isDenseTreble = (isDenseBaseForLongDur ?\n          Math.random() < this.densityFactor :\n          Math.random() < this.densityFactor * 2);\n      }\n      if (isDenseTreble && !isFinalNote) {\n        const isSimpleMinorFour = (\n          chord.isMinor() && !chord.hasExtension() &&\n          Math.abs(chord.root.toNoteNum() - this.song.keySigChanges.defaultVal.toNoteNum()) === Intervals.P4);\n        const third = chord.root.toNoteNum() + chord.getThirdInterval();\n        const seventh = chord.root.toNoteNum() + chord.getSeventhInterval();\n        const fifth = chord.root.toNoteNum() + chord.getFifthInterval();\n        const interval9Or11 = chord.isMinor() || chord.isDiminished() ? Intervals.P4 :  Intervals.M2;\n        const ninthOr11th = chord.root.toNoteNum() + interval9Or11;\n        const interval6Or9Or11 = Math.random() < 0.6 ? Intervals.M6 : (Math.random() < 0.5 ? Intervals.M2 : Intervals.P4);\n        const useFifth = Math.random() < 0.6;\n        const color = useFifth ? fifth : ninthOr11th;\n        const intervalsToUse = isSimpleMinorFour ? [third, fifth, chord.root.toNoteNum() + interval6Or9Or11] : [third, seventh, color];\n        let trebleNoteNums2 = genNearestNums(intervalsToUse, trebleNoteNums, minTreble, maxTreble);\n        // For this to work, we need to unavoid clusters of 3 notes, in particular, if 11th or 13th is involved,\n        // move them up and octave or move the 3 or 5 or 7 down an octave.\n        // const colorNoteNums2 = shuffle(\n        //   chord.getSpecifiedColorNoteNums(/* includeAll= */true, this.song.keySigChanges.defaultVal)).slice(0, 3);\n        // let trebleNoteNums2 = genNearestNums(colorNoteNums2, trebleNoteNums, minTreble, maxTreble);\n        const topTrebleNoteNum = Math.max(...trebleNoteNums);\n        const topTrebleNoteNum2 = Math.max(...trebleNoteNums2);\n        if (topTrebleNoteNum === topTrebleNoteNum2) {\n          if (Math.random() < 0.4) {\n            trebleNoteNums2 = moveUp(trebleNoteNums2);\n            if (Math.random() < 0.6) {\n              trebleNoteNums2 = moveUp(trebleNoteNums2);\n            }\n          } else {\n            trebleNoteNums2 = moveDown(trebleNoteNums2);\n          }\n        }\n        const syncopateFirstBeat = Math.random() < this.syncopationFactor / 2;\n        let dur8nFromEnd;\n        if (dur8n.equals(durFor3Beats)) {\n          dur8nFromEnd = num8nPerBeat;\n        } else {\n          const syncopateLatterBeat = Math.random() < this.syncopationFactor;\n          const delaySyncopation = Math.random() < 0.25;\n          const syncAmount = delaySyncopation ? -1 : 1;\n          dur8nFromEnd = syncopateLatterBeat ? num8nPerBeat * 2 + syncAmount : num8nPerBeat * 2;\n        }\n        if (syncopateFirstBeat) {\n          trebleQngs.push(makeSimpleQng(change.start8n, change.start8n.plus(num8nPerBeat - 1), []));\n          trebleQngs.push(makeSimpleQng(change.start8n.plus(num8nPerBeat - 1), end8n.minus(dur8nFromEnd), trebleNoteNums));\n        } else {\n          trebleQngs.push(makeSimpleQng(change.start8n, end8n.minus(dur8nFromEnd), trebleNoteNums));\n        }\n        trebleQngs.push(makeSimpleQng(end8n.minus(dur8nFromEnd), end8n, trebleNoteNums2));\n        prevTrebleNoteNums = trebleNoteNums2;\n      } else {\n        const syncopateFirstBeat = dur8n.leq(durFor2Beats) ? Math.random() < this.syncopationFactor * 1.5 : Math.random() < this.syncopationFactor;\n        if (syncopateFirstBeat && !isFinalNote) {\n          if (Math.random() < (quickBass ? 0.2 : 0.9) || change.start8n.plus(num8nPerBeat).equals(end8n)) {\n            trebleQngs.push(makeSimpleQng(change.start8n, change.start8n.plus(num8nPerBeat - 1), []));\n            trebleQngs.push(makeSimpleQng(change.start8n.plus(num8nPerBeat - 1), end8n, trebleNoteNums));\n          } else {\n            trebleQngs.push(makeSimpleQng(change.start8n, change.start8n.plus(num8nPerBeat), []));\n            trebleQngs.push(makeSimpleQng(change.start8n.plus(num8nPerBeat), end8n, trebleNoteNums));\n          }\n        } else {\n          trebleQngs.push(makeSimpleQng(change.start8n, end8n, trebleNoteNums));\n        }\n        prevTrebleNoteNums = trebleNoteNums;\n      }\n    });\n    const trebleVoice = new Voice({\n      noteGps: trebleQngs, clef: clefType.Treble,\n    });\n    const bassVoice = new Voice({noteGps: bassQngs, clef: clefType.Bass});\n    // // Having just one rest note means we should replace the voices entirely.\n    // if (this.song.voices[0].noteGps.length === 1 && this.song.voices[0].noteGps[0].midiNotes.length === 0 ) {\n    //   this.song.voices = [trebleVoice, bassVoice];\n    // } else {\n      trebleVoice.settings.hide = true;\n      bassVoice.settings.hide = true;\n      this.song.addVoice(trebleVoice);\n      this.song.addVoice(bassVoice);\n    // }\n  }\n}\n\nfunction moveUp(noteNums) {\n  const bottom = Math.min(...noteNums);\n  const res = noteNums.filter(num => num !== bottom);\n  res.push(bottom + 12);\n  return res;\n}\n\nfunction moveDown(noteNums) {\n  const top = Math.max(...noteNums);\n  const res = noteNums.filter(num => num !== top);\n  res.push(top - 12);\n  return res;\n}\n\nfunction genNearestNums(noteNums, prevNoteNums, min, max) {\n  return noteNums.map(noteNum => fixNoteNum(genNearestNum(noteNum, prevNoteNums), min, max));\n}\n\nfunction genNearestNum(noteNum, prevNoteNums) {\n  let minDist = null;\n  let ans = noteNum;\n  prevNoteNums.forEach(prevNoteNum => {\n    let curr = noteNum;\n    while (Math.abs(curr - prevNoteNum) > Math.abs(curr + 12 - prevNoteNum)) {\n      curr += 12;\n    }\n    while (Math.abs(curr - prevNoteNum) > Math.abs(curr - 12 - prevNoteNum)) {\n      curr -= 12;\n    }\n    const dist = Math.abs(curr - prevNoteNum);\n    if (minDist === null || dist <= minDist) {\n      minDist = dist;\n      ans = curr;\n    }\n  });\n  return ans;\n}\n\nfunction fixNoteNum(noteNum, min, max) {\n  while (noteNum < min) {\n    noteNum += 12;\n  }\n  while (noteNum > max) {\n    noteNum -= 12;\n  }\n  return noteNum;\n}\n\n// TODO move this to comping.js?\nexport const CompingStyle = Object.freeze({\n  default: 'default',\n})","import { makeFrac } from \"../fraction/fraction.js\";\n\n// Approach: start with deterministic algo\n// No need to worry about dur > durPerMeasure because we will break the chordLocs up by the bar lines.\n// Also, consider merging 2 chord locs, if they add up to 4 beats.\n\n// Returns [Rhythm], i.e.\n// [{chordLoc: chordLoc, bassPattern: [Segment], treblePattern: [Segment]}]\nexport function genRhythms(songPart, strategy) {\n\n}\n\n// DSL used to denote the items within each pattern.\nconst SegmentType = Object.freeze({\n  Rest: 'Rest',\n  Bass: 'Bass',\n  Shell: 'Shell',\n  UpperStructure: 'UpperStructure',\n  Note: 'Note',\n  Sustain: 'Sustain',\n});\nconst rest = {\n  type: SegmentType.Rest,\n};\nconst _ = {\n  type: SegmentType.Sustain,\n};\nconst bass = {\n  type: SegmentType.Bass,\n};\nconst bass1 = {\n  type: SegmentType.Bass,\n  variation: 1,\n};\nconst shell = {\n  type: SegmentType.Shell,\n};\nconst upper = {\n  type: SegmentType.UpperStructure,\n};\nconst note0 = {\n  type: SegmentType.Note,\n  variation: 0,\n};\nconst note1 = {\n  type: SegmentType.Note,\n  variation: 1,\n};\nconst note2 = {\n  type: SegmentType.Note,\n  variation: 2,\n};\nconst note3 = {\n  type: SegmentType.Note,\n  variation: 3,\n};\n\nconst bassPatterns = [{\n  name: '1_of_k',\n  bassPattern: [bass],\n}, {\n  name: '1_of_k_plus_last_beat',\n  bassPattern: [bass],\n  // This only work for non-compound meter. Need to use 3 instead of 2 for 6/8 or 9/8.\n  addFromRight: {segment: bass, dur8nFromRight: makeFrac(2)},\n}, {\n  name: '1_of_k_plus_last_up_beat',\n  bassPattern: [bass],\n  addFromRight: {segment: bass, dur8nFromRight: makeFrac(1)},\n}, {\n  name: '2_of_4',\n  bassPattern: [bass, bass1],\n  requiredDur8n: makeFrac(8),\n}];\n\nconst treblePatterns = [{\n  name: '1_of_k',\n  treblePattern: [shell],\n}, {\n  name: '2_of_4',\n  treblePattern: [shell, shell],\n  requiredDur8n: makeFrac(8),\n}, {\n  name: 'transition',\n  treblePattern: [shell, _, _, _, shell, _, note0, note1],\n  requiredDur8n: makeFrac(8),\n}, {\n  name: 'syncopated_transition',\n  treblePattern: [shell, _, _, shell, _, note0, note1, _],\n  requiredDur8n: makeFrac(8),\n}];\n\nconst fullPatterns = [{\n  name: '1_of_k',\n  bassPatternName: '1_of_k',\n  treblePatternName: '1_of_k',\n}, {\n  name: '2_of_4',\n  bassPatternName: '1_of_k',\n  treblePatternName: '2_of_4',\n  requiredDur8n: makeFrac(8),\n}, {\n  name: '2_of_4_var1',\n  bassPatternName: '1_of_k_plus_last_beat',\n  treblePatternName: '2_of_4',\n  requiredDur8n: makeFrac(8),\n}, {\n  name: 'transition',\n  bassPatternName: '1_of_k',\n  treblePatternName: 'transition',\n  requiredDur8n: makeFrac(8),\n}, {\n  name: 'syncopated_transition',\n  bassPatternName: '1_of_k_plus_last_up_beat',\n  treblePatternName: 'syncopated_transition',\n  requiredDur8n: makeFrac(8),  \n}];\n\n// Usage:\n// The fallback pattern will be the one without requiredDur8n or\n// if unspecified, the simple full pattern for dur8n.\n\n// Order by increasing order of importance.\nexport const nameToStrategy = {\n  basic: [{\n    fullPatternName: '2_of_4',\n    conditions: {\n      requiredDur8n: makeFrac(8),\n    },\n  }, {\n    fullPatternName: '2_of_4_var1',\n    conditions: {\n      requiredDur8n: makeFrac(8),\n      mustBeFollowing: '2_of_4',\n    },\n  }, {\n    name: 'transition',\n    fullPatternName: 'transition',\n    conditions: {\n      requiredDur8n: makeFrac(8),\n      isLastChord: true,\n      // How do you tell? Dominant, sus, dim or augmented.\n      isHalfCadence: true,\n    },\n  }],\n};\n","import { instruments } from \"../musical-sound/musicalSound.js\";\nimport { shuffle } from \"../array-util/arrayUtil.js\";\nimport { mod } from \"../math-util/mathUtil.js\";\n\nexport function orchestrate(songParts, songForm) {\n  if (!songParts.length || !songParts[0].song.voices.length) {\n    return;\n  }\n  const numVoices = songParts[0].song.voices.length;\n  const hasMel = numVoices >= 3;\n  const melodyIdx = hasMel ? 0 : null;\n  const voiceIndices = [...Array(numVoices).keys()];\n  // const compingIdx = numVoices - 2;\n  const bassIdx = numVoices - 1;\n  const repeatPartIndices = songForm.getRepeatPartIndices();\n  const repeatPartIndicesSet = new Set(repeatPartIndices);\n  shuffle(compingSettings);\n  let voiceIdxToSettingsIdx = {};\n  voiceIndices.forEach(idx => {\n    voiceIdxToSettingsIdx[idx] = mod(idx, compingSettings.length);\n  });\n  // Why + 2?\n  let numChannelUsed = bassIdx + 2;\n  let muteMelody = false;\n  songParts.forEach((part, partIdx) => {\n    part.song.voices.forEach((voice, voiceIdx) => {\n      // Mute the melody for a repeated part.\n      if (voiceIdx === melodyIdx) {\n        if (repeatPartIndicesSet.has(partIdx) && partIdx > 0 && numChannelUsed < 16) {\n          muteMelody = true;\n        }\n        if (muteMelody) {\n          voice.settings.instrument = compingSettings[voiceIdxToSettingsIdx[voiceIdx]].instrument;\n          voice.settings.volumePercent = 0;\n          return;\n        }\n      }\n      if (repeatPartIndicesSet.has(partIdx)  && partIdx > 0 && voiceIdx !== melodyIdx && numChannelUsed < 16) {\n        const incr = repeatPartIndices.length > 1 && repeatPartIndices[1] === partIdx ? -1 : 1;\n        voiceIdxToSettingsIdx[voiceIdx] = mod((voiceIdxToSettingsIdx[voiceIdx] || 0) + incr, compingSettings.length);\n        numChannelUsed++;\n      }\n      const setting = compingSettings[voiceIdxToSettingsIdx[voiceIdx]];\n      voice.settings.instrument = setting.instrument;\n      let relVolPct = 75;\n      if (voiceIdx === bassIdx) {\n        relVolPct = 90;\n      } else if (voiceIdx === melodyIdx) {\n        relVolPct = 100;\n      }\n      voice.settings.volumePercent = relVolPct * setting.volumePercent / 100;\n    });\n  });\n}\n\nconst instrumentSettings = {\n  acoustic_grand_piano: {\n    instrument: instruments.acoustic_grand_piano,\n    volumePercent: 65,\n  },\n  electric_piano_2: {\n    instrument: instruments.electric_piano_2,\n    volumePercent: 85,\n  },\n  electric_guitar_clean: {\n    instrument: instruments.electric_guitar_clean,\n    volumePercent: 25,\n  },\n  electric_piano_1: {\n    instrument: instruments.electric_piano_1,\n    volumePercent: 110,\n  },\n}\n\nconst compingSettings = [\n  instrumentSettings.electric_piano_1,\n  instrumentSettings.acoustic_grand_piano,\n  instrumentSettings.electric_piano_2,\n  instrumentSettings.electric_guitar_clean,\n];\n\n","import { Song } from \"../song-sheet/song.js\";\nimport { SongPart } from \"./songPart.js\";\nimport { Voice, clefType } from \"../song-sheet/voice.js\";\nimport { genComping } from \"../music-comping/comping.js\";\nimport { orchestrate } from \"./orchestrate.js\";\nimport { fromNoteNumWithFlat } from \"../chord/spell.js\";\n\nexport class SongForm {\n  constructor({\n    title = '',\n    // Not yet sequenced (i.e. to be sequenced in getSequencedParts)\n    parts = [], // [SongPart]\n    intro = '',\n    body = [], // [String]\n    outro = '',\n    numRepeats = 0,\n  }) {\n    this.title = title;\n    this.parts = parts.map(part => new SongPart(part));\n    this.intro = intro;\n    this.body = body;\n    this.outro = outro;\n    this.numRepeats = numRepeats;\n  }\n\n  // Sequenced via numRepeats and part.transposed\n  getSequencedParts() {\n    const songParts = this.getClonedParts();\n    transposeSongParts(songParts);\n    return songParts;\n  }\n\n  getParts() {\n    return this.parts;\n  }\n  getClonedParts() {\n    const nameToPart = {};\n    this.parts.forEach(part => {\n      nameToPart[part.song.title] = part;\n    });\n    const sequence = [];\n    if (this.intro) {\n      sequence.push(this.intro);\n    }\n    for (let idx = 0; idx < this.numRepeats + 1; idx++) {\n      sequence.push(...this.body);\n    }\n    if (this.outro) {\n      sequence.push(this.outro);\n    }\n    return sequence.map(name => new SongPart(nameToPart[name]));\n  }\n\n  getRepeatPartIndices() {\n    const res = [0];\n    const sequence = [];\n    if (this.intro) {\n      sequence.push(this.intro);\n    }\n    for (let idx = 0; idx < this.numRepeats; idx++) {\n      sequence.push(...this.body);\n      res.push(sequence.length);\n    }\n    return res;\n  }\n\n  // TODO disable addDrumBeat in songReplay.js and do it here so that we can mute it when we want\n  //   (add volumePercent = 0 at time 0 to end of first part)\n  toFullyArrangedSong() {\n    const parts = this.getSequencedParts();\n    if (parts.length === 0) {\n      throw 'TODO: Handle no parts gracefully';\n    }\n  \n    parts.forEach((part, idx) => {\n      if (idx === parts.length - 1 && part.turnaroundStart8n) {\n        part.song.chordChanges.removeWithinInterval(part.turnaroundStart8n);\n      }\n      part.updateComping();\n      part.updateTacticChanges();\n    });\n    \n    // Must be done after comping is done.\n    orchestrate(parts, this);\n  \n    let songRes;\n    parts.forEach(part => {\n      songRes = appendToSong(songRes, part, this.title);\n    });\n    return songRes;\n  }\n}\n\nfunction transposeSongParts(songParts) {\n  songParts.forEach(part => {\n    const song = part.song;\n    const oldKey = song.keySigChanges.defaultVal;\n    const newKey = fromNoteNumWithFlat(oldKey.toNoteNum() + part.transpose);\n    // 1. Chords\n    song.chordChanges.getChanges().forEach(change => {\n      change.val.shift(oldKey, newKey);\n    });\n    \n    // 2. Voices\n    song.voices.forEach(voice => {\n      voice.noteGps.forEach(noteGp => {\n        noteGp.midiNotes.forEach(note => {\n          note.noteNum = note.noteNum + part.transpose;\n          if (note.spelling) {\n            note.spelling = note.spelling.shift(oldKey, newKey);\n          }\n        });\n      });\n    });\n\n    // 3. Key Sig\n    song.keySigChanges.defaultVal = newKey;\n    song.keySigChanges.changes.forEach(change => {\n      change.val = fromNoteNumWithFlat(change.val.toNoteNum() + part.transpose);\n    })\n  });\n}\n\n\nfunction addComping(song, parts) {\n  const {bassQngs, trebleQngs} = genComping(parts);\n  song.voices = [\n    new Voice({noteGps: trebleQngs, clef: clefType.Treble}),\n    new Voice({noteGps: bassQngs, clef: clefType.Bass}),\n  ];\n}\n\nfunction appendToSong(song, part, title) {\n  if (!song) {\n    song = new Song(part.song);\n    song.title = title;\n    return song;\n  }\n\n  const shift8n = song.getEnd8n();\n  song.voices.forEach((voice, idx) => {\n    // Currently a later part can have fewer voices than an earlier part.\n    if (idx >= part.song.voices.length) {\n      return;\n    }\n    // If the note gp is a rest and it's a pickup, don't upsert it.\n    voice.upsert(part.song.voices[idx].noteGps.filter(ng => ng.midiNotes.length > 0 || ng.start8n.geq(0)), shift8n);\n    // Take pickup notes, i.e. start8n of a non-rest noteGp, into account.\n    let start8n = shift8n;\n    const firstNoteGp = voice.noteGps.find(noteGp => !noteGp.isRest);\n    if (firstNoteGp && firstNoteGp.start8n.lessThan(0)) {\n      start8n = shift8n.plus(firstNoteGp.start8n);\n    }\n    voice.settingsChanges.upsert(start8n, part.song.voices[idx].settings);\n  });\n  part.song.chordChanges.getChanges().forEach(change => {\n    song.chordChanges.upsert(change.start8n.plus(shift8n), change.val);\n  });\n  return song;\n}\n\n","import { Frac, makeFrac } from \"../fraction/fraction.js\";\nimport * as math from '../math-util/mathUtil.js';\n\nexport class MidiPattern {\n  constructor({\n    evtsArrs,\n    durPerDivision8n,\n  }) {\n    this.evtsArrs = evtsArrs;\n    this.durPerDivision8n = new Frac(durPerDivision8n);\n  }\n}\n\nexport function genMidiPattern(timeSig, isSwinging, numBeatDivisions) {\n  const beatInfo = computeBeatInfo(timeSig, numBeatDivisions);\n  const strongBeats = genStrongBeats(beatInfo.numBeats);\n  const evtsArrs = genNoteOnEvtsArrs({\n    strongBeats: strongBeats, numBeatDivisions: beatInfo.numBeatDivisions,\n    isSwinging: beatInfo.numBeatDivisions > 2 ? false : isSwinging,\n  });\n  return new MidiPattern({\n    evtsArrs: evtsArrs,\n    durPerDivision8n: beatInfo.durPerDivision8n,\n  });\n}\n\nexport function computeBeatInfo(timeSig, numBeatDivisions) {\n  const {upperNumeral, lowerNumeral} = timeSig;\n  const periodDur8n = makeFrac(upperNumeral * 8, lowerNumeral);\n  let numBeats = timeSig.isCompound() ? upperNumeral / 3 : upperNumeral;\n  numBeatDivisions = numBeatDivisions || (timeSig.isCompound() ? 3 : 2);\n  return {\n    numBeats: numBeats,\n    numBeatDivisions: numBeatDivisions,\n    durPerDivision8n: periodDur8n.over(numBeats * numBeatDivisions),\n    durPerBeat8n: periodDur8n.over(numBeats),\n    period8n: periodDur8n,\n  };\n}\n\nfunction genStrongBeats(numBeats) {\n  const strongBeats = []\n  for (let idx = 0; idx < numBeats; idx++) {\n    if (idx == 0) {\n      strongBeats.push([{noteNum: 36, velocity: 90}, {noteNum: 42, velocity: 30}]);\n      continue;\n    }\n    if (idx == numBeats - 1) {\n      strongBeats.push([{noteNum: 37, velocity: 30}, {noteNum: 42, velocity: 30}]);\n      continue;\n    }\n    if (math.mod(idx, 2) == 0) {\n      strongBeats.push([{noteNum: 36, velocity: 30}, {noteNum: 42, velocity: 30}]);\n      continue;\n    }\n    strongBeats.push([{noteNum: 36, velocity: 30}, {noteNum: 44, velocity: 60}]);\n  }\n  strongBeats.forEach(strongBeat => strongBeat.forEach(evt => evt.isStrongBeat = true));\n  return strongBeats;\n}\n\nfunction genNoteOnEvtsArrs({strongBeats, numBeatDivisions, isSwinging}) {\n  const skipDrumOnStrongerBeat = strongBeats.length % 2 === 0 && isSwinging;\n  return strongBeats.flatMap((strongBeat, idx) => {\n    const res = [strongBeat];\n    for (let i = 0; i < numBeatDivisions - 2; i++) {\n      res.push([{noteNum: 42, velocity: 30}]);\n    }\n    if (idx < strongBeats.length - 1) {\n      if (skipDrumOnStrongerBeat && idx % 2 === 0) {\n        res.push([]);\n      } else {\n        res.push([{noteNum: 42, velocity: 10}]);\n      }\n    } else {\n      res.push([{noteNum: 38, velocity: 10}, {noteNum: 42, velocity: 30}]);\n    }\n    return res;\n  });\n}","\nimport { makeFrac } from \"../fraction/fraction.js\";\nimport { Chord } from '../chord/chord.js';\nimport { fromNoteNumWithFlat, makeSpelling } from \"../chord/spell.js\";\nimport { TimeSig } from \"../song-sheet/timeSigChanges.js\";\nimport { Swing } from \"../song-sheet/swingChanges.js\";\nimport { chunkArray } from \"../array-util/arrayUtil.js\";\nimport { Song } from \"../song-sheet/song.js\";\nimport { QuantizedNoteGp } from \"../song-sheet/quantizedNoteGp.js\";\nimport { SongForm } from \"./songForm.js\";\nimport { CompingStyle, SongPart } from \"./songPart.js\";\nimport { computeBeatInfo } from \"../musical-beat/pattern.js\";\n\n\nexport function genChunkedLocs(gridData) {\n  const chordLocs = parseChordLocations(gridData);\n  const headerLocs = parseHeaderLocations(gridData);\n  const chordHeaderLocs = combineChordAndHeader(chordLocs, headerLocs, gridData.length);\n  const chunkedLocs = chunkLocationsByPart(chordHeaderLocs);\n  const chunkedLocsWithPickup = extractPickup(chunkedLocs);\n\n  return chunkedLocsWithPickup;\n}\n\nexport function genChordOnlySongForm(chunkedLocsWithPickup, initialHeaders, keyVals) {\n  const songParts = genChordOnlySongParts(chunkedLocsWithPickup, initialHeaders);\n  const possIntro = songParts.find(part => part.song.title.trim().toLowerCase() === 'intro');\n  const possOutro = songParts.find(part => part.song.title.trim().toLowerCase() === 'outro');\n  const body = songParts.filter(\n    part => ['intro', 'outro'].indexOf(part.song.title.trim().toLowerCase()) < 0\n  ).map(part => part.song.title);\n  return new SongForm({\n    title: keyVals.title, parts: songParts,\n    intro: possIntro ? possIntro.song.title : '',\n    outro: possOutro ? possOutro.song.title : '',\n    body: body,\n    numRepeats: initialHeaders[HeaderType.Repeat],\n  });\n}\n\n// InitialHeaders are the headers used by the very first part of the song\n// and is displayed on the sidebar. The values are determined by (in order of importance)\n// 1. url params.\n// 2. header in the first song part.\n// 3. default values if they are required.\n// 4. undefined if not required.\nexport function createInitialHeaders(chunkedLocsWithPickup, keyVals) {\n  const song = new Song({});\n  const headers = {};\n  headers[HeaderType.Meter] = song.timeSigChanges.defaultVal;\n  headers[HeaderType.Tempo] = song.tempo8nPerMinChanges.defaultVal;\n  headers[HeaderType.Key] = song.keySigChanges.defaultVal;\n  headers[HeaderType.Swing] = song.swingChanges.defaultVal;\n  headers[HeaderType.Transpose] = 0;\n  headers[HeaderType.Syncopation] = 20;\n  headers[HeaderType.Density] = 20;\n  headers[HeaderType.Repeat] = 0;\n\n  if (chunkedLocsWithPickup.length > 0 &&\n      chunkedLocsWithPickup[0].chordHeaderLocs.length > 0) {\n    Object.entries(chunkedLocsWithPickup[0].chordHeaderLocs[0].headers).forEach(([key, val]) => {\n      headers[key] = val;\n    });\n  }\n  Object.entries(keyVals).forEach(([key, val]) => {\n    if (!HeaderType[key]) {\n      return;\n    }\n    const res = processKeyVal(\n      key.trim().toLowerCase(),\n      val.trim());\n    if (!res) {\n      return;\n    }\n    headers[res.type] = res.value;\n  });\n\n  if (!headers[HeaderType.Subdivision]) {\n    headers[HeaderType.Subdivision] = computeBeatInfo(headers[HeaderType.Meter]).numBeatDivisions;\n  }\n  return headers;\n}\n\n\nfunction getInitialTransposedNum(headers) {\n  let transposedNum = 0;\n  if (headers[HeaderType.TransposedKey] !== undefined) {\n    transposedNum += headers[HeaderType.TransposedKey].toNoteNum() - headers[HeaderType.Key].toNoteNum();\n    if (transposedNum >= 6) {\n      transposedNum -= 12;\n    }\n  }\n  if (headers[HeaderType.TransposedNum] !== undefined) {\n    transposedNum += headers[HeaderType.TransposedNum];\n  }\n  return transposedNum;\n}\n\n// TODO Separate local and global header, i.e. how they are interpreted and how\n// they can be set; e.g. allowing setting local headers from the UI and url params\n// only if they are never changed later or add some warning about unexpected behavior.\n\n// Returns [{song: Song, compingStyle: CompingStyle}]\n// TODO implement this spec\n// What belongs in the global header types?\n// Global headers are meant for every part of the song.\n// Should be a relative value in order to be combined with the local header values.\n// E.g. TransposedKey, TransposedNum, Repeat, TempoMultiplier\n// Local header types are those that can changed for each part or even in the middle of a part.\n// Local header are inherited from previous parts. Should be an absolute value.\n// Currently, some local headers are confused as global header because they\n// are usually only set once in the beginning,\n// e.g. Meter, Key, Tempo, Subdivision, Swing\nfunction genChordOnlySongParts(chunkedLocsWithPickup, initialHeader) {\n  const partNameToPart = {};\n  const partNameToInitialHeader = {};\n  const initialTranposedNum = getInitialTransposedNum(initialHeader);\n\n  let currTimeSig;\n  let currTempo;\n  let currSwing;\n  let currSyncopation;\n  let currDensity;\n\n  let prevSong;\n\n  return chunkedLocsWithPickup.map((chunk, idx) => {\n    const firstLoc = chunk.chordHeaderLocs[0];\n    // Copy the header because we will modify it below.\n    const headers = Object.assign({}, firstLoc.headers);\n\n    let song = new Song({});\n    const partForCopying = partNameToPart[headers[HeaderType.Copy]];\n    if (partForCopying) {\n      song = new Song(partForCopying.song);\n      const headersForMerging = partNameToInitialHeader[headers[HeaderType.Copy]];\n      for (const [key, value] of Object.entries(headersForMerging)) {\n        if (!(key in headers)) {\n          headers[key] = value;\n        }\n      }\n    } else {\n      for (const [key, value] of Object.entries(initialHeader)) {\n        // for idx > 0, only apply the global header types.\n        if (!(key in headers) && (idx == 0 || GlobalHeaderType.has(key))) {\n          headers[key] = value;\n        }\n      }\n    }\n    song.title = headers[HeaderType.Part];\n\n    // Pull data from headers or previous headers.\n    // Lint(If change): sync with createInitialHeaders\n    if (headers[HeaderType.Meter] !== undefined) {\n      currTimeSig = headers[HeaderType.Meter];\n    }\n    song.timeSigChanges.defaultVal = currTimeSig;\n\n    if (headers[HeaderType.Tempo] !== undefined) {\n      currTempo = headers[HeaderType.Tempo];\n    }\n    if (headers[HeaderType.TempoMultiplier] !== undefined) {\n      currTempo = headers[HeaderType.TempoMultiplier] / 100 * currTempo;\n    }\n    \n    song.tempo8nPerMinChanges.defaultVal = currTempo;\n\n    let currKeySig = headers[HeaderType.Key];\n    if (!currKeySig && prevSong) {\n      currKeySig = prevSong.keySigChanges.getChange(prevSong.getEnd8n()).val;\n    }\n    if (currKeySig) {\n      song.keySigChanges.defaultVal = currKeySig;\n      // Set the header key because it may need to be inherited by a later part via Copy.\n      // TODO think about whether this is the correct thing to do, but only for Key\n      // i.e. is Key the only local thing we should explicitly set for Copy? Meter, etc.\n      headers[HeaderType.Key] = currKeySig;\n    }\n\n    const transpose = (\n      headers[HeaderType.Transpose] === undefined ? initialTranposedNum :\n      initialTranposedNum + headers[HeaderType.Transpose]\n    );\n\n    if (headers[HeaderType.Swing] !== undefined) {\n      currSwing = headers[HeaderType.Swing];\n    }\n    song.swingChanges.defaultVal = currSwing;\n\n    if (headers[HeaderType.Syncopation] !== undefined) {\n      currSyncopation = headers[HeaderType.Syncopation];\n    }\n\n    if (headers[HeaderType.Density] !== undefined) {\n      currDensity = headers[HeaderType.Density];\n    }\n\n    // Relative to the current part.\n    const idxToTime8n = absoluteIdx => {\n      const durPerCell8n = currTimeSig.getDurPerMeasure8n();\n      // Flipping because absoluteIdx can be either a Number or Frac.\n      const relIdx = firstLoc.fractionalIdx.minus(absoluteIdx).negative();\n      return relIdx.times(durPerCell8n);\n    };\n    if (chunk.pickup.length > 0) {\n      song.pickup8n = idxToTime8n(chunk.pickup[0].fractionalIdx)\n    }\n\n    chunk.pickup.concat(chunk.chordHeaderLocs).forEach(loc => {\n      if (loc.headers) {\n        const time8n = idxToTime8n(loc.fractionalIdx);\n        if (loc.headers[HeaderType.Key]) {\n          song.keySigChanges.upsert(time8n, loc.headers[HeaderType.Key]);\n        }\n        // TODO process other types of header type.\n      }\n      if (loc.chordType === ChordInfoType.Slot || loc.chordType === ChordInfoType.TurnAroundStart) {\n        return;\n      }\n      const isFirstChordInCell = loc.fractionalIdx.isWhole();\n      if (isFirstChordInCell) {\n        // Clear out all the chords in the duration occupied by the cell.\n        song.chordChanges.removeWithinInterval(\n          idxToTime8n(loc.cellIdx),\n          idxToTime8n(loc.cellIdx + 1));\n      }\n\n      if (loc.chordType === ChordInfoType.Chord) {\n        const time8n = idxToTime8n(loc.fractionalIdx);\n        song.chordChanges.upsert(time8n, loc.chord);\n      }\n    });\n    const lastLoc = chunk.chordHeaderLocs[chunk.chordHeaderLocs.length - 1];\n    const end8n = idxToTime8n(lastLoc.cellIdx + 1);\n    song.chordChanges.removeWithinInterval(end8n);\n\n    // Even though we will not use this voice later. We need it now for\n    // getEnd8n to work correctly.\n    song.getVoice(0).noteGps = [new QuantizedNoteGp({\n      start8n: song.pickup8n,\n      end8n: end8n,\n      realEnd8n: end8n,\n    })];\n\n    const part = new SongPart({\n      song: song, syncopationPct: currSyncopation,\n      densityPct: currDensity, transpose: transpose,\n    });\n    const turnAroundLoc = chunk.chordHeaderLocs.find(loc => loc.chordType === ChordInfoType.TurnAroundStart);\n    if (turnAroundLoc) {\n      part.turnaroundStart8n = idxToTime8n(turnAroundLoc.fractionalIdx);\n    }\n\n    partNameToPart[song.title] = part;\n    partNameToInitialHeader[song.title] = headers;\n    prevSong = song;\n    return part;\n  });\n}\n\nexport const defaultPartName = '::Unnamed::';\n\nfunction chunkLocationsByPart(chordHeaderLocs) {\n  const zerothLoc = chordHeaderLocs.find(loc => loc.fractionalIdx.equals(0));\n  if (!zerothLoc.headers) {\n    zerothLoc.headers = {};\n  }\n  if (!zerothLoc.headers[HeaderType.Part]) {\n    // Use colons to avoid name collision.\n    zerothLoc.headers[HeaderType.Part] = defaultPartName;\n  }\n  return chunkArray(chordHeaderLocs, loc => loc.headers && loc.headers[HeaderType.Part]);\n}\n\n// Returns [{pickup: [chorderHeaderLoc], chordHeaderLocs: [chordHeaderLocs]}]\nfunction extractPickup(chunkedLocs) {\n  // TODO suport pickup in later chunks.\n  let chunkedLocsWithPickup;\n  if (chunkedLocs[0][0].isPickup) {\n    chunkedLocsWithPickup = chunkedLocs.slice(1).map((chunk, idx) => {\n      let pickup = [];\n      if (idx === 0) {\n        // Throw away blank or slot chord type for pickup measure.\n        const idx =  chunkedLocs[0].findIndex(loc => loc.chordType === ChordInfoType.Chord);\n        if (idx === -1) {\n          pickup = [];\n        }\n        pickup =  chunkedLocs[0].slice(idx);\n      }\n      return {\n        pickup: pickup,\n        chordHeaderLocs: chunk,\n      };\n    });\n  } else {\n    chunkedLocsWithPickup = chunkedLocs.map(chunk => {\n      return {\n        pickup: [],\n        chordHeaderLocs: chunk,\n      };\n    });\n  }\n  return chunkedLocsWithPickup;\n}\n\n// [{fractionalIdx: Frac, cellIdx: Number, headers: ?{HeaderType: object},\n//   chordType: ChordInfoType, chord: ?Chord, isNewLine: bool, isPickup: bool}]\nfunction combineChordAndHeader(chordLocs, headerLocs, maxRows) {\n  const chordLocByIndices = new Map();\n  chordLocs.forEach(chordLoc => {\n    chordLocByIndices.set(`${chordLoc.rowIdx},${chordLoc.colIdx}`, chordLoc);\n  });\n  const headersByCellIdx = new Map();\n  headerLocs.forEach(headerLoc => {\n    for (let chordRowIdx = headerLoc.rowIdx + 1; chordRowIdx < maxRows; chordRowIdx++) {\n      const chordLoc = chordLocByIndices.get(`${chordRowIdx},${headerLoc.colIdx}`);\n      if (!chordLoc) {\n        continue;\n      }\n\n      let headers = headersByCellIdx.get(chordLoc.cellIdx);\n      if (!headers) {\n        headers = {};\n        headersByCellIdx.set(chordLoc.cellIdx, headers)\n      }\n      headers[headerLoc.type] = headerLoc.value;\n      break;\n    }\n  });\n  return chordLocs.map(chordLoc => {\n    const isFirstChordInCell = chordLoc.fractionalIdx.isWhole();\n    return {\n      fractionalIdx: chordLoc.fractionalIdx,\n      cellIdx: chordLoc.cellIdx,\n      chordType: chordLoc.type,\n      chord: chordLoc.chord,\n      // TODO See if we need to propagate more info from chordLoc.\n      isNewLine: chordLoc.isNewLine,\n      isPickup: chordLoc.colIdx < chordLoc.zeroTimeColIdx,\n      headers: isFirstChordInCell ? headersByCellIdx.get(chordLoc.cellIdx) : undefined,\n    }\n  });\n}\n\n// Returns [{type: HeaderType, value: object, rowIdx: Number, colIdx: Number}]\nfunction parseHeaderLocations(gridData) {\n  return gridData.flatMap((row, rowIdx) => {\n    return row.map((cell, colIdx) => {\n      const possKeyVal = cell.toString().split(':');\n      if (possKeyVal.length !== 2) {\n        return;\n      }\n      const res = processKeyVal(\n        possKeyVal[0].trim().toLowerCase(),\n        possKeyVal[1].trim(), /* warnError= */ true);\n      if (!res) {\n        return;\n      }\n      return {\n        type: res.type,\n        value: res.value,\n        rowIdx: rowIdx,\n        colIdx: colIdx,\n      };\n    }).filter(res => res);\n  });\n}\n\n// LINT If you add fields that are specific to a particular song, make sure to unset them in startNextSong.\nexport const HeaderType = Object.freeze({\n  Key: 'Key',\n  Meter: 'Meter',\n  Swing: 'Swing',\n  Tempo: 'Tempo',\n  TempoMultiplier: 'TempoMultiplier',\n  Part: 'Part',\n  VoicePart: 'VoicePart',\n  LyricsPart: 'LyricsPart',\n  Copy: 'Copy',\n  CompingStyle: 'CompingStyle',\n  Syncopation: 'Syncopation',\n  Density: 'Density',\n  // Shift the entire song to this key, as supposed to `Key` \n  // Should be only be set once at the start.\n  TransposedKey: 'TransposedKey',\n  // Similar to TransposedKey but using a number instead and will\n  // be applied on top of TransposedKey.\n  TransposedNum: 'TransposedNum',\n  // Shift the song by this number of semi-tones.\n  // This can be set locally, and is interpreted relative to `TransposedKey`\n  // if it exists, else `Key`.\n  Transpose: 'Transpose',\n  Repeat: 'Repeat',\n  Subdivision: 'Subdivision',\n  // TODO add a header for the ending to be dropped off when another part comes after.\n});\n\nexport const GlobalHeaderType = new Set([\n  HeaderType.TransposedKey,\n  HeaderType.TransposedNum,\n  HeaderType.Repeat,\n  HeaderType.TempoMultiplier,\n]);\n\nexport function processKeyVal(key, valStr, warnError) {\n  switch(key) {\n    case 'key':\n    case 'k':\n      // TODO handle error.\n      const keyChord = new Chord(Parser.parse(valStr));\n      return {\n        type: HeaderType.Key,\n        value: keyChord.root,\n      };\n    case 'time':\n    case 'meter':\n    case 'm':\n      const [upper, lower] = valStr.split('/');\n      return {\n        type: HeaderType.Meter,\n        value: new TimeSig({upperNumeral: parseInt(upper), upperNulowerNumeralmeral: parseInt(lower)}),\n      };\n    case 'swing':\n      // Light swing by default.\n      let ratio = makeFrac(3, 2);\n      valStr = valStr.toLowerCase();\n      if (valStr === 'heavy' || valStr === 'hard') {\n        ratio = makeFrac(5, 2);\n      } else if (valStr === 'medium' || valStr === 'triplet') {\n        ratio = makeFrac(2);\n      }\n      // TODO think of whether user need to control what type of note (8th note, quarter note, etc.) to swing using dur8n.\n      return {\n        type: HeaderType.Swing,\n        value: new Swing({ratio: ratio})\n      };\n    case 'subdivision':\n      return {\n        type: HeaderType.Subdivision,\n        value: parseInt(valStr),\n      }\n    case '8th-note-tempo':\n    case 'tempo':\n    case 'q':\n      return {\n        type: HeaderType.Tempo,\n        value: parseInt(valStr),\n      };\n    case 'section':\n    case 'part':\n    case 'p':\n      return {\n        type: HeaderType.Part,\n        value: valStr,\n      };\n    case 'voice':\n    case 'voicepart':\n      return {\n        type: HeaderType.VoicePart,\n        value: {\n          name: valStr || defaultPartName,\n          index: 0,\n        },\n      };\n    case 'lyrics':\n    case 'lyricspart':\n      return {\n        type: HeaderType.LyricsPart,\n        value: {\n          name: valStr || defaultPartName,\n          index: 0,\n        },\n      };\n    case 'voice1':\n      return {\n        type: HeaderType.VoicePart,\n        value: {\n          name: valStr || defaultPartName,\n          index: 1,\n        },\n      };\n    case 'lyrics1':\n      return {\n        type: HeaderType.LyricsPart,\n        value: {\n          name: valStr || defaultPartName,\n          index: 1,\n        },\n      };\n    case 'voice2':\n      return {\n        type: HeaderType.VoicePart,\n        value: {\n          name: valStr || defaultPartName,\n          index: 2,\n        },\n      };\n    case 'lyrics2':\n      return {\n        type: HeaderType.LyricsPart,\n        value: {\n          name: valStr || defaultPartName,\n          index: 2,\n        },\n      };\n    case 'repeat':\n      return {\n        type: HeaderType.Repeat,\n        value: parseInt(valStr),\n      };\n    case 'copy':\n      return {\n        type: HeaderType.Copy,\n        value: valStr,\n      };\n    case 'style':\n      return {\n        type: HeaderType.CompingStyle,\n        value: CompingStyle[valStr] || CompingStyle.default,\n      };\n    case 'transpose':\n      return {\n        type: HeaderType.Transpose,\n        value: parseInt(valStr),\n      };\n    case 'transposednum':\n      return {\n        type: HeaderType.TransposedNum,\n        value: parseInt(valStr),\n      };\n    case 'transposedkey':\n      const chord = new Chord(Parser.parse(valStr));\n      return {\n        type: HeaderType.TransposedKey,\n        value: chord.root,\n      };\n    case 'tempomultiplier':\n      return {\n        type: HeaderType.TempoMultiplier,\n        value: parseInt(valStr), \n      }\n    case 'syncopation':\n      return {\n        type: HeaderType.Syncopation,\n        value: parseInt(valStr),\n      };\n    case 'density':\n      return {\n        type: HeaderType.Density,\n        value: parseInt(valStr),\n      };\n    // case 'form':\n    //   // E.g. (a-b)-c Makes it possible to extend the song as (a-b)-(a-b)-c\n    default:\n      if (warnError) {\n        console.warn('Unknown header key: ', key);\n      }\n  }\n}\n\nconst ChordInfoType = Object.freeze({\n  Chord: 'Chord',\n  // Used for spacing\n  Blank: 'Blank',\n  // Used for a copied section.\n  Slot: 'Slot',\n  TurnAroundStart: 'TurnAroundStart',\n  Unknown: 'Unknown',\n});\n\n// Returns [{type: ChordInfoType, chord: ?Chord, cellIdx: Number, fractionalIdx: Frac,\n//    rowIdx: Number, colIdx: Number, zeroTimeColIdx, number, isNewLine: bool}]\nfunction parseChordLocations(gridData) {\n  const res = [];\n\n  // TODO Should we use second row of chords to determin zeroTimeColIdx\n  // instead of relying on the existence of key-value cell?\n  // Determined fracIdx by looking at the first key-value cell.\n  let zeroTimeColIdx = null;\n  let currCellIdx = null;\n  let isChordMode = true;\n\n  const initCellIdxIfNeeded = colIdx => {\n    if (zeroTimeColIdx === null) {\n      console.warn('Encountered a chord before any header.');\n      zeroTimeColIdx = colIdx;\n      currCellIdx = 0;\n      return;\n    }\n    if (currCellIdx === null) {\n      currCellIdx = colIdx - zeroTimeColIdx;\n    }\n  };\n\n  gridData.forEach((row, rowIdx) => {\n    let lenientAboutErrors = false;\n    let hasPrevErrorInRow = false;\n    let isNewLine = true;\n    row.forEach((cell, colIdx) => {\n      if (hasPrevErrorInRow) {\n        return;\n      }\n      cell = cell.toString().trim();\n      if (!cell || cell.toLowerCase() === 'backing track') {\n        return;\n      }\n      // Header.\n      if (cell.includes(':')) {\n        if (zeroTimeColIdx === null) {\n          zeroTimeColIdx = colIdx\n        }\n        const key = cell.toLowerCase().split(':')[0];\n        if (key === 'part') {\n          isChordMode = true;\n        } else if (key.endsWith('part') || key.toLowerCase().startsWith('voice') || key.toLowerCase().startsWith('melody')|| key.toLowerCase().startsWith('lyrics')) {\n          isChordMode = false;\n        }\n        return;\n      }\n\n      if (!isChordMode) {\n        return;\n      }\n      const chordInfos = parseStringIntoChordInfos(cell);\n      const len = chordInfos.filter(info => info.type !== ChordInfoType.TurnAroundStart).length;\n      if (len === 0) {\n        return;\n      }\n      hasPrevErrorInRow = chordInfos.some(info => info.type === ChordInfoType.Unknown);\n      if (hasPrevErrorInRow && !lenientAboutErrors) {\n        return;\n      }\n      // Be lenient after successfully parsing chords in the first cell.\n      lenientAboutErrors = true;\n      initCellIdxIfNeeded(colIdx);\n\n      let infoIdx = 0;\n      chordInfos.forEach(info => {\n        info.cellIdx = currCellIdx;\n        info.fractionalIdx = makeFrac(infoIdx, len).plus(currCellIdx);\n        info.isNewLine = infoIdx === 0 && isNewLine;\n        info.rowIdx = rowIdx;\n        info.colIdx = colIdx;\n        info.zeroTimeColIdx = zeroTimeColIdx;\n\n        if (info.type !== ChordInfoType.TurnAroundStart) {\n          infoIdx++;\n        }\n      });\n      isNewLine = false;\n      currCellIdx += 1;\n      res.push(...chordInfos);\n    });\n  });\n  return res;\n}\n\n// Returns [{type: ChordInfoType, chord: ?Chord}]\nfunction parseStringIntoChordInfos(cell) {\n  return cell.split(' ').filter(text => {\n    if (!text) {\n      return false;\n    }\n    if (text === '|') {\n      return false;\n    }\n    if (text === ')') {\n      return false;\n    }\n    return true;\n  }).map(text => {\n    if (text === '(') {\n      return {type: ChordInfoType.TurnAroundStart};\n    }\n    try {\n      const chord = new Chord(Parser.parse(text.replaceAll('maj', 'M').replaceAll('-', 'm')));\n      return {type: ChordInfoType.Chord, chord: chord}\n    } catch (err) {\n      if (text === '_') {\n        return {type: ChordInfoType.Blank};\n      }\n      if (text === '-') {\n        return {type: ChordInfoType.Slot};\n      }\n      console.warn('Failed to parse this as a chord: ', text);\n      return {type: ChordInfoType.Unknown};\n    }\n  });\n}\n\n","import { makeSpelling, Spelling } from \"../chord/spell.js\";\n\nconst scaleNumberToSpelling = {\n  1: makeSpelling('C', 0),\n  2: makeSpelling('D', 0),\n  3: makeSpelling('E', 0),\n  4: makeSpelling('F', 0),\n  5: makeSpelling('G', 0),\n  6: makeSpelling('A', 0),\n  7: makeSpelling('B', 0),\n};\n\nexport function scaleDegreeToSpelling(scaleDegree) {\n  // Need to clone since we are modifying this on the very next line.\n  const res = new Spelling(scaleNumberToSpelling[scaleDegree.scaleNumber]);\n  res.numSharps = scaleDegree.numSharps;\n  return res;\n}","import { chunkArray } from \"../array-util/arrayUtil.js\";\nimport { makeSpelling } from \"../chord/spell.js\";\nimport { makeFrac } from \"../fraction/fraction.js\";\nimport { scaleDegreeToSpelling } from \"../solfege-util/scaleDegree.js\";\nimport { toSpelling } from \"../solfege-util/solfege.js\";\n\n// Deps: nearley (nearley.js), grammar (melodicCell.js)\n\n// TODO Design how to interface with parse.js.\n\n// Strip out the Bar and GuideBar in order to populate relDur.\n// For a note type, noteSpelling will be populated.\n// Returns [VoiceToken]\nexport function parseCell(cell) {\n  const parser = new nearley.Parser(nearley.Grammar.fromCompiled(grammar));\n  parser.feed(cell);\n  const tokens = parser.results[0];\n\n  const numDivisions = 1 + tokens.filter(\n    token => token.type === TokenType.Bar ||\n    token.type === TokenType.GuideBar\n  ).length;\n  const chunks = chunkArray(tokens, token => token.type === TokenType.Bar);\n  const res = chunks.flatMap(chunk => {\n    chunk = chunk.filter(token => token.type !== TokenType.Bar);\n    const chunkWithoutGuideBars = chunk.filter(token => token.type !== TokenType.GuideBar);\n    const numTokens = chunkWithoutGuideBars.length;\n    const numGuideBars = chunk.length - chunkWithoutGuideBars.length;\n    const numDivisionsInChunk = 1 + numGuideBars;\n\n    return chunkWithoutGuideBars.map(token => {\n      return new VoiceToken({\n        relDur: makeFrac(numDivisionsInChunk, numDivisions * numTokens),\n        type: token.type,\n        noteInfo: token.type === TokenType.Note ? new NoteInfo({\n          spelling: token.solfege ? toSpelling(token.solfege) : (\n            token.spelling ? makeSpelling(token.spelling.letter, token.spelling.numSharps) : null),\n          scaleDegree: token.scaleDegree ? token.scaleDegree : null ,\n          octave: token.octave + 5, // E.g. mi defaults to E5.\n        }) : undefined,\n      });\n    });\n  });\n  return res;\n}\n\nexport class VoiceToken {\n  constructor({relDur, type, noteInfo}) {\n    this.relDur = relDur;\n    this.type = type;\n    this.noteInfo = noteInfo;\n  }\n}\n\nexport class NoteInfo {\n  constructor({spelling, scaleDegree, octave}) {\n    this.spelling = spelling;\n    this.scaleDegree = scaleDegree;\n    this.octave = octave;\n  }\n  toNoteNum(currTimeSig) {\n    return this.getSpelling(currTimeSig).toNoteNum(this.octave);\n  }\n  getSpelling(currTimeSig) {\n    if (this.spelling) {\n      return this.spelling;\n    }\n    return scaleDegreeToSpelling(this.scaleDegree)\n      .shift(makeSpelling('C'), currTimeSig);\n  }\n}\n\nexport const TokenType = {\n  Bar: 'Bar',\n  GuideBar: 'GuideBar',\n  Note: 'Note',\n  Blank: 'Blank',\n  Slot: 'Slot',\n  Rest: 'Rest',\n}\n","import { genChunkedLocs, processKeyVal, HeaderType, defaultPartName, genChordOnlySongForm, createInitialHeaders } from \"./parse.js\";\nimport { parseCell, TokenType } from \"../sheet-melody/parseSheet.js\";\nimport { chunkArray } from \"../array-util/arrayUtil.js\";\nimport { Voice } from \"../song-sheet/voice.js\";\nimport { VoiceSettings } from \"../song-sheet/voiceSettings.js\";\nimport { instruments } from \"../musical-sound/musicalSound.js\";\nimport { makeFrac } from \"../fraction/fraction.js\";\nimport { makeSimpleQng, QuantizedNoteGp } from \"../song-sheet/quantizedNoteGp.js\";\n\nexport function parseKeyValsToSongInfo(gridData, keyVals) {\n  // 1. Group the cells into header, chord and voice.\n  const groupedCells = groupCells(gridData);\n  // 2. Attach the headers to the appropriate cell.\n  const annotatedCells = combineHeadersWithCells(groupedCells, gridData.length);\n\n  // 3. Chunk the cells into cellsParts.\n  const cellsParts = chunkCellsToParts(annotatedCells);\n\n  // TODO replace usages of chunkedLocsWithPickup with cellsParts and remove genChunkedLocs.\n  const chunkedLocsWithPickup = genChunkedLocs(gridData);\n  const initialHeaders = createInitialHeaders(chunkedLocsWithPickup, keyVals);\n  const songForm = genChordOnlySongForm(chunkedLocsWithPickup, initialHeaders, keyVals);\n\n  // 4a. Make it work for voice first.\n  genSongPartsWithVoice(cellsParts, songForm);\n\n  return {\n    initialHeaders: initialHeaders,\n    songForm: songForm,\n  };\n\n  // 4b. Migrate chords over.\n  // // 4. Initialize the context headers.\n  // const contextHeaders = initContextHeaders();\n  // overrideFromUrlParams(contextHeaders, keyVals);\n  \n  // // 5. Use the context headers to interpret each cell, updating the context when encountering a new header.\n  // const songParts = convertToSongParts(cellsParts, contextHeaders);\n}\n\nfunction genSongPartsWithVoice(cellsParts, songForm) {\n  const voiceCellsParts = cellsParts.filter(part => part.type === CellType.Voice);\n  const songParts = songForm.getParts();\n\n  addVoicePartsToSongParts(voiceCellsParts, songParts);\n\n  const lyricsCellsParts = cellsParts.filter(part => part.type === CellType.Lyrics);\n  addLyricsPartsToSongParts(lyricsCellsParts, songParts);\n\n  return songParts;\n}\n\n// TODO in the future, if there are multiple voiceCellsParts, do it here;\n// will need to implement muting of repeated voiceCellsPart here (i.e. revert the \"supress\" changes).\nfunction addVoicePartsToSongParts(voiceCellsParts, songParts) {\n  const numIndices = Math.max(1, ...voiceCellsParts.map(part => part.index + 1));\n  songParts.forEach(songPart => {\n    const partName = songPart.song.title;\n    for (let idx = 0; idx < numIndices; idx++) {\n      const voiceCellsPart = voiceCellsParts.find(\n        voiceCellsPart => partName === voiceCellsPart.name && idx === voiceCellsPart.index);\n      if (!voiceCellsPart) {\n        // Insert an empty voice with the correct duration if the voice is not specified\n        // for a particular part name.\n        addVoiceToSong(null, songPart, null, idx);\n        continue;\n      }\n      let baseSongPart;\n      if (voiceCellsPart.cells.length) {\n        const partToCopy = voiceCellsPart.cells[0].headerValByType.get(HeaderType.Copy);\n        if (partToCopy) {\n          baseSongPart = songParts.find(songPart => songPart.song.title === partToCopy);\n        }\n      }\n      addVoiceToSong(voiceCellsPart, songPart, baseSongPart, idx);\n    }\n  });\n}\n\nfunction addLyricsPartsToSongParts(lyricsCellsParts, songParts) {\n  songParts.forEach(songPart => {\n    const partName = songPart.song.title;\n    const lyricsCellsPart = lyricsCellsParts.find(lyricsCellsPart => partName === lyricsCellsPart.name);\n    if (!lyricsCellsPart) {\n      return;\n    }\n    let baseLyricsPart;\n    if (lyricsCellsPart.cells.length) {\n      const partToCopy = lyricsCellsPart.cells[0].headerValByType.get(HeaderType.Copy);\n      if (partToCopy) {\n        baseLyricsPart = lyricsCellsParts.find(lp => lp.name === partToCopy);\n      }\n    }\n    addLyricsToSong(lyricsCellsPart, songPart, baseLyricsPart);\n  });\n}\n\nfunction addLyricsToSong(lyricsCellsPart, songPart, baseLyricsPart) {\n  const qngs = songPart.song.getVoice(0).noteGps;\n  const durPerMeasure8n = songPart.song.timeSigChanges.defaultVal.getDurPerMeasure8n();\n  let baseCells = [];\n  if (baseLyricsPart) {\n    baseCells = baseLyricsPart.pickupCells.concat(baseLyricsPart.cells);\n  }\n  lyricsCellsPart.pickupCells.concat(lyricsCellsPart.cells).forEach((cell, idxRelPickupCell) => {\n    const idx = idxRelPickupCell - lyricsCellsPart.pickupCells.length;\n    const barStart8n = durPerMeasure8n.times(idx);\n    const barEnd8n = durPerMeasure8n.times(idx + 1);\n    const relevantQngs = qngs.filter(\n      qng => !qng.isRest && qng.start8n.geq(barStart8n) && qng.start8n.lessThan(barEnd8n));\n    if (cell.val === '_') {\n      return;\n    }\n\n    let lyricsStr = cell.val;\n    if (cell.val === '-') {\n      if (idxRelPickupCell < baseCells.length) {\n        lyricsStr = baseCells[idxRelPickupCell].val;\n      }\n    }\n    const tokens = parseLyricsCell(lyricsStr);\n    tokens.forEach((token, tokenIdx) => {\n      if (tokenIdx >= relevantQngs.length) {\n        return;\n      }\n      let word = token;\n      // Handle the case of '- - - blah blah'.\n      if (token === '-') {\n        if (idxRelPickupCell < baseCells.length) {\n          const baseTokens = parseLyricsCell(baseCells[idxRelPickupCell].val);\n          if (tokenIdx < baseTokens.length) {\n            word = baseTokens[tokenIdx];\n          }\n        }\n      }\n      relevantQngs[tokenIdx].lyrics = word;\n    });\n  });\n}\n\nfunction parseLyricsCell(lyricsString) {\n  const asianRegexStr = '[\\u3040-\\u30ff\\u3400-\\u4dbf\\u4e00-\\u9fff\\uf900-\\ufaff\\uff66-\\uff9f]';\n  // 'abc  def' => ['abc', 'def']\n  return lyricsString.split(/[\\s]+/)\n    // '天如' => ['天', '如']\n    // Not using splitAfter here because we want:\n    // '天?' => ['天?']\n    .flatMap(phrase => splitBefore(phrase, asianRegexStr))\n    .filter(phrase => phrase !== '');\n}\n\nfunction splitBefore(phrase, delimiterSubregexString) {\n  // use positive look-ahead so that the split doesn't remove the delimiter.\n  return phrase.split(new RegExp(`(?=${delimiterSubregexString})`));\n}\n\nfunction addVoiceToSong(voiceCellsPart, songPart, baseSongPart, voiceIdx) {\n  const isFirst = voiceIdx === 0;\n  const durPerMeasure8n = songPart.song.timeSigChanges.defaultVal.getDurPerMeasure8n();\n  let seenNonblankToken = false;\n  const tokenInfos = voiceCellsPart === null ? [] : voiceCellsPart.pickupCells.concat(voiceCellsPart.cells).flatMap((cell, idx) => {\n    idx = idx - voiceCellsPart.pickupCells.length;\n    const tokens = parseCell(cell.val.toLowerCase());\n    let start8nRelIdx = makeFrac(0);\n    return tokens.map(token => {\n      const start8n = durPerMeasure8n.times(start8nRelIdx.plus(idx));\n      const res = {\n        token: token,\n        start8n: start8n,\n        end8n: durPerMeasure8n.times(start8nRelIdx.plus(token.relDur).plus(idx)),\n      };\n      start8nRelIdx = start8nRelIdx.plus(token.relDur);\n      if (token.type !== TokenType.Blank) {\n        seenNonblankToken = true;\n      }\n      if (!seenNonblankToken && start8n.lessThan(0)) {\n        return;\n      }\n      return res;\n    }).filter(info => info);\n  });\n  if (tokenInfos.length && tokenInfos[0]) {\n    songPart.song.pickup8n = tokenInfos[0].start8n;\n  }\n  const qngInfos = tokenInfos.flatMap(tokenInfo => {\n    const start8n = tokenInfo.start8n;\n    const end8n = tokenInfo.end8n;\n    const token = tokenInfo.token;\n    if (token.type === TokenType.Note) {\n      const currKeySig = songPart.song.keySigChanges.getChange(start8n).val;\n      return [{\n        qng: makeSimpleQng(\n          start8n, end8n,\n          [token.noteInfo.toNoteNum(currKeySig)], 120,\n          [token.noteInfo.getSpelling(currKeySig)]),\n      }];\n    }\n    if (token.type === TokenType.Slot) {\n      const baseMelody = baseSongPart.song.voices[voiceIdx];\n      const relevantBaseNoteGps = baseMelody.noteGps.map(qng => new QuantizedNoteGp(qng)).filter(\n        noteGp => noteGp.start8n.geq(start8n) && noteGp.start8n.lessThan(end8n));\n      const res = [];\n      const baseStart8n = relevantBaseNoteGps.length ? relevantBaseNoteGps[0].start8n : end8n;\n      if (start8n.geq(0) && start8n.lessThan(baseStart8n)) {\n        res.push({qng: makeSimpleQng(start8n, baseStart8n), extendFromPrev: true});\n      }\n      // Else if:\n      if (start8n.lessThan(0) && makeFrac(0).lessThan(baseStart8n)) {\n        res.push({qng: makeSimpleQng(makeFrac(0), baseStart8n), extendFromPrev: true});\n      }\n      res.push(...relevantBaseNoteGps.map(noteGp => {\n        return {qng: new QuantizedNoteGp(noteGp)};\n      }));\n      const finalInfo = res[res.length - 1];\n      finalInfo.qng.end8n = end8n;\n      return res;\n    }\n    // Handle blank or rest tokens.\n    return [{qng: makeSimpleQng(start8n, end8n), extendFromPrev: token.type === TokenType.Blank}];\n  });\n  let latestBaseIdx = 0;\n  qngInfos.forEach((info, idx) => {\n    if (info.extendFromPrev && idx > 0) {\n      qngInfos[latestBaseIdx].qng.end8n = info.qng.end8n;\n    } else {\n      latestBaseIdx = idx;\n    }\n  });\n  const noteGps = qngInfos\n    .filter((info, idx) => !(info.extendFromPrev && idx > 0))\n    .map(info => info.qng);\n  const end8n = songPart.song.getEnd8n();\n  if (noteGps.length) {\n    const finalNoteGp = noteGps[noteGps.length - 1]\n    if (finalNoteGp.end8n.lessThan(end8n)) {\n      noteGps.push(makeSimpleQng(finalNoteGp.end8n, end8n));\n    }\n  } else {\n    // For empty voice, just insert rest for the entire duration.\n    noteGps.push(makeSimpleQng(makeFrac(0), end8n));\n  }\n  const voice = new Voice({\n    noteGps: noteGps,\n  });\n  // TODO remove this and do it when joining.\n  voice.settingsChanges.defaultVal = new VoiceSettings({instrument: instruments.electric_piano_2});\n  if (isFirst) {\n    songPart.song.voices = [voice];\n  } else {\n    songPart.song.voices.push(voice);\n  }\n}\n\n// function convertToSongParts(cellsParts, contextHeaders) {\n// }\n// function overrideFromUrlParams(contextHeaders, keyVals) {\n//   Object.entries(keyVals).forEach(([key, val]) => {\n//     const res = processKeyVal(\n//       key.trim().toLowerCase(),\n//       val.trim());\n//     if (!res) {\n//       return;\n//     }\n//     contextHeaders.set(res.type, res.value);\n//   });\n// }\n// function initContextHeaders() {\n//   const song = new Song({});\n//   const headers = new Map;\n//   headers.set(HeaderType.Meter, song.timeSigChanges.defaultVal);\n//   headers.set(HeaderType.Tempo, song.tempo8nPerMinChanges.defaultVal);\n//   headers.set(HeaderType.Key, song.keySigChanges.defaultVal);\n//   headers.set(HeaderType.Swing, song.swingChanges.defaultVal);\n//   headers.set(HeaderType.Transpose, 0);\n//   headers.set(HeaderType.Syncopation, 20);\n//   headers.set(HeaderType.Density, 20);\n//   headers.set(HeaderType.Repeat, 0);\n//   return headers;\n// }\n\nfunction chunkCellsToParts(cells) {\n  const firstCellWithHeaders = cells.find(cell => cell.headerValByType.size > 0);\n  const zeroTimeColIdx = firstCellWithHeaders ? firstCellWithHeaders.colIdx : 0;\n  const chunks = chunkArray(cells, cell => cell.colIdx < zeroTimeColIdx ||\n    cell.headerValByType.has(HeaderType.Part) ||\n    cell.headerValByType.has(HeaderType.LyricsPart) ||\n    cell.headerValByType.has(HeaderType.VoicePart));\n  let pickupBuffer = [];\n  let cellsPartsOrNull = chunks.map(chunk => {\n    const firstCell = chunk[0];\n    if (firstCell.colIdx < zeroTimeColIdx) {\n      pickupBuffer.push(...chunk);\n      return;\n    }\n    const type = firstCell.type;\n    let partName = defaultPartName;\n    let partIndex = 0;\n    if (firstCell.headerValByType.has(HeaderType.Part)) {\n      partName = firstCell.headerValByType.get(HeaderType.Part);\n    } else if (firstCell.headerValByType.has(HeaderType.VoicePart)) {\n      partName = firstCell.headerValByType.get(HeaderType.VoicePart).name;\n      partIndex = firstCell.headerValByType.get(HeaderType.VoicePart).index;\n    } else if (firstCell.headerValByType.has(HeaderType.LyricsPart)) {\n      partName = firstCell.headerValByType.get(HeaderType.LyricsPart).name;\n      partIndex = firstCell.headerValByType.get(HeaderType.LyricsPart).index;\n    }\n    const res = new CellsPart({cells: chunk, pickupCells: pickupBuffer, type: type, name: partName, index: partIndex});\n    pickupBuffer = [];\n    return res;\n  });\n  return cellsPartsOrNull.filter(x => x);\n}\n\nfunction groupCells(gridData) {\n  let mode = CellType.Chord;\n  const groupedCellsOrNull = gridData.flatMap((row, rowIdx) => {\n    return row.map((val, colIdx) => {\n      val = val.toString().trim();\n      if (val === '') {\n        return;\n      }\n      const cell = new Cell({val: val, rowIdx: rowIdx, colIdx: colIdx});\n      if (val.split(':').length === 2) {\n        const [key, valStr] = val.split(':');\n        if (key.toLowerCase() === 'part') {\n          mode = CellType.Chord;\n        } else if (key.toLowerCase().startsWith('voice') || key.toLowerCase().startsWith('melody')) {\n          mode = CellType.Voice;\n        } else if (key.toLowerCase().startsWith('lyrics')) {\n          mode = CellType.Lyrics;\n        }\n        cell.type = CellType.Header;\n        return cell;\n      }\n      cell.type = mode;\n      return cell;\n    });\n  });\n  return groupedCellsOrNull.filter(cell => cell);\n}\n\nfunction combineHeadersWithCells(cells, maxRows) {\n  const nonheaders = cells.filter(cell => cell.type !== CellType.Header);\n  const headers = cells.filter(cell => cell.type === CellType.Header);\n  const nonHeaderCellsByIndices = new Map(nonheaders.map(cell => [cell.getIdxStr(), cell]));\n  headers.forEach(header => {\n    for (let possNonheaderRowIdx = header.rowIdx + 1; possNonheaderRowIdx < maxRows; possNonheaderRowIdx++) {\n      const nonHeaderCell = nonHeaderCellsByIndices.get(getIdxStr(possNonheaderRowIdx, header.colIdx));\n      if (!nonHeaderCell) {\n        continue;\n      }\n      const [key, valStr] = header.val.split(':');\n      const typeVal = processKeyVal(key.trim().toLowerCase(), valStr.trim());\n      if (typeVal) {\n        nonHeaderCell.headerValByType.set(typeVal.type, typeVal.value);\n        break;\n      }\n    }\n  });\n  return nonheaders;\n}\n\nfunction getIdxStr(rowIdx, colIdx) {\n  return `${rowIdx},${colIdx}`;\n}\n\nconst CellType = {\n  Unknown: \"Unknown\",\n  Header: \"Header\",\n  Chord: \"Chord\",\n  Voice: \"Voice\",\n  Lyrics: \"Lyrics\",\n}\n\nclass Cell {\n  constructor({val = '', rowIdx, colIdx, type = CellType.Unknown, headerValByType = new Map}) {\n    this.val = val;\n    this.rowIdx = rowIdx;\n    this.colIdx = colIdx;\n    this.type = type;\n    this.headerValByType = new Map(headerValByType);\n  }\n  getIdxStr() {\n    return getIdxStr(this.rowIdx, this.colIdx);\n  }\n}\n\nclass CellsPart {\n  constructor({cells, pickupCells, type, name, index}) {\n    this.cells = cells;\n    this.pickupCells = pickupCells\n    // Chord or Voice.\n    this.type = type;\n    this.name = name;\n    // A number to distinguish the voices in a multi-voice part.\n    this.index = index;\n  }\n}","\nexport function mod(x, y) {\n  return ((x % y) + y) % y;\n}\n\nexport function gcd(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  while(y) {\n    var t = y;\n    y = x % y;\n    x = t;\n  }\n  return x;\n}\n\nexport function isPowerOf2(v) {\n  return v && !(v & (v - 1));\n}\n\nexport function range(start, end, step) {\n  step = step || 1;\n  const res = [];\n  for (let i = start; i < end; i += step) {\n    res.push(i);\n  }\n  return res;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} a items An array containing the items.\n */\nexport function shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}","/**\n * @fileoverview Description of this file.\n */\n\nimport * as math from './math.js';\n\nexport function build(numer, denom) {\n  if (isNaN(denom)) {\n    denom = 1;\n  }\n  return new Frac(numer, denom);\n}\n\nexport function fromJson(json) {\n  if (!json) {\n    return build(0);\n  }\n  return new Frac(json.numer, json.denom);\n}\n\nexport function fromString(str) {\n  const [numerStr, denomStr] = str.split('/');\n  const numer = parseInt(numerStr);\n  const denom = parseInt(denomStr);\n  if (isNaN(numer) || isNaN(denom)) {\n    throw new Error('Unable to parse this as fraction: ' + str);\n  }\n  return new Frac(numer, denom);\n}\n\nexport class Frac {\n  constructor(numer, denom) {\n    if (isNaN(numer)) {\n      throw 'numerator is NaN';\n    }\n    if (isNaN(denom)) {\n      throw 'denominator is NaN';\n    }\n    if (denom == 0) {\n      throw new Error(\"denominator must be non-zero.\");\n    }\n    // Obtaining a unique rep.\n    if (denom < 0) {\n      numer = -numer;\n      denom = -denom;\n    }\n    const gcd = math.gcd(numer, denom);\n    this.numer = numer / gcd;\n    this.denom = denom / gcd;\n  }\n\n  getDenom() {\n    return this.denom;\n  }\n\n  getNumer() {\n    return this.numer;\n  }\n\n  // TODO remove all static methods\n  static plus(f1, f2) {\n    return new Frac(f1.numer * f2.denom + f2.numer * f1.denom, f1.denom * f2.denom);\n  }\n  static minus(f1, f2) {\n    return Frac.plus(f1, f2.negative());\n  }\n  static times(f1, f2) {\n    return new Frac(f1.numer * f2.numer, f1.denom * f2.denom);\n  }\n  static divides(f1, f2) {\n    return new Frac(f1.numer * f2.denom, f1.denom * f2.numer);\n  }\n\n  isWhole() {\n    return this.denom === 1;\n  }\n\n  plus(f2) {\n    const f1 = this;\n    if (typeof f2 === 'number') {\n      throw 'Not a fraction';\n    }\n    return new Frac(f1.numer * f2.denom + f2.numer * f1.denom, f1.denom * f2.denom);\n  }\n\n  minus(f2) {\n    const f1 = this;\n    if (typeof f2 === 'number') {\n      throw 'Not a fraction';\n    }\n    return f1.plus(f2.negative());\n  }\n\n  times(f2) {\n    const f1 = this;\n    if (typeof f2 === 'number') {\n      throw 'Not a fraction';\n    }\n    return new Frac(f1.numer * f2.numer, f1.denom * f2.denom);\n  }\n\n  over(f2) {\n    const f1 = this;\n    if (typeof f2 === 'number') {\n      throw 'Not a fraction';\n    }\n    return new Frac(f1.numer * f2.denom, f1.denom * f2.numer);\n  }\n\n  negative() {\n    return new Frac(-this.numer, this.denom);\n  }\n\n  toString() {\n    return `${this.numer}/${this.denom}`;\n  }\n\n  toFloat() {\n    return this.numer / this.denom;\n  }\n\n  equals(frac2) {\n    return this.numer === frac2.numer && this.denom === frac2.denom;\n  }\n\n  lessThan(frac2) {\n    // Assumes that denom is > 0 always.\n    return this.numer * frac2.denom < frac2.numer * this.denom;\n  }\n  leq(frac2) {\n    return this.lessThan(frac2) || this.equals(frac2);\n  }\n\n  geq(frac2) {\n    return !this.lessThan(frac2);\n  }\n\n  greaterThan(frac2) {\n    return !this.leq(frac2);\n  }\n\n  weaklyInside(left, right) {\n    return left.leq(this) && this.leq(right);\n  }\n\n  strictlyInside(left, right) {\n    return left.lessThan(this) && this.lessThan(right);\n  }\n\n  fractionalPart() {\n    return this.minus(this.wholePart());\n  }\n\n  wholePart() {\n    return build(Math.floor(this.toFloat()));\n  }\n}\n","import * as frac from './frac.js';\nimport * as math from './math.js';\n\nexport class Aggregator {\n  constructor(\n      beatSub, notedownSub, noteupSub, beatModeSub,\n      aggrPub, appendPub, aggrStoppedPub, stateMgr) {\n    // aggr will start out being a PossGraceNoteAggr until we enter\n    // beat mode.\n    let aggr = new PossGraceNoteAggr();\n    let prevDuration = 1200;\n    let appendDelay = null;\n\n    beatModeSub((bm, time) => {\n      if (bm) {\n        return;\n      }\n      // Context: tranistioning from beat mode to non-beat mode.\n      // Outcome: publish what's left in the aggr buffer.\n      aggr.end = time ? time : aggr.start + prevDuration;\n      aggrPub(aggr);\n      aggr = new PossGraceNoteAggr();\n      aggrStoppedPub();\n    });\n\n    beatSub(time => {\n      window.clearTimeout(appendDelay);\n      if (aggr.isPossGraceNote) {\n        // Context: isPossGraceNote with a beat event means this is the first beat in beat mode.\n        // Outcome: convert aggr to a non-grace-note Aggr.\n        const pickupAggr = aggr;\n        aggr = new Aggr(time);\n        aggr.notes = pickupAggr.notes;\n        return;\n      }\n      aggr.end = time;\n      prevDuration = aggr.end - aggr.start;\n      aggrPub(aggr);\n      aggr = new Aggr(time);\n    });\n\n    // For non-beat mode, this is the delay to see if there is\n    // only 1 note or there are more simultaneous notes.\n    // Since trumpet is never in beat mode, and we don't want simultaneous notes\n    // the delay is 0.\n    const graceNoteConfirmationDelayMillis = stateMgr.isTrumpet ? 0 : 100;\n\n    notedownSub((noteNums, start) => {\n      window.clearTimeout(appendDelay);\n      if (aggr.isPossGraceNote) {\n        // Context: in non-beat mode, note is down.\n        // Outcome: add note to the aggregate series of possible grace notes;\n        //   if no more notes or beats come after waiting 100ms, these will become simultaneous (non-grace) notes.\n        aggr.notes.push(buildNote(noteNums, start));\n        appendDelay = window.setTimeout(_ => {\n          // Context: in non-beat mode, 100ms after note has been down.\n          // Outcome: insert the notes as simultaneous notes with the standard duration.\n          appendPub(aggr.notes);\n          aggr.notes = [];\n        }, graceNoteConfirmationDelayMillis);\n        return;\n      }\n      // Context: in beat mode, note is down\n      // Outcome: add the notes to the current Aggr.\n      aggr.notes.push(buildNote(noteNums, start));\n    });\n  }\n}\n\nclass PossGraceNoteAggr {\n  constructor() {\n    this.isPossGraceNote = true;\n    this.end = null;\n    this.notes = [];\n  }\n}\n\nclass Aggr {\n  constructor(start) {\n    this.start = start;\n    this.end = null;\n    this.notes = [];\n  }\n}\n\nexport class Note {\n  constructor(noteNums, start) {\n    this.noteNums = noteNums;\n    this.start = start;\n  }\n\n  clone() {\n    // ... clones the array.\n    return buildNote([...this.noteNums], this.start);\n  }\n}\n\nexport function buildNote(noteNums, start) {\n  return new Note(noteNums, start);\n}\n\nconst defaultNumDivisions = 4;\nexport class Rounder {\n  constructor(aggrSub, roundedNotesPub) {\n    aggrSub(aggr => {\n      function compute(numDivisions) {\n        const dur = aggr.end - aggr.start;\n        const notes = aggr.notes.map(note => {\n          const relStart = note.start - aggr.start;\n          // TODO compute a score.\n          const startFrac = closestFrac(relStart / dur, [numDivisions]);\n          // TODO if there are 3 notes, compute a score for tuplet match.\n          return buildNote(note.noteNums, startFrac, Number(relStart / dur).toFixed(2));\n        });\n        const diffAmount = computeDiffAmount(aggr, notes);\n        return [notes, diffAmount];\n      }\n      let [currNotesToUse, currDiffAmount]= compute(defaultNumDivisions);\n      math.range(aggr.notes.length - 1, aggr.notes.length + 2).forEach(numDivisions => {\n        const [notes, diffAmount]= compute(numDivisions);\n        const middle = new Set();\n        notes.forEach(note => {\n          if (!note.start.isWhole()) {\n            middle.add(note.start.toString());\n          }\n        });\n        if (middle.size != numDivisions - 1) {\n          return;\n        }\n        if (currDiffAmount > diffAmount) {\n          currNotesToUse = notes;\n          currDiffAmount = diffAmount;\n        }\n      });\n      roundedNotesPub(currNotesToUse);\n    });\n  }\n}\n\nfunction computeDiffAmount(aggr, roundedNotes) {\n  let diffAmount = 0;\n  const dur = aggr.end - aggr.start;\n  aggr.notes.forEach((note, idx) => {\n    const relStart = note.start - aggr.start;\n    diffAmount += Math.abs(roundedNotes[idx].start.toFloat() - relStart / dur);\n  });\n  return diffAmount;\n}\n\nfunction closestFrac(float, divCfg) {\n  let minDiff = 1;\n  let possFrac = frac.build(0);\n  divCfg.forEach(denom => {\n    [...Array(denom + 1).keys()].forEach(numer => {\n      const diff = Math.abs(float - numer / denom);\n      if (diff < minDiff) {\n        minDiff = diff;\n        possFrac = frac.build(numer, denom);\n      }\n    });\n  });\n\n  return possFrac;\n}\n\nexport class Upserter {\n  constructor(roundedNotesSub, appendSub, stateMgr, actionMgr, resourceContentionDelayMillis) {\n    // Delay rendering by 100ms from the start of the beat\n    // to prevent resource contention.\n    roundedNotesSub(notes => {\n      if (true || !resourceContentionDelayMillis) {\n        // don't render if resourceContentionDelayMillis is not provided.\n        stateMgr.upsertBeat(notes);\n        return;\n      }\n      actionMgr.exec(_ => {\n        stateMgr.upsertBeat(notes);\n      }, resourceContentionDelayMillis);\n    });\n\n    // notes is [Note]\n    appendSub(notes => {\n      actionMgr.exec(_ => {\n        stateMgr.upsertWithoutDur(notes.map(note => {\n          return note.noteNums;\n        }).flat(), Date.now());\n      });\n    });\n  }\n}","\nimport * as beat from './beat.js'\nimport * as frac from './frac.js';\n\n// TODO replace 44 with something less arbitrary.\nconst bassSeed = 44;\n\nfunction getBassNote(chord, seed) {\n  seed = seed || bassSeed;\n  const bassSpelling = chord.getBassSpelling();\n  const noteNum = bassSpelling.toNoteNum(3) < seed ? bassSpelling.toNoteNum(3) : bassSpelling.toNoteNum(2);\n  return noteNum;\n}\n\nfunction sameAndCloseToPrevBass(slot, prevSlot) {\n  return (\n    prevSlot && prevSlot.chord &&\n    prevSlot.duration.lessThan(frac.build(3, 4)) &&\n    prevSlot.chord.getBassSpelling().toString() == slot.chord.getBassSpelling().toString());\n}\n\nfunction simpleBassRhythm(note1) {\n  return [beat.buildNote([note1], frac.build(0))];\n}\n\nexport function simpleBass(slot, prevSlot) {\n  const noteNum = getBassNote(slot.chord);\n  return simpleBassRhythm(sameAndCloseToPrevBass(slot, prevSlot) ? noteNum + 12 : noteNum);\n}\n\nfunction twoBeatBassRhythm(duration, note1, note2) {\n  const res = [beat.buildNote([note1], frac.build(0))];\n  if (duration.lessThan(frac.build(2, 4))) {\n    return res;\n  }\n  if (duration.equals(frac.build(2, 4))) {\n    res.push(beat.buildNote([note2], duration.minus(frac.build(1, 4))));\n    return res;\n  }\n  res.push(beat.buildNote([note2], duration.minus(frac.build(2, 4))));\n  return res;\n}\n\nexport function twoBeatBass(slot) {\n  const chord = slot.chord;\n  const bassNoteNum = getBassNote(chord);\n  const bassIsRoot = !chord.bass || chord.bass.letter == chord.root.letter;\n  const noteNum2 = bassIsRoot ? bassNoteNum + chord.getFifthInterval() : chord.root.toNoteNum(3);\n  const notes = [bassNoteNum, noteNum2];\n  return twoBeatBassRhythm(slot.duration, ...notes);\n}\n\nfunction bossaNovaBassRhythm(duration, note1, note2) {\n  const res = [beat.buildNote([note1], frac.build(0))];\n  if (duration.leq(frac.build(3, 8))) {\n    return res;\n  }\n  if (Math.random() < 0.6) {\n    res.push(beat.buildNote([note2], frac.build(3, 8)));\n  }\n  if (duration.leq(frac.build(4, 8))) {\n    return res;\n  }\n  res.push(beat.buildNote([note2], frac.build(4, 8)));\n  if (duration.leq(frac.build(7, 8))) {\n    return res;\n  }\n  if (Math.random() < 0.6) {\n    res.push(beat.buildNote([note1], frac.build(7, 8)));\n  }\n  return res;\n}\n\nexport function bossaNovaBass(slot, prevSlot) {\n  const chord = slot.chord;\n  const bassNoteNum = getBassNote(chord, 30);\n  const bassIsRoot = !chord.bass || chord.bass.letter == chord.root.letter;\n  const secondBassNoteNum = bassIsRoot ? bassNoteNum + chord.getFifthInterval() : chord.root.toNoteNum(3);\n  const notes = [bassNoteNum, secondBassNoteNum];\n  if (sameAndCloseToPrevBass(slot, prevSlot)) {\n    notes.reverse();\n  }\n  return bossaNovaBassRhythm(slot.duration, ...notes);\n}\n","\nimport * as beat from './beat.js'\nimport * as frac from './frac.js';\n\nconst compSeed = 54;\n\nfunction bossaNovaCompRhythm(duration, notes) {\n  const res = [];\n  if (duration.leq(frac.build(1, 4))) {\n    return [beat.buildNote(notes, frac.build(0))];\n  }\n  const rand1 = Math.random();\n  if (rand1 < 0.3) {\n    res.push(beat.buildNote(notes, frac.build(1, 8)));\n  } else if (rand1 < 0.6) {\n    res.push(beat.buildNote(notes, frac.build(2, 8)));\n  } else if (rand1 < 0.8) {\n    res.push(beat.buildNote(notes, frac.build(0)));\n  } else {\n    res.push(beat.buildNote([null], frac.build(0)));\n  }\n  if (duration.leq(frac.build(3, 4))) {\n    return res;\n  }\n  if (Math.random() < 0.7) {\n    res.push(beat.buildNote(notes, frac.build(5, 8)));\n  } else {\n    res.push(beat.buildNote(notes, frac.build(6, 8)));\n  }\n  return res;\n}\n\nexport function bossaNovaComp(slot) {\n  const below = slot.chord.jazzChordTonesBelow(compSeed);\n  return bossaNovaCompRhythm(slot.duration, below.slice(0, 2));\n}","import * as frac from './frac.js';\n\nexport function nextMeasureTime(currTime, durationPerMeasure) {\n  const numMeasure = measureNum(currTime, durationPerMeasure) + 1;\n  return durationPerMeasure.times(frac.build(numMeasure));\n}\n\nexport function measureNumToTime(measNum, durationPerMeasure, pickup) {\n  const res = durationPerMeasure.times(frac.build(measNum));\n  if (res.lessThan(pickup.negative())) {\n    return pickup.negative();\n  }\n  return res;\n}\n\nexport function computePrevBeat(currTime, step) {\n  if (currTime.over(step).isWhole()) {\n    return currTime.minus(step);\n  }\n  return frac.build(Math.floor(currTime.over(step).toFloat())).times(step);\n}\n\n// First measure should be measure number 0.\nexport function measureNum(currTime, durationPerMeasure) {\n  return Math.floor(currTime.over(durationPerMeasure).toFloat());\n}\n\nexport function lineNum(measNum, barsPerLine) {\n  return measNum >= 0 ? Math.floor(measNum / barsPerLine) : 0;\n}","import * as frac from './frac.js';\nimport * as location from './location.js';\nimport * as math from './math.js';\n\nexport function exec(noteMeas, start, end, timeSigNumer, timeSigDenom, cursorTime) {\n  let noteGpArr = noteMeas;\n  // TODO remove the mergeTiesAndRests calls when all operations are converted.\n  if (cursorTime) {\n    noteGpArr = [];\n    noteMeas.forEach(noteGp => {\n      if (cursorTime.strictlyInside(noteGp.start, noteGp.end)) {\n        noteGpArr.push(...noteGp.split(cursorTime));\n        return;\n      }\n      noteGpArr.push(noteGp);\n    });\n  }\n  let chunks = toChunks(noteGpArr);\n  chunks = tupletChunking(chunks);\n  chunks = _notatableChunking(chunks, start, end, timeSigNumer, timeSigDenom);\n  return chunks;\n}\n\n// [noteGp] -> [noteGp]\nexport function periodicSplit(noteGpsArr, period) {\n  const res = [];\n  noteGpsArr.forEach(noteGp => {\n    let remainder = noteGp;\n    while (true) {\n      const nextMeasTime = location.nextMeasureTime(remainder.start, period);\n      if (remainder.end.leq(nextMeasTime)) {\n        res.push(remainder);\n        return;\n      }\n      const [left, right] = remainder.split(nextMeasTime);\n      res.push(left);\n      remainder = right;\n    }\n  });\n  return res;\n}\n\n// TODO see if this logic can be shared with periodicSplit or locationsToLines.\n// [noteGp] -> [[noteGps]]\nexport function splitIntoMeasures(noteGpsArr, period) {\n  const res = [];\n  let meas = [];\n  noteGpsArr.forEach(noteGp => {\n    let remainder = noteGp;\n    while (true) {\n      const nextMeasTime = location.nextMeasureTime(remainder.start, period);\n      if (remainder.end.leq(nextMeasTime)) {\n        meas.push(remainder);\n        if (remainder.end.equals(nextMeasTime)) {\n          res.push(meas);\n          meas = [];\n        }\n        return;\n      }\n      const [left, right] = remainder.split(nextMeasTime);\n      meas.push(left);\n      remainder = right;\n      if (remainder.end.equals(nextMeasTime)) {\n        res.push(meas);\n        meas = [];\n      }\n    }\n  });\n  if (meas.length > 0) {\n    res.push(meas);\n  }\n  return res;\n}\n\nexport function isPossibleTuplet(noteGp) {\n  return !math.isPowerOf2(noteGp.start.getDenom()) || !math.isPowerOf2(noteGp.end.getDenom());\n}\n\n// noteGpsArr -> chunks\nexport function toChunks(noteGpsArr) {\n  return noteGpsArr.map(noteGp => {\n    return new SingletonChunk([noteGp]);\n  });\n}\n\n// A logical unit of note groups that should be rendered together\nclass Chunk {\n  constructor(noteGpsArr) {\n    if (noteGpsArr.length < 1) {\n      throw \"noteGpsArr must not be empty.\"\n    }\n    this.noteGpsArr = noteGpsArr;\n  }\n  getNoteGps() {\n    return this.noteGpsArr;\n  }\n  getAlteredNoteGps() {\n    return this.noteGpsArr;\n  }\n  getAbcPreamble() {\n    return '';\n  }\n}\n\nexport class SingletonChunk extends Chunk {\n  constructor(noteGpsArr) {\n    super(noteGpsArr);\n    if (noteGpsArr.length > 1) {\n      throw \"SingletonChunk must have length 1.\"\n    }\n  }\n}\n\n// p = the number of notes to be put into time q\n// q = the time that p notes will be played in\n// r = the number of notes to continue to do this action for.\nexport class TupletChunk extends Chunk {\n  constructor(noteGpsArr) {\n    super(noteGpsArr);\n    this.altered = noteGpsArr;\n    this.computable = false;\n    this.computable = this._computePqr();\n  }\n  _computePqr() {\n    let nextStart = null;\n    this.altered = this.noteGpsArr.map(noteGp => {\n      const clone = noteGp.clone();\n      const dur = noteGp.getDuration().times(frac.build(3, 2));\n      if (nextStart) {\n        clone.start = nextStart;\n      }\n      clone.end = clone.start.plus(dur);\n      nextStart = clone.end;\n      return clone;\n    });\n    this.p = 3;\n    this.q = 2;\n    this.r = this.getNoteGps().length;\n    return true;\n  }\n  getAlteredNoteGps() {\n    return this.altered;\n  }\n  getDurationMultiplier() {\n    return frac.build(this.q, this.p);\n  }\n  getAbcPreamble() {\n    return `(${this.p}:${this.q}:${this.r}`;\n  }\n}\n\n// Returns startingPoint s.t. its denom isPowerOf2 and\n// >= firstNoteGp.start.\n// If not possible, returns null.\nfunction _computeStartingPoint(firstNoteGp, attempt) {\n  let startingPoint = firstNoteGp.end;\n  while (true) {\n    startingPoint = startingPoint.minus(attempt);\n    if (math.isPowerOf2(startingPoint.getDenom())) {\n      return startingPoint;\n    }\n    if (firstNoteGp.start.greaterThan(startingPoint)) {\n      return null;\n    }\n  }\n}\n\n// Args: attempt is the unit duration.\n// Returns chunks with at most 2 chunk; the right chunk is a TupletChunk.\n// Returns null if the attempt failed.\nfunction _tryTupletChunking(noteGpsArr, startIdx, attempt, idxToRemainingNoteGp, skipMerging) {\n  // The result of chunking\n  const chunks = [];\n  // NoteGps for the main tuplet chunk.\n  const tupletNoteGps = [];\n  const firstNoteGp = idxToRemainingNoteGp[startIdx] || noteGpsArr[startIdx];\n  const startingPoint = _computeStartingPoint(firstNoteGp, attempt);\n  if (!startingPoint) {\n    return null;\n  }\n  if (firstNoteGp.start.greaterThan(startingPoint)) {\n    return null;\n  }\n\n  // The leftmost non-tuplet chunk.\n  if (firstNoteGp.start.lessThan(startingPoint)) {\n    const [left, _] = firstNoteGp.split(startingPoint);\n    chunks.push(new SingletonChunk([left]));\n  }\n\n  // The rightmost tuplet chunk.\n  let nextPoint = startingPoint;\n  let currIdx = startIdx;\n  while (true) {\n    // The start, end and tie of currNoteGp will be reconstructed given\n    // all the timing information.\n    const currNoteGp = idxToRemainingNoteGp[currIdx] || noteGpsArr[currIdx];\n    const unsplitTupletNoteGp = currNoteGp.clone();\n    unsplitTupletNoteGp.start = nextPoint;\n    nextPoint = nextPoint.plus(attempt);\n    const [tupletNoteGp, _] = unsplitTupletNoteGp.split(nextPoint);\n    tupletNoteGps.push(tupletNoteGp);\n    if (currNoteGp.end.lessThan(nextPoint)) {\n      return null;\n    }\n\n    if (math.isPowerOf2(nextPoint.getDenom())) {\n      if (currNoteGp.end.greaterThan(nextPoint)) {\n        // The remainder will be left for the next\n        // call of _tryTupletChunking to process.\n        const remainder = currNoteGp.clone();\n        remainder.start = nextPoint;\n        idxToRemainingNoteGp[currIdx] = remainder;\n      } else {\n        idxToRemainingNoteGp[currIdx] = null;\n      }\n      break;\n    }\n    if (currNoteGp.end.equals(nextPoint)) {\n      currIdx += 1;\n    }\n    if (currIdx >= noteGpsArr.length) {\n      console.warn(\n        'This should not happen; nextPoint.denom should be ' +\n        'power of 2 before noteGpsArr runs out.');\n      return null;\n    }\n  }\n\n  // Test whether merging ties and rests within the tuplet chunk is notatable.\n  const mergedTupletChunk = new TupletChunk(mergeTiesAndRests(tupletNoteGps));\n  // Special case to reject.\n  const noteGps = mergedTupletChunk.getNoteGps();\n  if (noteGps.length == 2) {\n    if (noteGps[0].getDuration().equals(frac.build(1, 6))) {\n      if (noteGps[1].getDuration().equals(frac.build(1, 3))) {\n        return null;\n      }\n    }\n  }\n  const notatable = mergedTupletChunk.getAlteredNoteGps().every(noteGp => {\n    return _isNotatable(noteGp);\n  });\n  if (notatable && !skipMerging) {\n    chunks.push(mergedTupletChunk);\n  } else {\n    chunks.push(new TupletChunk(tupletNoteGps));\n  }\n\n  math.range(startIdx, currIdx).forEach(idx => {\n    idxToRemainingNoteGp[idx] = null;\n  });\n  return chunks;\n}\n\nexport function tupletChunking(singletonChunks, skipMerging) {\n  const chunksWithTriplets = [];\n  const noteGpsArr = singletonChunks.map(chunk => {\n    return chunk.getNoteGps()[0];\n  });\n  // This lets the next iterations know the noteGpsArr that the current\n  // iteration has modified/processed.\n  // Null value means the noteGp has been processed completely.\n  const idxToRemainingNoteGp = {};\n  noteGpsArr.forEach((noteGp, idx) => {\n    if (idxToRemainingNoteGp[idx] === null) {\n      return;\n    }\n    noteGp = idxToRemainingNoteGp[idx] || noteGp;\n    if (!isPossibleTuplet(noteGp)) {\n      chunksWithTriplets.push(new SingletonChunk([noteGp]));\n      return;\n    }\n    // const numer = noteGp.end.getNumer();\n    // const baseAttemptNumer = numer > 0 ? Math.pow(2, Math.floor(Math.log2(numer))) : 1;\n    let baseDenom = noteGp.end.getDenom();\n    while (math.mod(baseDenom, 2) == 0) {\n      baseDenom /= 2;\n    }\n    const baseAttempt = frac.build(1, baseDenom);\n    let possChunks = null;\n    for (let exponent = 0; exponent < 10; exponent++) {\n      const attempt = baseAttempt.over(frac.build(Math.pow(2, exponent)));\n      possChunks = _tryTupletChunking(\n        noteGpsArr, idx, attempt, idxToRemainingNoteGp, skipMerging);\n      if (possChunks) {\n        break;\n      }\n    };\n    if (!possChunks) {\n      console.warn('tupletChunking failed', noteGpsArr, noteGp);\n      chunksWithTriplets.push(new SingletonChunk([noteGp]));\n      return;\n    }\n    chunksWithTriplets.push(...possChunks);\n  });\n  return chunksWithTriplets;\n}\n\nfunction _isNotatable(noteGp) {\n  const dur = noteGp.getDuration();\n  return dur.getNumer() <= 3;\n}\n\n// Nice bound will be lenient because more checks come later.\nfunction _hasNiceBound(noteGp, timeSigDenom) {\n  const dur = noteGp.getDuration();\n  // Stricter bounds for 1/timeSigDenom to show beat contour clearly\n  const beatDur = frac.build(1, timeSigDenom);\n  if (dur.equals(beatDur)) {\n    const niceStart = math.mod(dur.getDenom(), noteGp.start.getDenom()) === 0;\n    const niceEnd = math.mod(dur.getDenom(), noteGp.end.getDenom()) === 0;\n    return niceStart && niceEnd;\n  }\n\n  const niceStart = math.mod(2 * dur.getDenom(), noteGp.start.getDenom()) === 0;\n  const niceEnd = math.mod(2 * dur.getDenom(), noteGp.end.getDenom()) === 0;\n  return niceStart && niceEnd;\n}\n\n// periodNumer is the timeSigNumer restricted to left and right\nfunction _computeDemarcations(\n  noteGp, decomp, left, right, periodNumer, periodDenom) {\n  const dur = noteGp.getDuration();\n  // Don't break up long notes that fit perfectly.\n  if (noteGp.start.equals(left) && noteGp.end.equals(right)) {\n    return [];\n  }\n  // Don't break up long notes for simple time sig\n  if (dur.greaterThan(frac.build(3, 8)) && periodNumer <= 4) {\n    return [];\n  }\n  // Don't break up dotted quarter notes for 2/4 and 3/4 cases.\n  if (dur.equals(frac.build(3, 8)) && periodNumer < 4 && periodDenom == 4) {\n    return [];\n  }\n  // Don't break up dotted quarter notes for k/4 for k >= 4.\n  const firstDecompInNoteGp = left.plus(decomp[0]).strictlyInside(noteGp.start, noteGp.end);\n  if (dur.equals(frac.build(3, 8)) && periodDenom == 4 && !firstDecompInNoteGp) {\n    return [];\n  }\n\n  const demarcs = [];\n  let curr = left;\n  while (true) {\n    curr = curr.plus(frac.build(1, periodDenom));\n     if (curr.geq(right)) {\n       break;\n     }\n     demarcs.push(curr);\n  }\n  return demarcs\n}\n\n// Precondition: Demaracations are checked after bounds are checked to be nice.\nfunction _crossedDemarcations(demarcs, noteGp) {\n  const ans = demarcs.some(demarc => {\n      return demarc.strictlyInside(noteGp.start, noteGp.end);\n    });\n  return ans;\n}\n\n// TODO allow override:\n// const timeSigNumerDecompOverride = {\n//   5: [2, 3],\n// };\n// Precondition: left <= noteGp.start && noteGp.end <= right\nfunction _decompose(noteGp, left, right, timeSigNumer, timeSigDenom) {\n  if (!noteGp) {\n    return [];\n  }\n  if (noteGp.isGraceNote()) {\n    return [noteGp];\n  }\n\n  const period = right.minus(left);\n  if (period.lessThan(frac.build(1, 64))) {\n    console.warn('There may be some issue with _decompose', noteGp, left, right);\n    return [noteGp];\n  }\n  // periodDenom is the timeSigDenom unless the period is smaller than 1/timeSigDenom\n  let periodNumer = period.getNumer();\n  let periodDenom = period.getDenom();\n  if (math.mod(timeSigDenom, periodDenom) === 0) {\n    periodNumer = periodNumer * timeSigDenom / periodDenom;\n    periodDenom = timeSigDenom;\n  }\n  // decomp shows duration of the left-most decomp and\n  // the second left-most defcomp.\n  let decomp = [\n    frac.build(1, periodDenom),\n    frac.build(periodNumer - 1, periodDenom)];\n  if (periodNumer === 1) {\n    decomp = [\n      frac.build(1, 2 * periodDenom),\n      frac.build(1, 2 * periodDenom)];\n  }\n  if (periodNumer === 4) {\n    decomp = [frac.build(2, periodDenom), frac.build(2, periodDenom)];\n    // This is for not splitting dotted half note for a note that\n    // that goes from e.g. 1/8 to 1/1.\n    // (Split to 1/8 to 1/4 and 1/4 to 4/4).\n    if (noteGp.start.lessThan(left.plus(frac.build(1, timeSigDenom))) && noteGp.end.equals(right)) {\n      decomp = [frac.build(1, periodDenom), frac.build(3, periodDenom)];\n    }\n    if (noteGp.end.greaterThan(right.minus(frac.build(1, timeSigDenom))) && noteGp.start.equals(left)) {\n      decomp = [frac.build(3, periodDenom), frac.build(1, periodDenom)];\n    }\n  }\n  if (periodNumer === 5) {\n    decomp = [frac.build(3, periodDenom), frac.build(2, periodDenom)]\n  }\n  if (periodNumer > 5) {\n    decomp = [frac.build(3, periodDenom), frac.build(3, periodDenom)];\n  }\n\n  const demarcs = _computeDemarcations(\n    noteGp, decomp, left, right, periodNumer, periodDenom);\n  // console.log(left, right);\n  // console.log(noteGp.start);\n  // console.log(noteGp.end);\n  // console.log(demarcs);\n  if (_isNotatable(noteGp)) {\n    // console.log(_hasNiceBound(noteGp, timeSigDenom));\n    if (_hasNiceBound(noteGp, timeSigDenom)) {\n      const crossedDemarc = _crossedDemarcations(demarcs, noteGp);\n      // console.log(crossedDemarc);\n      if (!crossedDemarc) {\n        return [noteGp];\n      }\n    }\n  }\n\n  const mid = left.plus(decomp[0]);\n  if (!mid.strictlyInside(left, right)) {\n    console.warn('Unexpected middle', mid, left, right);\n    return [noteGp];\n  }\n  return _splitAndDecompose(noteGp, left, mid, right, timeSigNumer, timeSigDenom);\n}\n\nfunction _splitAndDecompose(noteGp, left, mid, right, timeSigNumer, timeSigDenom) {\n  const [leftSplit, rightSplit] = noteGp.split(mid);\n  return _decompose(leftSplit, left, mid, timeSigNumer, timeSigDenom).concat(\n    _decompose(rightSplit, mid, right, timeSigNumer, timeSigDenom));\n}\n\n// Chunks that are not Tuplet should have noteGp duration 2^n at this point.\nfunction _notatableChunking(chunks, start, end, timeSigNumer, timeSigDenom) {\n  const res = [];\n  chunks.forEach(chunk => {\n    if (chunk instanceof TupletChunk) {\n      res.push(chunk);\n      return;\n    }\n    if (!(chunk instanceof SingletonChunk)) {\n      console.warn('Chunk of unknown type', chunk)\n      res.push(chunk);\n      return;\n    }\n    const noteGp = chunk.getNoteGps()[0];\n    if (!math.isPowerOf2(noteGp.getDuration().getDenom())) {\n      console.warn('noteGp with non-power-of-2 denom', noteGp);\n      res.push(chunk);\n      return;\n    }\n    const dNoteGps = _decompose(noteGp, start, end, timeSigNumer, timeSigDenom);\n    dNoteGps.forEach(dNoteGp => {\n      res.push(new SingletonChunk([dNoteGp]));\n    });\n  });\n  return res;\n}\n\n// [noteGp] -> [noteGp]\nexport function mergeTiesAndRests(noteGpsArr) {\n  return _mergeRests(_mergeTies(noteGpsArr));\n}\n\nfunction _mergeTies(noteGpsArr) {\n  const res = [];\n  let startingTie = null;\n  noteGpsArr.forEach(noteGp => {\n    // Case 1: Notes with ties; keep track of starting point\n    if (noteGp.tie) {\n      if (!startingTie) {\n        startingTie = noteGp;\n        // TODO remove mergeTiesAndRests when input is tieless.\n        // console.log('Has tie notes.')\n      }\n      return;\n    }\n    // Case 2: No tied notes before current note.\n    if (!startingTie) {\n      res.push(noteGp);\n      return;\n    }\n    // Case 3: Process the tied notes before.\n    const mergedNoteGp = noteGp.clone();\n    mergedNoteGp.start = startingTie.start;\n    res.push(mergedNoteGp);\n    startingTie = null;\n    return;\n  });\n  // Case 4: Process the tied notes not handled by case 3.\n  if (startingTie && noteGpsArr.length > 0) {\n    const mergedNoteGp = noteGpsArr[noteGpsArr.length - 1].clone();\n    mergedNoteGp.start = startingTie.start;\n    res.push(mergedNoteGp);\n  }\n  return res;\n}\n\nfunction _mergeRests(noteGpsArr) {\n  const res = [];\n  let startingRest = null;\n  noteGpsArr.forEach(noteGp => {\n    // Case 1: Rests; keep track of starting point\n    if (noteGp.isRest()) {\n      if (!startingRest) {\n        startingRest = noteGp;\n        // TODO remove mergeTiesAndRests when input is tieless.\n        // console.log('Has split rest notes.')\n      }\n      return;\n    }\n    // Case 2: No rests before current note.\n    if (!startingRest) {\n      res.push(noteGp);\n      return;\n    }\n    // Case 3: Process the rests before the current note.\n    const mergedNoteGp = startingRest.clone();\n    mergedNoteGp.end = noteGp.start;\n    res.push(mergedNoteGp);\n    res.push(noteGp);\n    startingRest = null;\n    return;\n  });\n  // Case 4: Process the rests not handled by case 3 because the final note is a rest.\n  if (startingRest && noteGpsArr.length > 0) {\n    const mergedNoteGp = startingRest.clone();\n    mergedNoteGp.end = noteGpsArr[noteGpsArr.length - 1].end;\n    res.push(mergedNoteGp);\n  }\n  return res;\n}\n\n// // chunks -> noteGpsArr\n// export function toNoteGps(chunks) {\n//   return chunks.map(chunk => {\n//     return chunk.getNoteGps();\n//   }).flat();\n// }","const VERSION = '0-0';\n\nexport function isDebug() {\n  return (new URL(document.URL)).origin.includes('localhost');\n}\n\nexport function version() {\n  if (isDebug()) {\n    return 'song-debug';\n  }\n  return 'song-' + VERSION;\n}\n","\nimport * as math from './math.js';\n\n// A special doubly linked list for making local edit operations O(1).\nexport class List {\n  constructor(array, idx) {\n    array = array || [];\n    idx = idx || 0;\n    if (idx < 0 || idx > array.length) {\n      // Note that idx <= array.length because RIGHT_END\n      // is an extra node that is not in the array.\n      console.warn('index, array length: ', idx, array.length)\n      throw 'index out of bound';\n    }\n    this.rightEnd = new _Node(\"RIGHT_END\");\n    this.currNode = this.rightEnd;\n    array.forEach(item => {\n      this.add(item);\n    });\n    const idxFromRight = array.length - idx;\n    math.range(0, idxFromRight).forEach(_ => {\n      this.moveLeft();\n    });\n  }\n\n  ////// Import/Export\n  toArray() {\n    let travNode = this.rightEnd;\n    const rev = [];\n    while (travNode.left) {\n      travNode = travNode.left;\n      rev.push(travNode.item);\n    }\n    return [...rev].reverse();\n  }\n\n  toArrayStartingFromCurr() {\n    let travNode = this.currNode;\n    const res = [];\n    while (travNode && travNode !== this.rightEnd) {\n      res.push(travNode.item);\n      travNode = travNode.right;\n    }\n    return res;\n  }\n\n  ////// Access\n  getCurr() {\n    if (this.atTail()) {\n      return null;\n    }\n    return this.currNode.item;\n  }\n\n  // Can return null;\n  getLeft() {\n    const left = this.currNode.left;\n    return left ? left.item : null;\n  }\n\n  // Can return null;\n  getRight() {\n    const right = this.currNode.right;\n    if (!right || right === this.rightEnd) {\n      return null;\n    }\n    return right.item;\n  }\n\n  atTail() {\n    return this.currNode === this.rightEnd;\n  }\n\n  atHead() {\n    return !this.currNode.left;\n  }\n\n  get2ndLast() {\n    if (this.rightEnd.left) {\n      return this.rightEnd.left.item;\n    }\n    return null;\n  }\n\n  getCurrIdx() {\n    let travNode = this.rightEnd;\n    let idxFromRight = 0;\n    while (true) {\n      if (travNode === this.currNode) {\n        return this.toArray().length - idxFromRight;\n      }\n      if (!travNode.left) {\n        throw 'unable to find current index';\n      }\n      travNode = travNode.left;\n      idxFromRight += 1;\n    }\n  }\n\n  ////// Navigation\n  moveLeft() {\n    if (!this.currNode.left) {\n      return false;\n    }\n    this.currNode = this.currNode.left;\n    return true;\n  }\n\n  moveRight() {\n    if (!this.currNode.right) {\n      return false;\n    }\n    this.currNode = this.currNode.right;\n    return true;\n  }\n\n  ////// Mutation\n  // Add an item to the left of the current item. Current item remains the same item.\n  add(item) {\n    const newLeftLeft = this.currNode.left;\n    const newNode = new _Node(item, newLeftLeft, this.currNode);\n    this.currNode.left = newNode;\n    if (newLeftLeft) {\n      newLeftLeft.right = newNode;\n    }\n  }\n\n  // Remove the item to the left of the current item.\n  remove() {\n    const oldLeft = this.currNode.left;\n    if (!oldLeft) {\n      return;\n    }\n    this.currNode.left = oldLeft.left;\n    if (oldLeft.left) {\n      oldLeft.left.right = this.currNode;\n    }\n  }\n\n}\n\nclass _Node {\n  constructor(item, left, right) {\n    this.item = item;\n    this.left = left;\n    this.right = right;\n  }\n}\n","\nexport function forEachWithBreak(arr, action) {\n  let breakCondition = false;\n  function breakFunc() {\n    breakCondition = true;\n  }\n  for (let i = 0; i < arr.length; i++) {\n    if (breakCondition) {\n      return;\n    }\n    action(breakFunc, arr[i], i);\n  }\n}\n\nexport function boundedWhile(action, max_iter) {\n  let breakCondition = false;\n  function breakFunc() {\n    breakCondition = true;\n  }\n  let idx = 0;\n  while (!breakCondition) {\n    if (idx > max_iter) {\n      break;\n    }\n    action(breakFunc, idx);\n    idx++;\n  }\n}","\nimport * as math from './math.js';\n\nexport function fromJson(json) {\n  if (!json) {\n    return null;\n  }\n  return new Spelling(\n    json.letter,\n    json.numSharps,\n    json.hasNatural);\n}\n\nfunction getNoteNumToNoAccidSpelling(){\n  return {\n    0: new Spelling('C'),\n    2: new Spelling('D'),\n    4: new Spelling('E'),\n    5: new Spelling('F'),\n    7: new Spelling('G'),\n    9: new Spelling('A'),\n    11: new Spelling('B'),\n  };\n}\n\nfunction fromNoteNumWithLetter(num, letter) {\n  const numModOctave = math.mod(num, 12);\n  for (let numSharps = 0; numSharps <= 2; numSharps++) {\n    const try1 = new Spelling(letter, numSharps);\n    if (math.mod(try1.toNoteNum(), 12) == numModOctave) {\n      return try1;\n    }\n    const try2 = new Spelling(letter, -numSharps);\n    if (math.mod(try2.toNoteNum(), 12) == numModOctave) {\n      return try2;\n    }\n  }\n  console.warn(\n    'Unable to find spelling with les than 3 accidentals from note number for letter.',\n    num, letter);\n  return fromNoteNum(num);\n}\n\nfunction fromNoteNumWithMapping(num, mapping) {\n  const numModOctave = math.mod(num, 12);\n  return mapping[numModOctave];\n}\n\nfunction getNextLetter(letter) {\n  return {\n    A: 'B',\n    B: 'C',\n    C: 'D',\n    D: 'E',\n    E: 'F',\n    F: 'G',\n    G: 'A',\n  }[letter];\n}\n\nfunction translateMapping(mappingInC, chord) {\n  let currLetter = 'C';\n  const letterRaises = [];\n  math.range(0, 12).forEach(idx => {\n    const nextLetter = mappingInC[idx].letter;\n    letterRaises.push(nextLetter !== currLetter);\n    currLetter = nextLetter;\n  });\n  const finalMapping = {};\n  let currSpelling = chord.root;\n  math.range(0, 12).forEach(idx => {\n    let letterToUse = currSpelling.letter;\n    if (letterRaises[idx]) {\n      letterToUse = getNextLetter(currSpelling.letter);\n    }\n    const currNoteNum = math.mod(chord.root.toNoteNum() + idx, 12);\n    currSpelling = fromNoteNumWithLetter(currNoteNum, letterToUse)\n    finalMapping[currNoteNum] = currSpelling;\n  });\n  return finalMapping;\n}\n\nfunction getStandardMappingInC() {\n  const mappingInC = {\n    1: new Spelling('D', -1),\n    3: new Spelling('E', -1),\n    6: new Spelling('F', 1),\n    8: new Spelling('A', -1),\n    10: new Spelling('B', -1),\n  };\n  return Object.assign(mappingInC, getNoteNumToNoAccidSpelling())\n}\n\nfunction getDiminishedMappingInC() {\n  return {\n    0: new Spelling('C'),\n    1: new Spelling('D', -1),\n    2: new Spelling('D'),\n    3: new Spelling('E', -1),\n    4: new Spelling('F', - 1),\n    5: new Spelling('F'),\n    6: new Spelling('G', -1),\n    7: new Spelling('G'),\n    8: new Spelling('A', -1),\n    9: new Spelling('B', -2),\n    10: new Spelling('B', -1),\n    11: new Spelling('C', -1),\n  }\n}\n\nexport function fromNoteNumWithChord(num, chord) {\n  if (!chord) {\n    return fromNoteNum(num);\n  }\n\n  let mappingInC = getStandardMappingInC();\n  if (chord.isDiminished()) {\n    mappingInC = getDiminishedMappingInC();\n  }\n  if (chord.isAugmented()) {\n    mappingInC[8] = new Spelling('G', 1)\n  }\n  const finalMapping = translateMapping(mappingInC, chord);\n  return fromNoteNumWithMapping(num, finalMapping);\n}\n\nexport function fromNoteNum(num) {\n  let mapping = {\n    1: new Spelling('C', 1),\n    3: new Spelling('E', -1),\n    6: new Spelling('F', 1),\n    8: new Spelling('A', -1),\n    10: new Spelling('B', -1),\n  };\n  mapping = Object.assign(mapping, getNoteNumToNoAccidSpelling());\n\n  return fromNoteNumWithMapping(num, mapping);\n}\nexport function fromNoteNumWithFlat(num) {\n  let mapping = {\n    1: new Spelling('D', -1),\n    3: new Spelling('E', -1),\n    6: new Spelling('G', -1),\n    8: new Spelling('A', -1),\n    10: new Spelling('B', -1),\n  };\n  mapping = Object.assign(mapping, getNoteNumToNoAccidSpelling());\n\n  return fromNoteNumWithMapping(num, mapping);\n}\n\nexport function fromNoteNumWithSharp(num) {\n  let mapping = {\n    1: new Spelling('C', 1),\n    3: new Spelling('D', 1),\n    6: new Spelling('F', 1),\n    8: new Spelling('G', 1),\n    10: new Spelling('A', 1),\n  };\n  mapping = Object.assign(mapping, getNoteNumToNoAccidSpelling());\n\n  return fromNoteNumWithMapping(num, mapping);\n}\n\nexport function nextFifth(spelling) {\n  return {\n    C: 'G',\n    G: 'D',\n    D: 'A',\n    A: 'E',\n  }[spelling.toString()];\n\n}\n\nexport class Spelling {\n  constructor(letter, numSharps, hasNatural) {\n    this.letter = letter || 'C';\n    this.letter = this.letter.toUpperCase();\n    this.numSharps = numSharps || 0;\n    this.hasNatural = hasNatural || false;\n  }\n\n  equals(sp2) {\n    return (\n      this.letter === sp2.letter\n      && this.numSharps === sp2.numSharps\n      && this.hasNatural === sp2.hasNatural\n    );\n  }\n\n  toAbc(octaveNum) {\n    const octaveNumRelC4 = octaveNum - 4;\n    return [\n      this.numSharps > 0 ? '^'.repeat(this.numSharps) : '',\n      this.numSharps < 0 ? '_'.repeat(-this.numSharps) : '',\n      this.hasNatural ? '=' : '',\n      this.letter.toUpperCase(),\n      octaveNumRelC4 > 0 ? \"'\".repeat(octaveNumRelC4) : '',\n      octaveNumRelC4 < 0 ? \",\".repeat(-octaveNumRelC4) : '',\n    ].join('');\n  }\n\n  toNoteNum(octaveNum) {\n    octaveNum = octaveNum || 0;\n    return octaveNum * 12 + letterToBaseNoteNum[this.letter] + this.numSharps;\n  }\n\n  toString() {\n    const accidentals = this.numSharps > 0 ? '#'.repeat(this.numSharps) : 'b'.repeat(-this.numSharps);\n    return `${this.letter.toUpperCase()}${accidentals}`;\n  }\n\n  shift(key1, key2) {\n    const noteNumShift = math.mod(key2.toNoteNum() - key1.toNoteNum(), 12);\n    const charShift = key2.minus(key1);\n    let newLetter = this.letter;\n    math.range(0, charShift).forEach(_ => {\n      newLetter = getNextLetter(newLetter);\n    });\n    return fromNoteNumWithLetter(this.toNoteNum() + noteNumShift, newLetter);\n  }\n  minus(sp2) {\n    return math.mod(_ascii(this.letter) - _ascii(sp2.letter), numLetters);\n  }\n}\n\nfunction _ascii(a) { return a.charCodeAt(0); }\n\nconst numLetters = 7;\n\nconst letterToBaseNoteNum = {\n  C: 0,\n  D: 2,\n  E: 4,\n  F: 5,\n  G: 7,\n  A: 9,\n  B: 11,\n}","import * as debug from './debug.js';\n\nfunction getValues(collectionName, docName) {\n  const db = firebase.firestore();\n  return db.collection(collectionName).doc(docName).get().then(function (doc) {\n      if (doc.exists) return doc.data();\n      return null;\n  });\n}\n\nexport async function retrieve(id) {\n  const collName = debug.version();\n  try {\n    const doc = await getValues(collName, id);\n    if (doc) {\n      return JSON.parse(doc.payload);\n    }\n  } catch (err) {\n    console.warn('Failed to retrieve document.', err);\n  }\n}\n\n","import * as bassComp from './bassComp.js';\nimport * as comp from './comp.js';\nimport * as chd from '../chord/chord.js';\nimport * as chunking from './chunking.js';\nimport * as debug from './debug.js';\nimport * as pointed from './pointed.js';\nimport * as frac from './frac.js';\nimport * as iter from './iter.js';\nimport * as location from './location.js';\nimport * as math from './math.js';\nimport * as spell from './spell.js';\nimport * as storage from './storage.js';\n\nconst CURSOR = '🐱';\n\nfunction renderChordMeas(chordMeas, abcList, abcNoteDuration, measStartTime, measureEndTime) {\n  if (chordMeas.length === 0) {\n    // TODO possibly remove this if abcJs fixes their bug for tuplet in pickup.\n    const dur = measureEndTime.minus(measStartTime);\n    const mult = frac.Frac.divides(dur, abcNoteDuration);\n    abcList.push(` y${mult.toString()}`);\n\n    return;\n  }\n  const chordLoc = chordMeas[0];\n  if (measStartTime.lessThan(chordLoc.start)) {\n    const dur = chordLoc.start.minus(measStartTime);\n    const mult = frac.Frac.divides(dur, abcNoteDuration);\n    const blankNote = ` x${mult.toString()} `;\n    abcList.push(blankNote);\n  }\n  chordMeas.forEach((chordLoc, idx) => {\n    const endTime = (\n      idx + 1 < chordMeas.length ? chordMeas[idx + 1].start :\n      measureEndTime);\n    const dur = endTime.minus(chordLoc.start);\n    const mult = frac.Frac.divides(dur, abcNoteDuration);\n    const chordString = chordLoc.chord ? chordLoc.chord.toString() : '';\n    const cursor = chordLoc.onCursor ? CURSOR : '';\n    const chord = ` \"${cursor}${chordString}\"x${mult.toString()} `;\n    abcList.push(chord);\n  });\n}\n\n// chunks is a list of NoteGps.\n// Returns the current proximateChordIdx for the next renderMeas to use.\nfunction renderMeas(\n    chunks, abcList, currNoteGp, keySigSharpMap, timeSigDenom,\n    showNotesCursor, showSpelling, abcNoteDuration, chordLocs,\n    prevProximateChordIdx, measureEndTime, cursorTime) {\n  if (chunks.length === 0) {\n    return prevProximateChordIdx;\n  }\n\n  // TODO think about moving this block to where chunking happens\n  let proximateChordIdx = prevProximateChordIdx;\n  let sharpMap = {};\n  chunks.forEach((chunk, chunkIdx) => {\n    const noteGpsArr = chunk.getNoteGps();\n    noteGpsArr.forEach((noteGp, idx) => {\n      proximateChordIdx = _getProximateChordIdx(proximateChordIdx, noteGp, chordLocs);\n      const proximateChord = chordLocs.length < 1 ? null : chordLocs[proximateChordIdx].chord;\n\n      if (!noteGp.isGraceNote()) {\n        // Display cursor at the unique non-grace noteGp that currNoteGp is associated with.\n        if (showNotesCursor) {_displayCursor(abcList, noteGp, currNoteGp, cursorTime);}\n        if (showSpelling) {_displaySpelling(abcList, noteGp, proximateChord);}\n      }\n\n      // TODO think of how to make the grace note rendering cleaner.\n      if (noteGp.isGraceNote()) {\n        // No need to handle grace note within a tuplet chunk. Not possible currently.\n        // Start of grace note in a singleton chunk\n        if (chunkIdx - 1 < 0 ||\n          !(chunks[chunkIdx - 1] instanceof chunking.SingletonChunk) ||\n          !chunks[chunkIdx - 1].getNoteGps()[0].isGraceNote()) {\n            abcList.push('{');\n        }\n      }\n\n      const alteredNoteGps = chunk.getAlteredNoteGps()[idx];\n      _displayNoteGp(\n        abcList, alteredNoteGps, sharpMap, keySigSharpMap, proximateChord,\n        abcNoteDuration, timeSigDenom, chunk, idx);\n\n      // TODO think of how to make the grace note rendering cleaner.\n      if (noteGp.isGraceNote()) {\n        // End of grace note in a singleton chunk\n        if (chunkIdx + 1 > chunks.length ||\n          !(chunks[chunkIdx + 1] instanceof chunking.SingletonChunk) ||\n          !chunks[chunkIdx + 1].getNoteGps()[0].isGraceNote()) {\n            abcList.push('}');\n        }\n      }\n    });\n  });\n\n  _padFinalMeasure(abcList, measureEndTime, chunks, abcNoteDuration);\n  return proximateChordIdx;\n}\n\n// Split the interval between startTime and endTime if it crosses measure boundaries.\nfunction _split(startTime, endTime, durationPerMeasure) {\n  const res = [];\n  let currStartTime = startTime;\n  while (true) {\n    const cutoffTime = location.nextMeasureTime(currStartTime, durationPerMeasure);\n    const currEndTime = cutoffTime.lessThan(endTime) ? cutoffTime : endTime;\n    res.push({\n      start: currStartTime,\n      end: currEndTime\n    });\n    if (currEndTime.geq(endTime)) {\n      break;\n    }\n    currStartTime = currEndTime;\n  }\n  return res;\n}\n\nfunction _displayCursor(abcList, noteGp, currNoteGp, cursorTime) {\n  // Use equality of start because other parts of currNoteGp\n  // may have been changed.\n  if (!currNoteGp) {\n    return;\n  }\n  if (!cursorTime.equals(noteGp.start)) {\n    return;\n  }\n  abcList.push(`\"<${CURSOR}\"`);\n\n  if (!currNoteGp.isGraceNote()) {\n    return;\n  }\n\n  const abcSpelling = spell.fromNoteNum(currNoteGp.getNotes()[0].noteNum);\n  // TODO think of better ways show that the cursor is pointing to a grace note.\n  abcList.push(`\"<${abcSpelling}\"`);\n}\n\nfunction _displaySpelling(abcList, noteGp, proximateChord) {\n  if (noteGp.tie) {\n    return;\n  }\n  noteGp.getNotes().forEach(note => {\n    if (!note.noteNum) {\n      return;\n    }\n    const spelling = (\n      note.spelling ? note.spelling :\n      spell.fromNoteNumWithChord(note.noteNum, proximateChord));\n    abcList.push(`\">${spelling.toString()}\"`);\n  });\n}\n\nfunction _displayNoteGp(\n    abcList, noteGp, sharpMap, keySigSharpMap, proximateChord,\n    abcNoteDuration, timeSigDenom, chunk, idx) {\n  // Add space to break beams when denom is 4, 2 or 1 for timeSig 3/4 or 4/4, .\n  if (idx === 0 && frac.build(timeSigDenom, noteGp.start.denom).isWhole()) {\n    abcList.push(' ');\n  }\n  if (idx === 0 && chunk.getAbcPreamble()) {\n    abcList.push(chunk.getAbcPreamble())\n  }\n  const hasMultNotes = noteGp.getNotes().length > 1;\n  if (hasMultNotes) {\n    abcList.push('[');\n  }\n  const dur = noteGp.getDuration();\n  // TODO handle tuplets i.e. C'2/3D'2/3E'2/3 -> (3:2C'D'E'\n  noteGp.getNotes().forEach(note => {\n    // TODO duration being 5/8 is not working.\n    let abcNote = noteNumToAbc(note, sharpMap, keySigSharpMap, proximateChord);\n    if (noteGp.isGraceNote()) {\n      // The grace notes braces are added outside of this function\n      // in order to support multiple grace notes.\n      abcList.push(`${abcNote}`);\n    } else {\n      const mult = frac.Frac.divides(dur, abcNoteDuration);\n      abcNote += mult.toString();\n      abcList.push(abcNote);\n    }\n  });\n  if (hasMultNotes) {\n    abcList.push(']');\n  }\n  if (noteGp.tie) {\n    abcList.push(\"-\");\n  }\n}\n\nfunction _getProximateChordIdx(proximateChordIdx, noteGp, chordLocs) {\n  // if (noteGp.start.lessThan(chordLocs[proximateChordIdx].start)) {\n    // TODO a good initial chord is the dominant of the starting chord; e.g. C7 -> F.\n    // return dominantChordOf(chordLocs[proximateChordIdx]);\n  // }\n\n  for (let idx = proximateChordIdx + 1; idx < chordLocs.length; idx++) {\n    const chordLoc = chordLocs[idx];\n    if (noteGp.start.lessThan(chordLoc.start)) {\n      break;\n    }\n    proximateChordIdx = idx;\n  }\n  return proximateChordIdx;\n}\n\nfunction _padFinalMeasure(abcList, measureEndTime, chunks, abcNoteDuration) {\n  const lastNoteGps = chunks[chunks.length - 1].getNoteGps();\n  const lastNoteGp = lastNoteGps[lastNoteGps.length - 1];\n  const remainingDuration = measureEndTime.minus(lastNoteGp.end);\n  if (remainingDuration.toFloat() <= 0) {\n    return;\n  }\n  const mult = frac.Frac.divides(remainingDuration, abcNoteDuration);\n  abcList.push('x' + mult.toString());\n}\n\nfunction _computeKeySigSharpMap(keySigSp) {\n  const sharpMap = {};\n  // Case 1: flats\n  if (keySigSp.toString() === 'C') {\n    return sharpMap;\n  }\n  if (keySigSp.numSharps < 0 || keySigSp.toString() === 'F') {\n    let currNoteNum = keySigSp.toNoteNum();\n    while (true) {\n      const currFourth = spell.fromNoteNumWithFlat(math.mod(currNoteNum + 5, 12));\n      sharpMap[currFourth.letter] = sharpMap[currFourth.letter] || 0;\n      sharpMap[currFourth.letter] -= 1;\n      // Go up a fifth for the next iteration; e.g. Bb -> F\n      currNoteNum = math.mod(currNoteNum + 7, 12);\n      if (currNoteNum == 0) {\n        return sharpMap;\n      }\n    }\n  }\n  // Case 2: sharps\n  let currNoteNum = keySigSp.toNoteNum();\n  while (true) {\n    const currSeventh = spell.fromNoteNumWithSharp(math.mod(currNoteNum + 10, 12));\n    sharpMap[currSeventh.letter] = sharpMap[currSeventh.letter] || 0;\n    sharpMap[currSeventh.letter] += 1;\n    // Go up down a fifth for the next iteration; e.g. D -> G\n    currNoteNum = math.mod(currNoteNum - 7, 12);\n    if (currNoteNum == 0) {\n      return sharpMap;\n    }\n  }\n}\n\n\nfunction getOctaveNum(num, spelling) {\n  const noteNumDiff = num - spelling.toNoteNum(0);\n  if (math.mod(noteNumDiff, 12) !== 0) {\n    console.warn('This spelling does not have the expected note number (mod 12).', spelling, num);\n  }\n  // Minus 1 because 24 -> C1\n  return Math.floor(noteNumDiff / 12) - 1;\n}\n\n// sharpMap may get mutated. keySigSharpMap will not get mutated.\nconst noteNumToAbc = (note, sharpMap, keySigSharpMap, chord) => {\n  const num = note.noteNum;\n  if (!num) {\n    return 'z';\n  }\n  sharpMap = sharpMap || {};\n  // TODO use the chord in the current/next measure to spell this correctly.\n  const spelling = note.spelling ? note.spelling : spell.fromNoteNumWithChord(num, chord);\n  const octaveNum = getOctaveNum(num, spelling);\n  const sharpMapKey = `${spelling.letter}${octaveNum}`;\n  const prevNumSharps = (\n    sharpMap[sharpMapKey] === undefined ?\n    keySigSharpMap[spelling.letter] || 0 : sharpMap[sharpMapKey]);\n  sharpMap[sharpMapKey] = spelling.numSharps;\n\n  // Add natural if previous notes have accidentals.\n  if (prevNumSharps && spelling.numSharps === 0) {\n    spelling.hasNatural = true;\n  }\n\n  // Don't add accidentals if previous notes have already done it.\n  if (spelling.numSharps === prevNumSharps) {\n    spelling.numSharps = 0;\n  }\n  return spelling.toAbc(octaveNum);\n}\n\n// A location is an object with start time.\n// A measure consists of the measure number and the content, which is a list of locations.\n// A line is a list of measure content.\nfunction locationsToLines(locations, durationPerMeasure, barsPerLine, numPickupMeas) {\n  // A measure is an array of locations object.\n  let currMeas;\n  let currMeasNum;\n  const measures = [];\n  locations.forEach(loc => {\n    const measNum = location.measureNum(loc.start, durationPerMeasure);\n    if (measNum === currMeasNum) {\n      currMeas.push(loc);\n      return;\n    }\n    currMeas = [loc];\n    currMeasNum = measNum;\n\n    // Fill in empty measures if the locations are sparse (e.g. chords or near the end for noteGps).\n    while (measNum > measures.length - numPickupMeas) {\n      measures.push({content: [], measNum: measures.length - numPickupMeas});\n    }\n\n    measures.push({content: currMeas, measNum: measNum});\n  });\n\n  // A line is an array of measures\n  const lines = [];\n  let currLine;\n  let currLineNum;\n  measures.forEach(meas => {\n    const lineNum = location.lineNum(meas.measNum, barsPerLine);\n    if (lineNum === currLineNum) {\n      currLine.push(meas.content);\n      return;\n    }\n    currLine = [meas.content];\n    currLineNum = lineNum;\n    lines.push(currLine);\n  });\n  return lines;\n}\n\nexport class Note {\n  constructor(noteNum, spelling) {\n    // null means rest.\n    this.noteNum = noteNum;\n    this.spelling = spelling || null;\n  }\n\n  static fromJson(json) {\n    return new Note(\n      json.noteNum,\n      spell.fromJson(json.spelling));\n  }\n\n  equals(n2) {\n    return this.noteNum === n2.noteNum;\n  }\n\n  clone() {\n    return new Note(\n      this.noteNum,\n      // TODO clone this.\n      this.spelling,\n    );\n  }\n}\n\nexport class NoteGp {\n  constructor(notes, start, end, tie, startMillis) {\n    if (notes.length > 1) {\n      notes.sort((n1, n2) => { return n1.noteNum - n2.noteNum});\n    }\n    this.notes = notes;\n    this.start = start;\n    this.end = end;\n    this.tie = tie || false;\n    this.startMillis = startMillis || 0;\n  }\n\n  static fromJson(json) {\n    const notes = json.notes.map(jsonNote => {\n      return Note.fromJson(jsonNote);\n    });\n    return new NoteGp(\n      notes,\n      frac.fromJson(json.start),\n      frac.fromJson(json.end),\n      json.tie,\n      json.startMillis);\n  }\n\n  clone() {\n    return new NoteGp(\n      this.notes.map(note => {\n        return note.clone();\n      }),\n      this.start,\n      this.end,\n      this.tie,\n      this.startMillis,\n    );\n  }\n\n  equals(ng2) {\n    if (!this.start.equals(ng2.start)) {\n      return false;\n    }\n    if (!this.end.equals(ng2.end)) {\n      return false;\n    }\n    if (this.notes.length !== ng2.notes.length) {\n      return false;\n    }\n    for (let i = 0; i < this.notes.length; i++) {\n      if (!this.notes[i].equals(ng2.notes[i])) {\n        return false;\n      }\n    }\n    if (this.tie !== ng2.tie) {\n      return false;\n    }\n    return true;\n  }\n\n  isRest() {\n    return this.notes.length === 1 && this.notes[0].noteNum == null;\n  }\n\n  isGraceNote() {\n    return this.start.equals(this.end)\n  }\n\n  getNotes() {\n    return this.notes;\n  }\n\n  getDuration() {\n    return this.end.minus(this.start);\n  }\n\n  setDuration(duration) {\n    this.end = this.start.plus(duration);\n  }\n\n  weaklyInside(left, right) {\n    return (\n      this.start.weaklyInside(left, right) &&\n      this.end.weaklyInside(left, right));\n  }\n\n  // Return 2 notes.\n  // [null, this] if start >= middleTime.\n  // [this, null] if end <= middleTime.\n  split(middleTime) {\n    if (this.start.geq(middleTime)) {\n      return [null, this];\n    }\n    if (this.end.leq(middleTime)) {\n      return [this, null];\n    }\n    const left = this.clone();\n    left.end = middleTime;\n    if (!this.isRest()) {\n      left.tie = true;\n    }\n    const right = this.clone();\n    right.start = middleTime;\n    return [left, right];\n  }\n}\n\nexport class Chord {\n  constructor(str, start) {\n    this.str = str;\n    this.start = start;\n  }\n}\n\nfunction fixEnds(noteGpsArray) {\n  return noteGpsArray.map((noteGp, idx) => {\n    const nextNoteGp = idx + 1 >= noteGpsArray.length ? null : noteGpsArray[idx + 1];\n    if (!nextNoteGp) {\n      return noteGp;\n    }\n    if (nextNoteGp.start.equals(noteGp.end)) {\n      return noteGp;\n    }\n    const clone = noteGp.clone();\n    clone.end = nextNoteGp.start;\n    console.warn('Fixing ends from and to.', noteGp, clone);\n    return clone;\n  });\n}\n\nfunction splitBefore(phrase, delimiterSubregexString) {\n  // use positive look-ahead so that the split doesn't remove the delimiter.\n  return phrase.split(new RegExp(`(?=${delimiterSubregexString})`));\n}\n\nfunction splitAfter(phrase, delimiterSubregexString) {\n  // use positive look-behind so that the split doesn't remove the delimiter.\n  return phrase.split(new RegExp(`(?<=${delimiterSubregexString})`));\n}\n\nfunction toLyricsTokens(lyricsString) {\n  const asianRegexStr = '[\\u3040-\\u30ff\\u3400-\\u4dbf\\u4e00-\\u9fff\\uf900-\\ufaff\\uff66-\\uff9f]';\n  const tokens = lyricsString.split(/[\\s]+/).flatMap(phrase => {\n    // 'ab-cd' => ['ab-', 'cd']\n    return splitAfter(phrase, '-');\n  }).flatMap(phrase => {\n    // Not using splitAfter here because we want:\n    // '天?' => ['天?']\n    // '天如' => ['天', '如']\n    return splitBefore(phrase, asianRegexStr)\n  });\n  return tokens;\n}\n\nfunction fromLyricsToken(tokens) {\n  return tokens.join(' ');\n}\n\nexport class Voice {\n  constructor(noteGps, clef) {\n    this.noteGps = noteGps || new pointed.List;\n    this.clef = clef || 'treble';\n  }\n\n  static fromJson(json) {\n    const noteGpsArray = json.noteGps.map(jsonItem => {\n      return NoteGp.fromJson(jsonItem)\n    });\n    return Voice.fromNoteGpsArray(noteGpsArray, json.clef);\n  }\n\n  static fromNoteGpsArray(noteGpsArray, clef) {\n    const merged = fixEnds(chunking.mergeTiesAndRests(noteGpsArray));\n    const noteGpsIdx = 0;\n    const noteGps = new pointed.List(merged, noteGpsIdx);\n    return new Voice(noteGps, clef);\n  }\n\n  toJson() {\n    return {\n      noteGps: this.noteGps.toArray(),\n      clef: this.clef,\n    };\n  }\n\n  // TODO move this to a toString method of abc.js\n  /**\n   * Measures layout (measure -1 is the pickup measure)\n   * line 0 : -1 | 0 | 1 | 2 | 3 |\n   * line 1:       4 | 5 | 6 | 7 |\n   * line 2:       8 | ...\n   */\n  getAbcStrings(abcNoteDuration, doc, showSpelling, chordLocs,\n    displayChords, showNotesCursor, idx, cursorTime) {\n    if (doc.displayMelodyOnly && idx !== 0) {\n      return;\n    }\n\n    const timeSigNumer = doc.timeSigNumer;\n    const timeSigDenom = doc.timeSigDenom;\n    const pickup = doc.pickup;\n    const keySigSp = doc.keySigSp;\n    const keySigLocs = doc.keySigLocs;\n    const tokens = doc.lyricsTokens;\n\n    const durationPerMeasure = frac.build(timeSigNumer, timeSigDenom);\n    const barsPerLine = 4;\n    const abcList = [\n      `V:${idx} clef=${this.clef}\\n`,\n    ];\n\n    const numPickupMeas = -location.measureNum(pickup.negative(), durationPerMeasure);\n\n    const chordLines = locationsToLines(chordLocs, durationPerMeasure, barsPerLine, numPickupMeas);\n    const chordLinesToDisplay = displayChords ? chordLines : [];\n    chordLocs = chordLines.flat().flat();\n    const noteLines = locationsToLines(\n      chunking.periodicSplit(this.noteGps.toArray(), durationPerMeasure),\n      durationPerMeasure, barsPerLine, numPickupMeas);\n    const keySigLines = locationsToLines(keySigLocs, durationPerMeasure, barsPerLine, numPickupMeas);\n\n    let keySigSharpMap = _computeKeySigSharpMap(keySigSp);\n\n    // The default key signature must be specified per voice\n    // because it can be overriden by a previous voice.\n    abcList.push(` [K:${keySigSp.toString()}] `);\n    const numLines = Math.max(noteLines.length, chordLinesToDisplay.length);\n\n    // Add cursor after the key sig for the no note lines case.\n    if (!noteLines.length) {\n      if (showNotesCursor) {\n        abcList.push(`\"<${CURSOR}\"x`);\n      }\n    }\n    if (!numLines) {\n      abcList.push('|]\\n');\n      return abcList;\n    }\n\n    let proximateChordIdx = 0;\n    let tokenIdx = 0;\n    let nextTokenIsBlank = false;\n    // These loop variables are needed because it's possible to have an empty noteMeas\n    // (because of end of all notes) and an empty chordMeas (because of unchanging chord).\n    let measStartTime = pickup.negative();\n    let measEndTime = pickup.toFloat() > 0 ? frac.build(0) : durationPerMeasure;\n\n    math.range(0, numLines).forEach(lineIdx => {\n      const noteMeasures = lineIdx < noteLines.length ? noteLines[lineIdx] : [];\n      const chordMeasures = lineIdx < chordLinesToDisplay.length ? chordLinesToDisplay[lineIdx] : [];\n      const keySigMeasures = lineIdx < keySigLines.length ? keySigLines[lineIdx] : [];\n      const numMeas = Math.max(noteMeasures.length, chordMeasures.length);\n      const noteGpsArrsForLyricsLine = [];\n      math.range(0, numMeas).forEach(measIdx => {\n        const noteMeas = measIdx < noteMeasures.length ? noteMeasures[measIdx] : [];\n        const chordMeas = measIdx < chordMeasures.length ? chordMeasures[measIdx] : [];\n        const keySigMeas = measIdx < keySigMeasures.length ? keySigMeasures[measIdx] : [];\n        if (keySigMeas.length > 0) {\n          const keySigLoc = keySigMeas[0];\n          abcList.push(` [K:${keySigLoc.keySigSp.toString()}] `);\n          keySigSharpMap = _computeKeySigSharpMap(keySigLoc.keySigSp);\n        }\n        // Pad an empty measure that's sandwiched between non-empty measures.\n        if (noteMeas.length == 0 && chordMeas.length == 0) {\n          const measDuration = measEndTime.minus(measStartTime);\n          const mult = frac.Frac.divides(measDuration, abcNoteDuration);\n          abcList.push(` x${mult.toString()}`)\n        }\n\n        // startTime is recomputed because we want it to work for pickup measure also\n        const chunks = chunking.exec(\n          noteMeas, measEndTime.minus(durationPerMeasure), measEndTime,\n          timeSigNumer, timeSigDenom, showNotesCursor ? cursorTime : null);\n        if (doc.displayLyrics && idx === 0 && tokenIdx < tokens.length) {\n          noteGpsArrsForLyricsLine.push(chunks.map(chunk => {\n            return chunk.getNoteGps();\n          }).flat());\n        }\n        proximateChordIdx = renderMeas(\n          chunks,\n          abcList, this.noteGps.getCurr(), keySigSharpMap,\n          timeSigDenom, showNotesCursor, showSpelling,\n          abcNoteDuration, chordLocs, proximateChordIdx, measEndTime, cursorTime);\n\n        // Separate meas and chordMeas as 2 voice parts.\n        if (noteMeas.length > 0\n          // TODO add this back if renderChordMeas stop using y-spacer for empty chordMeas\n          // && chordMeas.length > 0\n        ) {\n          abcList.push('& ');\n        }\n\n        renderChordMeas(\n          chordMeas, abcList, abcNoteDuration, measStartTime, measEndTime);\n\n        // Add cursor to the last measure if cursor is at the tail.\n        const isFinalNoteMeas = lineIdx === noteLines.length - 1 && measIdx === noteMeasures.length - 1;\n        if (isFinalNoteMeas && showNotesCursor && this.noteGps.atTail()) {\n          const cursorOnNextMeas = measEndTime.equals(cursorTime);\n          if (cursorOnNextMeas) {\n            abcList.push(` | `);\n          }\n          abcList.push(`\"<${CURSOR}\"x`);\n          if (!cursorOnNextMeas) {\n            abcList.push(` | `);\n          }\n        } else {\n          const isFinalMeas = lineIdx === numLines - 1 && measIdx === numMeas - 1;\n          const barLine = isFinalMeas ? ' |]' : '| ';\n          abcList.push(barLine);\n        }\n\n        // Update loop variables.\n        measStartTime = measEndTime;\n        measEndTime = measEndTime.plus(durationPerMeasure);\n      });\n      abcList.push('\\n');\n\n      // Lyrics\n      if (noteGpsArrsForLyricsLine.flat().length === 0) {\n        return;\n      }\n      abcList.push('w: ');\n      noteGpsArrsForLyricsLine.forEach(noteGpsArr => {\n        noteGpsArr.forEach(noteGp => {\n          if (noteGp.isRest() || noteGp.isGraceNote()) {\n            return;\n          }\n          const currTokenIsBlank = nextTokenIsBlank;\n          nextTokenIsBlank = noteGp.tie;\n          if (currTokenIsBlank) {\n            abcList.push('* ');\n            return;\n          }\n          if (tokenIdx >= tokens.length) {\n            return;\n          }\n          abcList.push(`${tokens[tokenIdx]} `);\n          tokenIdx++;\n        });\n        abcList.push(' | ')\n      });\n      abcList.push('\\n');\n    });\n    return abcList;\n  }\n}\n\nclass ChordLoc {\n  constructor(chord, start, onCursor) {\n    // Can be null, for holding a cursor, or the start time of chordless measures.\n    this.chord = chord;\n    this.start = start;\n    // TODO put this field in a wrapper object instead, e.g. ChordRendering.\n    // This field is only used during rendering; won't be persisted.\n    this.onCursor = onCursor || false;\n  }\n\n  static fromJson(json) {\n    return new ChordLoc(\n      new chd.Chord(json.chord),\n      frac.fromJson(json.start),\n    );\n  }\n\n  clone() {\n    return new ChordLoc(this.chord, this.start);\n  }\n}\n\nclass KeySigLoc {\n  constructor(keySigSp, start) {\n    this.keySigSp = keySigSp;\n    this.start = start;\n  }\n\n  static fromJson(json) {\n    return new KeySigLoc(\n      spell.fromJson(json.keySigSp),\n      frac.fromJson(json.start),\n    );\n  }\n}\n\nclass TimeSigLoc {\n  constructor(timeSigNumer, timeSigDenom, start) {\n    this.timeSigNumer = timeSigNumer;\n    this.timeSigDenom = timeSigDenom;\n    this.start = start;\n  }\n\n  static fromJson(json) {\n    return new TimeSigLoc(\n      json.timeSigNumer,\n      json.timeSigDenom,\n      frac.fromJson(json.start),\n    );\n  }\n}\n\nconst NO_TITLE = 'Unnamed';\n\nclass Doc {\n  constructor(\n    title, timeSigNumer, timeSigDenom, keySigSp, tempo, voices, pickup,\n    composer, owner, cloneId, chordLocs, keySigLocs, tempoStr, timeSigLocs,\n    lyricsTokens) {\n    this.title = title || NO_TITLE;\n    this.timeSigNumer = timeSigNumer || 4;\n    this.timeSigDenom = timeSigDenom || 4;\n    this.keySigSp = keySigSp || new spell.Spelling('C');\n    this.tempo = tempo || 80;\n    this.voices = voices || [new Voice()];\n    this.pickup = pickup || frac.build(0);\n    this.composer = composer || '';\n    this.owner = owner || '';\n    this.cloneId = cloneId || '';\n    this.chordLocs = chordLocs ? chordLocs : [];\n    this.keySigLocs = keySigLocs || [];\n    this.tempoStr = tempoStr || '';\n    // TODO make use of this field once we sort out method that require\n    // time sig to be constant.\n    // Approach 1. Look at all usages of getDurationPerMeasure and location.js\n    // Approach 2. Just switch and see what is broken.\n    this.timeSigLocs = timeSigLocs || [];\n    this.lyricsTokens = lyricsTokens || [];\n\n    this.displayMelodyOnly = false;\n    this.displayLyrics = true;\n  }\n\n  static fromJson(json) {\n    return new Doc(\n      json.title,\n      json.timeSigNumer,\n      json.timeSigDenom,\n      spell.fromJson(json.keySigSp),\n      json.tempo,\n      json.voices.map(voice => { return Voice.fromJson(voice); }),\n      frac.fromJson(json.pickup),\n      json.composer,\n      json.owner,\n      json.cloneId,\n      json.chordLocs ? json.chordLocs.map(loc => { return ChordLoc.fromJson(loc); }) : [],\n      json.keySigLocs ? json.keySigLocs.map(loc => { return KeySigLoc.fromJson(loc); }) : [],\n      json.tempoStr,\n      json.timeSigLocs ? json.timeSigLocs.map(loc => { return TimeSigLoc.fromJson(loc); }) : [],\n      json.lyricsTokens,\n    );\n  }\n\n  toJson() {\n    return {\n      title: this.title,\n      timeSigNumer: this.timeSigNumer,\n      timeSigDenom: this.timeSigDenom,\n      keySigSp: this.keySigSp,\n      tempo: this.tempo,\n      voices: this.voices.map(voice => { return voice.toJson(); }),\n      pickup: this.pickup,\n      composer: this.composer,\n      owner: this.owner,\n      cloneId: this.cloneId,\n      chordLocs: this.chordLocs,\n      keySigLocs: this.keySigLocs,\n      tempoStr: this.tempoStr,\n      timeSigLocs: this.timeSigLocs,\n      lyricsTokens: this.lyricsTokens,\n    };\n  }\n\n  setVoices(voices) {\n    this.voices = voices;\n  }\n\n  clearChords() {\n    this.chordLocs = [];\n  }\n\n  shiftToKey(newKeySp, shiftUp) {\n    const  shift = math.mod(newKeySp.toNoteNum() - this.keySigSp.toNoteNum(), 12) + shiftUp * 12;\n    // 1. Chords\n    this.chordLocs.forEach(chordLoc => {\n      chordLoc.chord.root = chordLoc.chord.root.shift(this.keySigSp, newKeySp, shift);\n      if (chordLoc.chord.bass) {\n        chordLoc.chord.bass = chordLoc.chord.bass.shift(this.keySigSp, newKeySp, shift);\n      }\n    });\n\n    // 2. Voices\n    this.voices.forEach(voice => {\n      voice.noteGps.toArray().forEach(noteGp => {\n        noteGp.notes.forEach(note => {\n          if (!note.noteNum) {\n            return;\n          }\n          note.noteNum = note.noteNum + shift;\n        });\n      });\n    });\n\n    // 3. Key Sig\n    this.keySigSp = newKeySp;\n  }\n}\n\nexport class Editor {\n  constructor(step, currVoiceIdx, cursorOnChords, cursorTime) {\n    this.step = step || frac.build(1, 4);\n    this.currVoiceIdx = currVoiceIdx || 0;\n    this.cursorOnChords = cursorOnChords || false;\n    this.cursorTime = cursorTime || new frac.build(0);\n  }\n\n  static fromJson(json) {\n    return new Editor(\n      frac.fromJson(json.step),\n      json.currVoiceIdx,\n      json.cursorOnChords,\n      frac.fromJson(json.cursorTime));\n  }\n\n}\n\nexport class Part {\n  constructor(id, keySigSp, shiftUp, shiftIn) {\n    this.id = id || '';\n    this.keySigSp = keySigSp || null;\n    this.shiftUp = shiftUp || 0;\n    this.shiftIn = shiftIn || false;\n  }\n\n  getLink() {\n    const url = new URL(document.URL);\n    const songUrl = new URL('/fire/music.html', url.origin);\n    songUrl.searchParams.set('view', '1');\n    songUrl.searchParams.set('id', this.id);\n    songUrl.searchParams.set('shiftUp', this.shiftUp.toString());\n    songUrl.searchParams.set('shiftIn', this.shiftIn.toString());\n        if (this.keySigSp) {\n          songUrl.searchParams.set('keySig', this.keySigSp.toString());\n        }\n    return songUrl.href;\n  }\n\n  static fromLink(link) {\n    const url = new URL(link);\n    const id = url.searchParams.get('id');\n    if (!id) {\n      throw 'Invalid link due to missing id: ' + link;\n    }\n    let keySigSp = null;\n    const keySigStr = url.searchParams.get('keySig');\n    if (keySigStr) {\n      const chord = _parseChordStr(keySigStr);\n      if (chord) {\n        keySigSp = chord.root;\n      }\n    }\n    const shiftUp = parseInt(url.searchParams.get('shiftUp'));\n    return this.fromJson({\n      id: id,\n      link: link,\n      keySigSp: keySigSp,\n      shiftUp: isNaN(shiftUp) ? 0 : shiftUp,\n      // TODO think about whether this belong in the url.\n      // If not and this is a useful feature, we will need proper merging.\n      shiftIn: url.searchParams.get('shiftIn') == '1',\n    });\n  }\n\n  static fromJson(json) {\n    return new Part(\n      json.id,\n      spell.fromJson(json.keySigSp),\n      json.shiftUp,\n      json.shiftIn);\n  }\n}\n\nexport class StateMgr {\n  constructor(ebanner, urlId, shadowRoot, execPub) {\n    this.ebanner = ebanner;\n    this.urlId = urlId;\n    this.shadowRoot = shadowRoot;\n    this.execPub = execPub;\n\n    this.doc = new Doc;\n    this.editor = new Editor;\n    this.parts = [];\n    // TODO auto-compute this based on the notes' GCD.\n    this.abcNoteDuration = frac.build(1, 8);\n    this.showSpelling = false;\n    this.noteNumShift = 0;\n    this.seed = 54;\n    this.isTrumpet = false;\n  }\n\n  loadJson(json) {\n    this.doc = Doc.fromJson(json.doc);\n    this.editor = Editor.fromJson(json.editor);\n    this.setCursorTimeSyncPointer(this.getCursorTime());\n\n    this.parts = json.parts ? json.parts.map(pJson => {return Part.fromJson(pJson); }) : [];\n    this.loadParts();\n\n    const url = new URL(document.URL);\n    const keySigStr = url.searchParams.get('keySig');\n    const shiftUp = parseInt(url.searchParams.get('shiftUp'));\n    this.shiftToKey(keySigStr, isNaN(shiftUp) ? 0 : shiftUp);\n\n    if (this.doc.cloneId !== '') {\n      const cloneAnchor = this.shadowRoot.querySelector('#clone-anchor');\n      cloneAnchor.style.display = 'inline';\n      cloneAnchor.href = getSongUrl(this.doc.cloneId);\n    }\n  }\n\n  toJson() {\n    return {\n      doc: this.doc.toJson(),\n      editor: this.editor,\n      parts: this.parts,\n    };\n  }\n\n  setUrlId(urlId) {\n    this.urlId = urlId;\n  }\n\n  switchInstrumentFingering() {\n    this.isTrumpet = !this.isTrumpet;\n    this.ebanner.display(`Instrument fingering: ` + (this.isTrumpet ? 'jkl-trumpet' : '12345-piano'));\n  }\n\n  quantize() {\n    const arr = this.getCurrVoice().noteGps.toArray();\n    const durations = arr.map((noteGp, idx) => {\n      if (idx + 1 >= arr.length) {\n        return null;\n      }\n      const dur = arr[idx + 1].startMillis - noteGp.startMillis;\n      if (dur > 0) {\n        return dur;\n      }\n      return null;\n    });\n    const maxDur = Math.max(...durations);\n    const cleanedDurs = durations.map(dur => {\n      return dur === null ? maxDur : dur;\n    });\n    const minDur = Math.min(...cleanedDurs);\n    // const ratios = cleanedDurs.map(dur => {\n    //   return dur / minDur;\n    // });\n    if (minDur <= 0) {\n      return;\n    }\n    const roundedRatios = cleanedDurs.map(dur => {\n      return Math.round(dur / minDur);\n    });\n    let beatDur = frac.build(1, 4);\n    if (minDur < 400) {\n      beatDur = frac.build(1, 16)\n    } else if (minDur < 800) {\n      beatDur = frac.build(1, 8);\n    }\n    const projectedDurs = roundedRatios.map(ratio => {\n      return beatDur.times(frac.build(ratio));\n    });\n    this.navTail();\n    while (!this.atHead()) {\n      this.shortenPrevNoteGp();\n    }\n    arr.forEach((noteGp, idx) => {\n      this.upsertByDur(\n        noteGp.notes.map(note => {return note.noteNum;}),\n        projectedDurs[idx],\n        noteGp.startMillis);\n    });\n  }\n\n  serialize() {\n    // console.log(JSON.stringify(this.toJson(), null, 2));\n    return JSON.stringify(this.toJson());\n  }\n\n  // Only support Chinese currently.\n\n  updateLyrics(lyricsString) {\n    this.doc.lyricsTokens = toLyricsTokens(lyricsString);\n  }\n\n  shiftNoteGpBoundary(goLeft) {\n    if (this.isChordMode()) {\n      return;\n    }\n    const noteGps = this.getCurrVoice().noteGps;\n    const left = noteGps.getLeft();\n    const right = noteGps.getCurr();\n    const step = this.editor.step.over(frac.build(2));\n    if (this.atHead() && !goLeft && right && right.getDuration().greaterThan(step)) {\n      const old = right.start;\n      right.start = right.start.plus(step);\n      this.addRestInGap(old, right.start);\n      return;\n    }\n    if (!left || !right) {\n      return;\n    }\n    if (left.isGraceNote() || right.isGraceNote()) {\n      return;\n    }\n\n    const denomToUse = Math.max(step.denom, left.end.denom);\n    // TODO what if left.end is a 1/6 instead of 1/8?\n    const roundedStep = frac.build(1, denomToUse);\n    let boundary = left.end;\n    if (goLeft) {\n      if (left.getDuration().leq(roundedStep) || chunking.isPossibleTuplet(left)) {\n        boundary = left.start;\n        this.unsafeRemoveFromNoteGps();\n      } else {\n        boundary = left.end.minus(roundedStep);\n      }\n    } else {\n      if (right.getDuration().leq(roundedStep) || chunking.isPossibleTuplet(right)) {\n        boundary = right.end;\n        this.skipRight();\n        this.unsafeRemoveFromNoteGps();\n      } else {\n        boundary = right.start.plus(roundedStep);\n      }\n    }\n    left.end = boundary;\n    right.start = boundary;\n\n    this.setCursorTimeSyncPointer(boundary);\n  }\n\n  appendPart(link) {\n    this.parts.push(Part.fromLink(link));\n    this.loadParts(true);\n  }\n\n  insertPart(link, idx) {\n    this.parts.splice(idx, 0, Part.fromLink(link));\n    this.loadParts(true);\n  }\n\n  removePart(idx) {\n    this.parts.splice(idx, 1);\n    this.loadParts(true);\n  }\n\n  async loadParts(loadDocWithParts) {\n    const partDocs = [];\n    const partTitles = [];\n    const partShiftIns = [];\n    let failed = false;\n    // TODO use promise.all to make each loop run concurrently.\n    for (const part of this.parts) {\n      const json = await storage.retrieve(part.id);\n      if (!json) {\n        partTitles.push(part.id);\n        failed = true;\n        continue;\n      }\n      partShiftIns.push(part.shiftIn);\n      const doc = Doc.fromJson(json.doc);\n      partDocs.push(doc);\n      partTitles.push(doc.title);\n      if (part.keySigSp) {\n        doc.shiftToKey(part.keySigSp, part.shiftUp);\n      }\n    }\n    this._updateUi(partTitles);\n    if (failed) {\n      return;\n    }\n    if (!loadDocWithParts) {\n      return;\n    }\n    if (partDocs.length === 0) {\n      this.doc = new Doc;\n    }\n    partDocs.forEach((partDoc, idx) => {\n      if (loadDocWithParts) {\n        if (idx === 0) {\n          // Blacklisted fields to not update when reloading.\n          // The rest of the fields will be auto-updated\n          partDoc.owner = this.doc.owner;\n          if (this.doc.cloneId !== '') {\n            partDoc.cloneId = this.doc.cloneId;\n          }\n          if (this.doc.title !== NO_TITLE) {\n            partDoc.title = this.doc.title;\n          }\n          if (this.doc.composer !== '') {\n            partDoc.composer = this.doc.composer;\n          }\n\n          this.doc = partDoc;\n        } else {\n          this.appendDoc(partDoc, partShiftIns[idx]);\n        }\n      }\n    });\n    this.execPub();\n  }\n\n  appendDoc(doc, shiftIn) {\n    const maxEndTime = this._getMaxEndTime();\n    const durPerMeas = this.getDurationPerMeasure();\n    const measNum = location.measureNum(maxEndTime, durPerMeas);\n    const possNextMeasTime = location.measureNumToTime(\n      measNum, durPerMeas, this.doc.pickup);\n    const maxEndTimeIsNextMeasTime = possNextMeasTime.equals(maxEndTime);\n    const nextMeasTime = (\n      maxEndTimeIsNextMeasTime ? maxEndTime :\n      location.measureNumToTime(measNum + 1, durPerMeas, this.doc.pickup));\n    const currMeasTime = nextMeasTime.minus(durPerMeas);\n    const shiftTime = shiftIn ? currMeasTime : nextMeasTime;\n    const docStartTime = (shiftIn ? currMeasTime : nextMeasTime).minus(doc.pickup);\n    if (!doc.keySigSp.equals(this.doc.keySigSp)) {\n      this.doc.keySigLocs.push(new KeySigLoc(doc.keySigSp, docStartTime));\n    }\n    // TODO deal with the case where the firs doc does not have lyrics\n    // while the second doc has lyrics, by padding with _\n    if (doc.lyricsTokens) {\n      this.doc.lyricsTokens.push(...doc.lyricsTokens);\n    }\n\n    this.disableChordMode();\n    // Start appending. Note that if there are fewer voices, the dropped voice's\n    // measures will be empty and will only be filled in by future docs with\n    // extra voices.\n    doc.voices.forEach((voice, idx) => {\n      if (idx >= this.doc.voices.length) {\n        this.addVoice(new Voice(null, voice.clef));\n      }\n      this.setVoiceIdx(idx);\n      this.navTail();\n\n      const noteGpsForAppend = [];\n      let atInitialRest = true;\n      let initialRestDuration = frac.build(0);\n      const prevDocEndTime = this.getCursorTime();\n      voice.noteGps.toArray().forEach(noteGp => {\n        if (atInitialRest && noteGp.isRest() && !prevDocEndTime.lessThan(noteGp.end)) {\n          initialRestDuration = initialRestDuration.plus(noteGp.getDuration());\n          return;\n        }\n        atInitialRest = false;\n        noteGpsForAppend.push(noteGp);\n      });\n      const actualDocStartTime = docStartTime.plus(initialRestDuration);\n\n      // Pad the current voice of the current doc.\n      while (actualDocStartTime.lessThan(this.getCursorTime())) {\n        this.shortenPrevNoteGp();\n      }\n      // TODO When tieless is available, just insert rest\n      // with duration docStartTime.minus(this.getCursorTime()).\n      while (this.getCursorTime().lessThan(actualDocStartTime)) {\n        const currTime = this.getCursorTime();\n        const nextMeasTime = location.nextMeasureTime(currTime, durPerMeas);\n        // If currTime to actualDocStartTime spans multiple measures (e.g.\n        // previous doc has a missing voice), use nextMeasTime for end of inserted rest.\n        const restEnd = nextMeasTime.lessThan(actualDocStartTime) ? nextMeasTime : actualDocStartTime;\n        const restDuration = restEnd.minus(currTime);\n        this.upsertByDur([null], restDuration);\n      }\n\n      // Start appending.\n      noteGpsForAppend.forEach(noteGp => {\n        noteGp.start = noteGp.start.plus(shiftTime);\n        noteGp.end = noteGp.end.plus(shiftTime);\n        this.unsafeAddToNoteGps(noteGp);\n      });\n    });\n\n    this.enableChordMode();\n    doc.chordLocs.forEach(chordLoc => {\n      chordLoc.start = chordLoc.start.plus(shiftTime);\n      this._insertChordLoc(chordLoc);\n    });\n    this.navHead();\n  }\n\n  _updateUi(partTitles) {\n    // Clean up UI.\n    const partsListDiv = this.shadowRoot.querySelector('#parts-list');\n    // TODO this is only here because musicMobileMain relies on stateMgr\n    // but doesn't have parts-list.\n    if (!partsListDiv) {\n      return;\n    }\n    while (partsListDiv.firstChild) {\n      partsListDiv.removeChild(partsListDiv.firstChild);\n    }\n\n    partTitles.forEach((title, idx) => {\n      const insertButton = document.createElement('button');\n      insertButton.textContent = '+';\n      insertButton.classList.add('insert-part');\n      insertButton.setAttribute('data-idx', idx.toString());\n      partsListDiv.appendChild(insertButton);\n\n      const removeButton = document.createElement('button');\n      removeButton.textContent = 'X';\n      removeButton.classList.add('remove-part');\n      removeButton.setAttribute('data-idx', idx.toString());\n      partsListDiv.appendChild(removeButton);\n\n      const anchor = document.createElement(\"a\");\n      anchor.textContent = title;\n      anchor.href = this.parts[idx].getLink();\n      const li = document.createElement('li');\n      li.appendChild(anchor);\n      partsListDiv.appendChild(li);\n    });\n\n    // Setup UI event handling.\n    this.shadowRoot.querySelectorAll('.remove-part').forEach(button => {\n      button.onclick = _ => {\n        const idx = parseInt(button.getAttribute('data-idx'));\n        if (isNaN(idx)) {\n          return;\n        }\n        this.removePart(idx);\n      };\n    });\n    this.shadowRoot.querySelectorAll('.insert-part').forEach(button => {\n      button.onclick = _ => {\n        const link = prompt('Enter link of the song.');\n        if (!link) {\n          return;\n        }\n        const idx = parseInt(button.getAttribute('data-idx'));\n        if (isNaN(idx)) {\n          return;\n        }\n        this.insertPart(link, idx);\n      };\n    });\n  }\n\n  getLyricsString() {\n    return fromLyricsToken(this.doc.lyricsTokens);\n  }\n\n  getNoteNumShift() {\n    return this.noteNumShift;\n  }\n  incrNoteNumShift() {\n    this.noteNumShift += 12;\n    return this.getNoteNumShift();\n  }\n\n  decrNoteNumShift() {\n    this.noteNumShift -= 12;\n    return this.getNoteNumShift();\n  }\n\n  insertChord(chordStr) {\n    if (!this.isChordMode()) {\n      return false;\n    }\n    let chordObj;\n    try {\n      chordObj = new chd.Chord(Parser.parse(chordStr));\n    } catch(err) {\n      console.warn('failed to parse chord: ', chordStr, err);\n      this.ebanner.display('failed to parse chord: ' + chordStr);\n      return false;\n    }\n    const start = this.getCursorTime();\n    const chordLoc = new ChordLoc(chordObj, start);\n    this._insertChordLoc(chordLoc);\n    return true;\n  }\n\n  _insertChordLoc(loc) {\n    const upsertInfo = findUpsertIdx(this.doc.chordLocs, loc.start);\n    this.doc.chordLocs.splice(upsertInfo.idx, upsertInfo.update ? 1 : 0, loc);\n  }\n\n  _insertKeySigLoc(loc) {\n    const upsertInfo = findUpsertIdx(this.doc.keySigLocs, loc.start);\n    this.doc.keySigLocs.splice(upsertInfo.idx, upsertInfo.update ? 1 : 0, loc);\n    // TODO de-duplicate repeating key sigs (A, [A, A, B, B, A]) -> (A, [B, A])\n  }\n\n  getSelectedChord() {\n    const upsertInfo = findUpsertIdx(this.doc.chordLocs, this.getCursorTime());\n    if (!upsertInfo.update) {\n      return null;\n    }\n    return this.doc.chordLocs[upsertInfo.idx].chord;\n  }\n\n  removeChord() {\n    if (!this.isChordMode()) {\n      return;\n    }\n    const start = this.getCursorTime();\n    const upsertInfo = findUpsertIdx(this.doc.chordLocs, start);\n    if (!upsertInfo.update) {\n      this.navLeft();\n      return;\n    }\n    this.doc.chordLocs.splice(upsertInfo.idx, 1);\n  }\n\n  isChordMode() {\n    return this.editor.cursorOnChords;\n  }\n\n  enableChordMode() {\n    const currTime = this.getCursorTime();\n    this.editor.cursorOnChords = true;\n    this._alignTime(currTime);\n  }\n\n  disableChordMode() {\n    this.editor.cursorOnChords = false;\n  }\n\n  getCurrVoice() {\n    if (this.isChordMode()) {\n      return;\n    }\n    return this.doc.voices[this.editor.currVoiceIdx];\n  }\n\n  getCursorTime() {\n    return this.editor.cursorTime;\n  }\n\n  incrSeed() {\n    this.seed += 1;\n    return this.seed\n  }\n\n  decrSeed() {\n    this.seed -= 1;\n    return this.seed\n  }\n\n  getKeySig() {\n    return this.doc.keySigSp;\n  }\n\n  setKeySigFromStr(chordStr) {\n    const chord = _parseChordStr(chordStr, this.ebanner);\n    if (!chord) {\n      return;\n    }\n    const currTime = this.getCursorTime();\n    if (currTime.equals(this.doc.pickup.negative())) {\n      this.doc.keySigSp = chord.root;\n      return;\n    }\n    this._insertKeySigLoc(new KeySigLoc(chord.root, currTime));\n  }\n\n  shiftToKey(chordStr, shiftUp) {\n    const chord = _parseChordStr(chordStr, this.ebanner);\n    if (!chord) {\n      return;\n    }\n    const newKeySp = chord.root;\n    this.doc.shiftToKey(newKeySp, shiftUp);\n\n    if (!this.viewMode) {\n      // 1. Transpose for write mode should not persist\n      // the transpose in the URL.\n      return;\n    }\n    // 2. Transpose for view mode.\n    // Persist the transpose to the URL for use in parts aggregation.\n    const newUrl = new URL(document.URL);\n    newUrl.searchParams.set('keySig', newKeySp.toString());\n    newUrl.searchParams.set('shiftUp', shiftUp);\n    window.history.pushState({}, '', newUrl.href);\n  }\n\n  insertSpace() {\n    this.cut();\n    this.upsertWithoutDur([null]);\n    const cursorTime = this.getCursorTime();\n    this.paste();\n    this.setCursorTimeSyncPointer(cursorTime, true);\n  }\n\n  deleteSpace() {\n    this.cut();\n    this.shortenPrevNoteGp();\n    const cursorTime = this.getCursorTime();\n    this.paste();\n    this.setCursorTimeSyncPointer(cursorTime, true);\n  }\n\n  incrPickup() {\n    const change = frac.build(1, this.doc.timeSigDenom);\n    this.setPickup(this.doc.pickup.plus(change));\n  }\n\n  decrPickup() {\n    const change = frac.build(-1, this.doc.timeSigDenom);\n    this.setPickup(this.doc.pickup.plus(change));\n  }\n\n  setPickupFromBeat(beats) {\n    const newPickup = frac.build(beats, this.doc.timeSigDenom);\n    this.setPickup(newPickup);\n  }\n\n  setPickup(newPickup) {\n    if (newPickup.toFloat() < 0) {\n      return;\n    }\n    const oldPickup = this.doc.pickup;\n    const change = frac.Frac.minus(newPickup, oldPickup);\n    this.doc.pickup = newPickup;\n\n    this.doc.voices.forEach(voice => {\n      voice.noteGps.toArray().forEach(noteGp => {\n        noteGp.start = frac.Frac.minus(noteGp.start, change);\n        noteGp.end = frac.Frac.minus(noteGp.end, change);\n      });\n    });\n    // Sync the time.\n    this.navHead();\n  }\n\n  deleteDoc() {\n    const db = firebase.firestore();\n    const collName = debug.version();\n    db.collection(collName).doc(this.urlId).delete().then(_ => {\n      const homeUrl = new URL('/fire/', (new URL(document.URL)).origin);\n      const currUser = firebase.auth().currentUser;\n      if (currUser) {\n        homeUrl.searchParams.set('owner', currUser.email);\n      }\n      window.location.href =homeUrl.href;\n    }).catch(error => {\n      this.ebanner.slowDisplay(\"Error removing document: \" + error.message);\n      console.error(\"Error removing document: \", error);\n    });\n  }\n\n  toggleShowSpelling() {\n    this.showSpelling = !this.showSpelling;\n  }\n\n  setTempo(tempo) {\n    this.doc.tempo = tempo;\n  }\n\n  getTempo() {\n    return this.doc.tempo;\n  }\n\n  // TODO handle compound time sig.\n  incrStep() {\n    this.editor.step = this.editor.step.times(frac.build(2));\n    return this.editor.step.toString();\n  }\n\n  decrStep() {\n    this.editor.step = this.editor.step.over(frac.build(2));\n    return this.editor.step.toString();\n  }\n\n  // Args:\n  //   noteNums: [] means lengthen and [null] means add a rest.\n  upsertWithoutDur(noteNums, startMillis) {\n    const step = this.editor.step.over(frac.build(2));\n    let duration = step;\n\n    const currNoteGp = this.getCurrVoice().noteGps.getCurr();\n\n    // For grace note, we need to get rid of the existing grace note first.\n    if (currNoteGp && currNoteGp.isGraceNote()) {\n      this.navRight();\n      this.unsafeRemoveFromNoteGps();\n    }\n\n    if (currNoteGp) {\n      if (currNoteGp.isRest() && currNoteGp.getDuration().geq(step)) {\n        const split = this.tupletSplit(currNoteGp);\n        if (split.length > 0) {\n          const firstInSplit = split[0];\n          // Either tied to a tuplet or is a single tuplet.\n          if (split.length > 1 || chunking.isPossibleTuplet(firstInSplit)) {\n            duration = firstInSplit.end.minus(currNoteGp.start);\n          }\n        }\n      } else {\n        duration = currNoteGp.end.minus(currNoteGp.start);\n      }\n    }\n    this.upsertByDur(noteNums, duration, startMillis);\n  }\n\n  // Otherwise lengthen it from start to start of notes.\n  lengthenPrevBy(dur) {\n    this.lengthenPrevNoteGp(this.getCursorTime().plus(dur));\n  }\n\n  // Lengthen previous noteGp.end to newEnd.\n  // Works even when out-of-sync.\n  lengthenPrevNoteGp(newEnd) {\n    this._surger();\n    const noteGps = this.getCurrVoice().noteGps;\n\n    while (noteGps.getCurr() && noteGps.getCurr().start.lessThan(newEnd)) {\n      this.skipRight();\n      this.unsafeRemoveFromNoteGps();\n    }\n\n    const left = noteGps.getLeft();\n    if (left) {\n      left.end = newEnd;\n      if (noteGps.getCurr() && noteGps.getCurr().start.greaterThan(newEnd)) {\n        this.addRestInGap(newEnd, noteGps.getCurr().start);\n      }\n    } else {\n      // If at head, just insert a rest instead of lengthening.\n      const restEnd = noteGps.getCurr() ? noteGps.getCurr().start : newEnd;\n      this.addRestInGap(this.startTime(), restEnd);\n    }\n    this.setCursorTimeSyncPointer(newEnd);\n  }\n\n  _surger() {\n    if (!this._isOutOfSync()) {\n      return;\n    }\n    const noteGps = this.getCurrVoice().noteGps;\n    const curr = noteGps.getCurr();\n    if (!curr) {\n      // This should never happen if out-of-sync.\n      return;\n    }\n    const oldCursorTime = this.getCursorTime();\n    const [left, right] = curr.split(oldCursorTime);\n    this.skipRight();\n    this.unsafeRemoveFromNoteGps();\n    this.unsafeAddToNoteGps(left);\n    this.unsafeAddToNoteGps(right);\n    this.setCursorTimeSyncPointer(oldCursorTime);\n  }\n\n  // Lowest level method for adding note group safely.\n  // Works even when out-of-sync.\n  _upsertNoteGp(noteGp) {\n    this._surger();\n    const noteGps = this.getCurrVoice().noteGps\n    const newEnd = noteGp.end;\n\n    while (noteGps.getCurr() && noteGps.getCurr().start.lessThan(newEnd)) {\n      this.skipRight();\n      this.unsafeRemoveFromNoteGps();\n    }\n\n    if (!noteGp.isRest()) {\n      this.unsafeAddToNoteGps(noteGp);\n      if (noteGps.getCurr() && noteGps.getCurr().start.greaterThan(newEnd)) {\n        this.addRestInGap(newEnd, noteGps.getCurr().start);\n      }\n    } else {\n      const restEnd = noteGps.getCurr() ? noteGps.getCurr().start : newEnd;\n      this.addRestInGap(noteGp.start, restEnd);\n    }\n    this.setCursorTimeSyncPointer(newEnd);\n  }\n\n  toggleDisplayMelodyOnly() {\n    this.doc.displayMelodyOnly = !this.doc.displayMelodyOnly;\n  }\n  toggleDisplayLyrics() {\n    this.doc.displayLyrics = !this.doc.displayLyrics;\n  }\n\n  insertGraceNote() {\n    if (this.isChordMode()) {\n      return;\n    }\n    const noteStartAndEnd = this.getCursorTime();\n    this.unsafeAddToNoteGps(new NoteGp([new Note(60)], noteStartAndEnd, noteStartAndEnd));\n    this.navLeft();\n  }\n\n  // TODO remove hasTie\n  upsertByDur(noteNums, duration, startMillis) {\n    if (this.isChordMode()) {\n      return;\n    }\n\n    const notes = noteNums.map(num => {\n      return new Note(num);\n    });\n    const noteStart = this.getCursorTime();\n    const noteEnd = noteStart.plus(duration);\n\n    if (notes.length == 0) {\n      this.lengthenPrevNoteGp(noteEnd);\n      return;\n    }\n    this._upsertNoteGp(new NoteGp(notes, noteStart, noteEnd, false, startMillis));\n  }\n\n  // relNotes is a list of beat.Note (must have start time relative to start beat)\n  upsertBeat(relNotes, step) {\n    if (this.isChordMode()) {\n      return;\n    }\n\n    step = step || this.editor.step;\n    const noteGps = this.getCurrVoice().noteGps;\n    const cursorStart = this.getCursorTime();\n    const beatStartTime = cursorStart.over(step).wholePart().times(step);\n    const beatEndTime = beatStartTime.plus(step);\n\n    function relativeToAbsolute(time) {\n      return beatStartTime.plus(time.times(step));\n    }\n    const newNoteGpsArrWithGraceNotes = relNotes.map((relNote, i) => {\n      let noteEnd = beatEndTime;\n      if (i + 1 < relNotes.length) {\n        const relEnd = relNotes[i + 1].start;\n        noteEnd = relativeToAbsolute(relEnd);\n      }\n      const noteStart = relativeToAbsolute(relNote.start);\n      return new NoteGp(\n        relNote.noteNums.map(noteNum => {\n          return new Note(noteNum);\n        }), noteStart, noteEnd);\n    });\n\n    // 0. Treat grace notes as simultaneous notes.\n    const newNoteGpsArr = collapseGraceNotesToSimultaneousNotes(newNoteGpsArrWithGraceNotes);\n\n    // 1. Gather enough notes from the left for merging.\n    const noteGpsLeftOfCursor = [];\n    while (true) {\n      const left = noteGps.getLeft();\n      if (!left) {\n        break;\n      }\n      // Want noteGpsLeftOfCursor.length > 0 in order to extend the previous\n      // beat's noteGp if possible\n      if (left.end.equals(beatStartTime) && noteGpsLeftOfCursor.length > 0) {\n        break;\n      }\n      if (left.end.lessThan(beatStartTime)) {\n        break;\n      }\n      // left.end > beatStartTime\n      noteGpsLeftOfCursor.push(left);\n      this.unsafeRemoveFromNoteGps();\n    }\n    noteGpsLeftOfCursor.reverse();\n\n    // 2. Merge and upsert\n    function merge(noteGpsLeftOfCursor, newNoteGpsArr) {\n      const res = [];\n      const newNoteGpsStart = (\n        newNoteGpsArr.length === 0 ?\n        beatEndTime :\n        newNoteGpsArr[0].start\n      );\n\n      res.push(...noteGpsLeftOfCursor.filter(noteGp => {\n        // Strictness of lessThan removes grace notes as well.\n        return noteGp.start.lessThan(newNoteGpsStart);\n      }));\n      if (res.length > 0) {\n        // Ensure that noteGpsLeftOfCursor and newNoteGpsArr have no gaps in between.\n        res[res.length - 1].end = newNoteGpsStart;\n      } else {\n        // Ensure that beatStartTime and newNoteGpsStart have no gaps in between.\n        if (beatStartTime.lessThan(newNoteGpsStart)) {\n          res.push(new NoteGp(\n            [new Note(null)], beatStartTime, newNoteGpsStart));\n        }\n      }\n      res.push(...newNoteGpsArr);\n      return res;\n    }\n    merge(noteGpsLeftOfCursor, newNoteGpsArr).forEach(noteGp => {\n      this._upsertNoteGp(noteGp);\n    });\n  }\n\n  // Shorten the left note group by a step.\n  // Works for out-of-sync.\n  shortenPrevNoteGp() {\n    if (this.isChordMode()) {\n      return;\n    }\n    this._surger()\n    const step = this.editor.step.over(frac.build(2));\n    const noteGps = this.getCurrVoice().noteGps;\n    const left = noteGps.getLeft();\n    if (noteGps.atHead() || !left) {\n      // At head; don't do anything.\n      return;\n    }\n    const cursorTime = this.getCursorTime();\n    const prevBeat = location.computePrevBeat(cursorTime, step);\n\n    let newTime = prevBeat.lessThan(left.start) ? left.start : prevBeat;\n    let addRest = false;\n    const split = this.tupletSplit(left);\n    if (split.length > 0) {\n      const lastInSplit = split[split.length - 1];\n      // Either tied to a tuplet or is a single tuplet.\n      if (chunking.isPossibleTuplet(lastInSplit)) {\n        newTime = lastInSplit.start;\n        addRest = chunking.isPossibleTuplet(lastInSplit);\n      } else {\n        newTime = prevBeat.lessThan(lastInSplit.start) ? lastInSplit.start : prevBeat;\n      }\n    }\n    // For rest not at the tail, shorten just means moving the cursor leftward.\n    this.shortenPrevTo(newTime, addRest);\n  }\n\n  tupletSplit(currNoteGp) {\n    if (currNoteGp.isGraceNote()) {\n      return [currNoteGp];\n    }\n    const res = [];\n    const chunks = chunking.tupletChunking(chunking.toChunks(\n      this.getCurrVoice().noteGps.toArray()));\n    let started = false;\n    let ended = false;\n    chunks.forEach(chunk => {\n      chunk.getNoteGps().forEach(noteGp => {\n        if (noteGp.start.equals(currNoteGp.start)) {\n          started = true;\n        }\n        if (noteGp.end.greaterThan(currNoteGp.end)) {\n          ended = true;\n        }\n        if (started && !ended) {\n          if (!noteGp.isGraceNote()) {\n            res.push(noteGp);\n          }\n        }\n      });\n    });\n    return res;\n  }\n  // Also handle inserting rests.\n  shortenPrevTo(newTime, addRest) {\n    const noteGps = this.getCurrVoice().noteGps;\n    const left = noteGps.getLeft();\n    if (!left) {\n      return;\n    }\n    const currTime = left.end;\n    if (left.start.equals(newTime)) {\n      this.unsafeRemoveFromNoteGps();\n    } else if (left.start.lessThan(newTime)) {\n      left.end = newTime;\n    } else {\n      console.warn('Invalid newTime', newTime, left);\n    }\n\n    if (noteGps.atTail() && !addRest) {\n      this.setCursorTimeSyncPointer(newTime);\n    } else {\n      // Insert a rest to the right.\n      this.addRestInGap(newTime, currTime);\n      this.setCursorTimeSyncPointer(newTime);\n    }\n  }\n\n  // There may or may not be something to the right of the gap.\n  // The cursor will point to end.\n  addRestInGap(start, end) {\n    if (start.geq(end)) {\n      this.setCursorTimeSyncPointer(end);\n      return;\n    }\n    const noteGps = this.getCurrVoice().noteGps;\n    const right = noteGps.getCurr();\n    const left = noteGps.getLeft();\n    if (right && right.isRest()) {\n      if (left && left.isRest()) {\n        this.unsafeRemoveFromNoteGps();\n        right.start = left.start;\n      } else {\n        right.start = start;\n      }\n    } else {\n      if (left && left.isRest()) {\n        this.unsafeRemoveFromNoteGps();\n        this.unsafeAddToNoteGps(new NoteGp([new Note(null)], left.start, end));\n      } else {\n        this.unsafeAddToNoteGps(new NoteGp([new Note(null)], start, end));\n      }\n    }\n    this.setCursorTimeSyncPointer(end);\n  }\n\n  deletePrevMeasure() {\n    this.shortenPrevNoteGp();\n    while (!this.atStartOfMeasure() && !this.getCurrVoice().noteGps.atHead()) {\n      this.shortenPrevNoteGp();\n    }\n  }\n\n  atStartOfMeasure() {\n    return this.getCursorTime().over(this.getDurationPerMeasure()).isWhole();\n  }\n\n  startTime() {\n    return this.doc.pickup.negative();\n  }\n\n  // If there is a gap between left and current noteGp,\n  // this return the current noteGp.start.\n  _currPointerTime() {\n    const noteGps = this.getCurrVoice().noteGps;\n    const curr = noteGps.getCurr();\n    const left = noteGps.getLeft();\n    if (!curr && !left) {\n      return this.startTime();\n    }\n    return curr ? curr.start : left.end;\n  }\n\n  // START of mutable noteGps method calls.\n  // Purpose: calling mutable methods on noteGps causes the time and pointer\n  // to go out-of-sync; thus whenever those methods are called, we need\n  // to sync the cursor time to the new pointer position.\n  _syncTimeToPointer() {\n    this.setCursorTimeSyncPointer(this._currPointerTime());\n  }\n\n  // leftMost: if true, when cursorTime points to multiple notes\n  // (due to grace notes) go to the leftMost one. If false, the\n  // cursor will stay at the first note with the correct start.\n  setCursorTimeSyncPointer(cursorTime, leftMost) {\n    this.editor.cursorTime = cursorTime;\n    if (this.isChordMode()) {\n      return;\n    }\n\n    // 1. Sync pointer\n    const noteGps = this.getCurrVoice().noteGps;\n    // The order of the 2 while loops makes it so that\n    // pointer is never to the right of cursorTime.\n    while (this._currPointerTime().lessThan(cursorTime)) {\n      const moved = noteGps.moveRight();\n      if (!moved) {\n        break;\n      }\n    }\n    while (this._currPointerTime().greaterThan(cursorTime)) {\n      const moved = noteGps.moveLeft();\n      if (!moved) {\n        break;\n      }\n    }\n\n    if (leftMost) {\n      while (noteGps.getLeft() && noteGps.getLeft().isGraceNote()) {\n        const moved = noteGps.moveLeft();\n        if (!moved) {\n          break;\n        }\n      }\n    }\n\n    // 2. Validate\n    if (this._currPointerTime().equals(cursorTime)) {\n      return;\n    }\n    const curr = noteGps.getCurr();\n    // Allow cursorTime differ from pointer if cursorTime is within\n    // the pointer's rest note.\n    if (curr && curr.isRest() && cursorTime.strictlyInside(curr.start, curr.end)) {\n      return;\n    }\n\n    console.warn(\n      'setCursorTimeSyncPointer with a bad cursorTime.',\n      this.getCursorTime(),\n      this.getCurrVoice().noteGps.getCurr());\n    // TODO remove this because having a method that sync in both directions\n    // is confusing.\n    // this._syncTimeToPointer();\n  }\n\n  // Only safe if adding at the end or for filling a gap\n  unsafeAddToNoteGps(item) {\n    const noteGps = this.getCurrVoice().noteGps;\n    noteGps.add(item);\n    this._syncTimeToPointer();\n  }\n\n  // Safe only if removing at the end or if you call\n  // unsafeAddToNoteGps afterward to fill the gap.\n  unsafeRemoveFromNoteGps() {\n    const noteGps = this.getCurrVoice().noteGps;\n    noteGps.remove();\n    this._syncTimeToPointer();\n  }\n  // END of mutable noteGps method calls.\n\n  navHead() {\n    this.setCursorTimeSyncPointer(this.doc.pickup.negative(), true);\n  }\n\n  navTail() {\n    let cursorTime = this.doc.pickup.negative();\n    if (this.isChordMode()) {\n      if (this.doc.chordLocs.length === 0) {\n        return;\n      }\n      cursorTime = this.doc.chordLocs[this.doc.chordLocs.length - 1].start;\n    } else {\n      const noteGpsArr = this.getCurrVoice().noteGps.toArray();\n      if (noteGpsArr.length == 0) {\n        return;\n      }\n      cursorTime = noteGpsArr[noteGpsArr.length - 1].end;\n    }\n    this.setCursorTimeSyncPointer(cursorTime);\n  }\n\n  navUp() {\n    const barsPerLine = 4;\n    math.range(0, barsPerLine).forEach(_ => {\n      this.navLeftMeasure();\n    });\n  }\n\n  navDown() {\n    let barsPerLine = 4;\n    if (this.getCursorTime().lessThan(frac.build(0))) {\n      barsPerLine = 5;\n    }\n    math.range(0, barsPerLine).forEach(_ => {\n      this.navRightMeasure();\n    });\n  }\n\n  atHead() {\n    const atStartTime = this.getCursorTime().equals(this.startTime());\n    if (this.isChordMode()) {\n      return atStartTime;\n    }\n    return atStartTime && this.getCurrVoice().noteGps.atHead();\n  }\n\n  atTail() {\n    if (this.isChordMode()) {\n      return false;\n    }\n    return this.getCurrVoice().noteGps.atTail();\n  }\n\n  // Move to \"the start\" of a measure that is earlier than the cursor position.\n  // \"the start\" may be inside the measure if the measure has a note tied from\n  // the previous measure.\n  navLeftMeasure() {\n    const durationPerMeasure = this.getDurationPerMeasure();\n    const startMeasNum = location.measureNum(this.getCursorTime(), durationPerMeasure);\n    const measStartTime = location.measureNumToTime(startMeasNum, durationPerMeasure, this.doc.pickup);\n    const prevMeasStartTime = location.measureNumToTime(startMeasNum > 0 ? startMeasNum - 1 : 0, durationPerMeasure, this.doc.pickup);\n    const strictlyInCurrMeas = measStartTime.lessThan(this.getCursorTime());\n\n    // chord cursor to need to be handled specially to make it not fall between beats.\n    if (this.isChordMode()) {\n      if (strictlyInCurrMeas) {\n        this.setCursorTimeSyncPointer(measStartTime);\n      } else {\n        this.setCursorTimeSyncPointer(prevMeasStartTime);\n      }\n      return;\n    }\n\n    let expectedMeasNumDiff = strictlyInCurrMeas ? 0 : 1;\n    let numNavLeft = 0;\n    while (!this.atHead()) {\n      this.navLeft();\n      numNavLeft += 1;\n      const currMeasNum = location.measureNum(this.getCursorTime(), durationPerMeasure);\n\n      // For some cases, we only know expectedMeasNumDiff after moving left once.\n      // e.g. strictlyInCurrMeas is true for | c d- | d ? e |, but\n      // expectedMeasNumDiff is 1 in order to result in | ? c d- | d e |\n      if (numNavLeft == 1) {\n        if (startMeasNum - currMeasNum > 0) {\n          expectedMeasNumDiff = startMeasNum - currMeasNum;\n        }\n      }\n\n      if (startMeasNum - currMeasNum > expectedMeasNumDiff) {\n        if (numNavLeft > 1) {\n          // | c d | d ? e | overshoots to | c ? d | d e | so navRight\n          // to get back to | c d | ? d e |.\n          this.navRight();\n        }\n        return;\n      }\n    }\n\n  }\n\n  navRightMeasure() {\n    const durationPerMeasure = this.getDurationPerMeasure();\n    const startMeasNum = location.measureNum(this.getCursorTime(), durationPerMeasure);\n\n    // chord cursor to need to be handled specially to make it not fall between beats.\n    if (this.isChordMode()) {\n      const nextMeasStartTime = location.measureNumToTime(startMeasNum + 1, durationPerMeasure, this.doc.pickup);\n      this.setCursorTimeSyncPointer(nextMeasStartTime);\n      return;\n    }\n\n    while (!this.atTail()) {\n      this.navRight();\n      const currMeasNum = location.measureNum(this.getCursorTime(), durationPerMeasure);\n      if (Math.abs(startMeasNum - currMeasNum) >= 1) {\n        return;\n      }\n    }\n  }\n\n  // TODO consider implementing navPrev as well.\n  navLeft() {\n    if (this.isChordMode()) {\n      this.setCursorTimeSyncPointer(this._prevCursorTime());\n      return;\n    }\n\n    const noteGps = this.getCurrVoice().noteGps;\n    const left = noteGps.getLeft();\n    if (left && left.isGraceNote()) {\n      // Handle grace notes differently because sync only\n      // move pointer to non-grace notes.\n      noteGps.moveLeft();\n      return;\n    }\n    if (this.atHead()) {\n      return;\n    }\n    this.setCursorTimeSyncPointer(this._prevCursorTime());\n  }\n\n  navRight() {\n    if (this.isChordMode()) {\n      this.setCursorTimeSyncPointer(this._nextCursorTime(), true);\n      return;\n    }\n\n    const noteGps = this.getCurrVoice().noteGps;\n    const curr = noteGps.getCurr();\n    if (curr && curr.isGraceNote()) {\n      noteGps.moveRight();\n      return;\n    }\n    this.setCursorTimeSyncPointer(this._nextCursorTime(), true);\n  }\n\n  // Go to the end of the current note even if it is a rest note.\n  skipRight() {\n    const noteGps = this.getCurrVoice().noteGps;\n    const curr = noteGps.getCurr();\n    if (curr && curr.isRest()) {\n      this.setCursorTimeSyncPointer(curr.end);\n      return;\n    }\n    this.navRight();\n  }\n\n  _nextCursorTime() {\n    const cursorTime = this.getCursorTime();\n    if (this.isChordMode()) {\n      return cursorTime.plus(this.editor.step);\n    }\n    const step = this.editor.step.over(frac.build(2));\n    const noteGps = this.getCurrVoice().noteGps;\n    const curr = noteGps.getCurr();\n    if (curr) {\n      if (curr.isRest()) {\n        const newCursorTime = cursorTime.plus(step);\n        return curr.end.lessThan(newCursorTime) ? curr.end : newCursorTime;\n      }\n      return curr.end;\n    }\n    return cursorTime;\n  }\n\n  _prevCursorTime() {\n    const cursorTime = this.getCursorTime();\n    if (this.isChordMode()) {\n      const newCursorTime = cursorTime.minus(this.editor.step);\n      if (newCursorTime.lessThan(this.startTime())) {\n        return this.startTime();\n      }\n      return newCursorTime\n    }\n    const step = this.editor.step.over(frac.build(2));\n    const noteGps = this.getCurrVoice().noteGps;\n    const curr = noteGps.getCurr();\n    if (this._isOutOfSync()) {\n      const newCursorTime = cursorTime.minus(step);\n      return curr.start.lessThan(newCursorTime) ? newCursorTime : curr.start;\n    }\n    const left = noteGps.getLeft();\n    if (left) {\n      if (!left.isRest()) {\n        return left.start;\n      }\n      const newCursorTime = cursorTime.minus(step);\n      return left.start.lessThan(newCursorTime) ? newCursorTime : left.start;\n    }\n    return this.startTime();\n  }\n\n  // The pointer can be left of the cursorTime for rest notes,\n  // in which case it is out-of-sync.\n  _isOutOfSync() {\n    const noteGps = this.getCurrVoice().noteGps;\n    const curr = noteGps.getCurr();\n    return curr && curr.start.lessThan(this.getCursorTime());\n  }\n\n  save(clone, onSuccess) {\n    const currUser = firebase.auth().currentUser;\n    if (!currUser) {\n      alert('Sign in to save.');\n      return;\n    }\n\n    if (this.doc.owner && this.doc.owner !== currUser.email) {\n      clone = true;\n    }\n    if (clone) {\n      // It's okay to modify the doc, because we won't save it.\n      this.doc.cloneId = this.urlId;\n    }\n\n    this.doc.owner = currUser.email;\n\n    const db = firebase.firestore();\n    const collName = debug.version();\n    const id = clone ? (new Date).toISOString().replace(/:/g,'_') : this.urlId;\n    db.collection(collName).doc(id).set({\n      id: id,\n      title: this.doc.title,\n      composer: this.doc.composer,\n      payload: this.serialize(),\n      owner: this.doc.owner,\n      hasParts: this.parts.length > 0,\n      lastEdit: Date.now(),\n    }).then(_ => {\n      if (onSuccess) {\n        onSuccess();\n        return;\n      }\n      if (clone) {\n        window.location.href = getSongUrl(id);\n      } else {\n        this.ebanner.display('Saved.');\n      }\n    }).catch(err => {\n      console.warn('Failed to save.', err);\n      this.ebanner.display(err.message);\n    });\n  }\n\n  addSimpleBass() {\n    this._upsertComping(bassComp.simpleBass);\n  }\n\n  addTwoBeatBass() {\n    this._upsertComping(bassComp.twoBeatBass);\n  }\n\n  addBossaNovaBass() {\n    this._upsertComping(bassComp.bossaNovaBass);\n  }\n  addBossaNovaComping() {\n    this._upsertComping(comp.bossaNovaComp);\n  }\n  // _genBassSeed(seed) {\n  //   return Math.min(23, Math.max(36, Math.floor(Math.random() * 5) + seed - 2))\n  // }\n\n  // TODO refactor and get rid of n,n,n,n-n,n-n-n.\n  addFingerStyleComping() {\n    const quietFactor = 0.4;\n    this._upsertComping((slot, prevSlot) => {\n      let remainder = slot.duration;\n      const chord = slot.chord;\n      const bassSpelling = chord.getBassSpelling();\n      const bassNoteNum = bassSpelling.toNoteNum(3) < 44 ? bassSpelling.toNoteNum(3) : bassSpelling.toNoteNum(2);\n      const noteNums = chord.chordTonesAbove(bassNoteNum + chord.getFifthInterval());\n      const skipBass = (\n        prevSlot && prevSlot.chord &&\n        prevSlot.duration.lessThan(frac.build(3, 4)) &&\n        prevSlot.chord.getBassSpelling().toString() == bassSpelling.toString());\n      const eighth = frac.build(1, 8);\n      this.upsertByDur(skipBass ? noteNums.slice(2, 4) : [bassNoteNum], eighth);\n      remainder = remainder.minus(eighth);\n\n      const rand = Math.random();\n      let dur1 = eighth;\n      if (rand < 1/3 && eighth.lessThan(eighth)) {\n        dur1 = eighth.times(frac.build(2));\n      }\n      if (Math.random() < quietFactor) {\n        this.lengthenPrevBy(eighth);\n      } else {\n        this.upsertByDur([noteNums[0]], dur1);\n      }\n      remainder = remainder.minus(dur1);\n      if (remainder.toFloat() <= 0) {\n        return;\n      }\n\n      let dur2 = frac.build(1, 4).minus(dur1);\n      const longSecondBeat = Math.random() < 0.4;\n      if (remainder.equals(frac.build(1, 4)) && longSecondBeat) {\n        dur2 = remainder;\n      }\n\n      const rand3 = Math.random();\n      let notes1 = [noteNums[1]];\n      const beatLike = rand3 < 1/3;\n      let idx3 = 2;\n      if (beatLike) {\n        notes1 = [noteNums[1], noteNums[2]];\n        idx3 = 0;\n      }\n      if (dur2.toFloat() > 0) {\n        this.upsertByDur(notes1, dur2);\n      }\n      remainder = remainder.minus(dur2);\n      if (remainder.toFloat() <= 0) {\n        return;\n      }\n\n      if (remainder.leq(eighth)) {\n        this.upsertByDur([noteNums[idx3]], remainder)\n        return;\n      }\n\n      const rand4 = Math.random();\n      let quiet = true;\n      let dur3 = remainder;\n      if (rand4 < 1/12) {\n        dur3 = eighth;\n      } else if (rand4 < 3/12) {\n        dur3 = eighth.times(frac.build(2));\n      } else if (rand4 < 7/12) {\n        quiet = false;\n      }\n      if (beatLike || !quiet) {\n        if (Math.random() < quietFactor) {\n          this.lengthenPrevBy(eighth);\n        } else {\n          this.upsertByDur([noteNums[idx3]], eighth);\n        }\n        remainder = remainder.minus(eighth);\n        const shifts = math.shuffle(math.range(0, 4));\n        if (Math.random() < quietFactor) {\n          this.lengthenPrevBy(eighth);\n        } else {\n          this.upsertByDur([noteNums[shifts[0]]], eighth);\n        }\n        remainder = remainder.minus(eighth);\n        if (remainder.toFloat() <= 0) {\n          return;\n        }\n        if (Math.random() < quietFactor) {\n          this.lengthenPrevBy(eighth);\n        } else {\n          this.upsertByDur([noteNums[shifts[1]]], eighth);\n        }\n        remainder = remainder.minus(eighth);\n        if (remainder.toFloat() <= 0) {\n          return;\n        }\n        if (Math.random() < quietFactor) {\n          this.lengthenPrevBy(eighth);\n        } else {\n          this.upsertByDur([noteNums[shifts[2]]], eighth);\n        }\n        remainder = remainder.minus(eighth);\n        if (remainder.toFloat() <= 0) {\n          return;\n        }\n        this.upsertByDur([noteNums[shifts[3]]], remainder);\n        return;\n      }\n\n      this.upsertByDur([noteNums[idx3]], dur3);\n      remainder = remainder.minus(dur3);\n      if (remainder.toFloat() <= 0) {\n        return;\n      }\n      const rand5 = Math.random();\n      let dur4 = remainder;\n      if (rand5 < 1/3) {\n        dur4 = eighth;\n      }\n      const noteNums2 = chord.chordTonesAbove(noteNums[0] + 7);\n      this.upsertByDur([noteNums2[1]], dur4);\n      remainder = remainder.minus(dur4);\n      if (remainder.toFloat() <= 0) {\n        return;\n      }\n      const rand6 = Math.random();\n      let idx9 = 0;\n      if (rand6 < 1/3) {\n        idx9 = 2;\n      }\n      this.upsertByDur([noteNums2[idx9]], remainder);\n    });\n  }\n\n  addSimpleComping() {\n    let simple = true;\n    let seed = this.seed;\n    this._upsertComping(slot => {\n      const fourBeat = slot.duration.equals(frac.build(4, 4));\n      if (simple) {\n        simple = Math.random() < 0.4;\n      } else if (fourBeat) {\n        simple = Math.random() < 0.1;\n      } else {\n        simple = Math.random() < 0.3;\n      }\n      if (simple) {\n        this._simpleComping(slot, seed);\n        seed = this._genCompSeed(seed);\n        return;\n      }\n      this._twoBeatComping(slot, seed);\n      seed = this._genCompSeed(seed);\n    });\n  }\n\n  addMelodicComping() {\n    let seed = this.seed;\n    this._upsertComping(slot => {\n      this._melodicComping(slot, seed);\n      seed = this._genCompSeed(seed);\n    });\n  }\n\n  _melodicComping(slot, seed) {\n    // const useColor = Math.random() < 0.3;\n\n    let remainder = slot.duration;\n    const notes0 = slot.chord.chordTonesAbove(seed - 12);\n\n    let dur0 = frac.build(1, 4);\n    let notes = [notes0[1]];\n    const dur0Rand = Math.random();\n    if (dur0Rand < 1 / 6 && remainder.geq(frac.build(1, 2))) {\n      dur0 = frac.build(3, 8);\n    } else if (dur0Rand < 3 / 6 && remainder.geq(frac.build(1, 2))) {\n      dur0 = frac.build(1, 2);\n      notes = [notes0[1], notes0[0]];\n    }\n\n    this.upsertByDur(notes, dur0);\n    remainder = remainder.minus(dur0);\n    if (remainder.toFloat() <= 0) {\n      return;\n    }\n\n    const shiftIdxRand = Math.random();\n    let shiftIdx1;\n    let shiftIdx2;\n    let shiftIdx3;\n    if (shiftIdxRand < 1/10) {\n      shiftIdx1 = 0;\n      shiftIdx2 = 1;\n      shiftIdx3 = 2;\n    } else if (shiftIdxRand < 2/10) {\n      shiftIdx1 = 0;\n      shiftIdx2 = -1;\n      shiftIdx3 = 1;\n    } else if (shiftIdxRand < 4/10) {\n      shiftIdx1 = -1;\n      shiftIdx2 = 0;\n      shiftIdx3 = 1;\n    } else if (shiftIdxRand < 6/10) {\n      shiftIdx1 = 1;\n      shiftIdx2 = 0;\n      shiftIdx3 = 2;\n    } else if (shiftIdxRand < 8/10) {\n      shiftIdx1 = 1;\n      shiftIdx2 = 2;\n      shiftIdx3 = 1;\n    } else {\n      shiftIdx1 = 2;\n      shiftIdx2 = 1;\n      shiftIdx3 = 0;\n    }\n    let dur1 = frac.build(1, 8);\n    let notes1 = [notes0[1+shiftIdx1]];\n    if (dur0.equals(frac.build(1, 2)) && Math.random() < 0.3) {\n      dur1 = frac.build(1,2);\n      notes1 = [notes0[1+shiftIdx1], notes0[shiftIdx1 <= -1 ? 2 : shiftIdx1]];\n    } else if (remainder.geq(frac.build(1,4)) && Math.random() < 0.5) {\n      dur1 = frac.build(1,4);\n    }\n    this.upsertByDur(notes1, dur1);\n    remainder = remainder.minus(dur1);\n    if (remainder.toFloat() <= 0) {\n      return;\n    }\n\n    let dur2 = frac.build(1, 8);\n    let notes2 = [notes0[1+shiftIdx2]];\n    const dur2Rand = Math.random();\n    if (dur2Rand < 2 / 4 && remainder.geq(frac.build(1, 4))) {\n      dur2 = frac.build(1, 4);\n      if (Math.random() < 0.2) {\n        notes2 = [notes0[1+shiftIdx2], notes0[shiftIdx2 <= -1 ? 2 : shiftIdx2]];\n      }\n    } else if (dur2Rand < 3 / 4 && remainder.geq(frac.build(3, 8))) {\n      dur2 = frac.build(3, 8);\n      if (Math.random() < 0.4) {\n        notes2 = [notes0[1+shiftIdx2], notes0[shiftIdx2 <= -1 ? 2 : shiftIdx2]];\n      }\n    }\n    this.upsertByDur(notes2, dur2);\n    remainder = remainder.minus(dur2);\n    if (remainder.toFloat() <= 0) {\n      return;\n    }\n    let notes3 = [notes0[1+shiftIdx3]];\n    if (remainder.geq(frac.build(3, 8)) && Math.random() < 0.4) {\n      notes3 = [notes0[1+shiftIdx3], notes0[shiftIdx3 <= -1 ? 2 : shiftIdx3]];\n    }\n    this.upsertByDur(notes3, remainder);\n    // remainder = remainder.minus(dur2);\n  }\n\n  _genCompSeed(seed) {\n    return Math.min(65, Math.max(45, Math.floor(Math.random() * 3) + seed - 1))\n  }\n\n  _simpleComping(slot, seed) {\n    // TODO replace 54 (G4) with something less arbitrary, e.g. the top note from the previous chord voicing.\n    const numNotes = Math.random() < 0.6 ? 2 : 1;\n    const noteNums = slot.chord.chordTonesBelow(seed).slice(0, numNotes);\n    this.upsertByDur(noteNums, slot.duration);\n  }\n\n  _twoBeatComping(slot, seed) {\n    // TODO replace 54 (G4) with something less arbitrary, e.g. the top note from the previous chord voicing.\n    let dur2 = frac.build(1, 8);\n    const twoBeat = slot.duration.equals(frac.build(2, 4));\n    if (twoBeat) {\n      const rand = Math.random();\n      if (rand < 1/3) {\n        dur2 = frac.build(1, 8);\n      } else {\n        dur2 = frac.build(1, 4);\n      }\n    }\n    const threeBeat = slot.duration.equals(frac.build(3, 4));\n    if (threeBeat) {\n      const rand = Math.random();\n      if (rand < 1/4) {\n        dur2 = frac.build(1, 8);\n      } else if (rand < 2/4) {\n        dur2 = frac.build(1, 4);\n      } else if (rand < 3/4) {\n        dur2 = frac.build(3, 8);\n      } else {\n        dur2 = frac.build(2, 4);\n      }\n    }\n    const fourBeat = slot.duration.equals(frac.build(4, 4));\n    if (fourBeat) {\n      const rand = Math.random();\n      if (rand < 3/8) {\n        dur2 = frac.build(1, 4);\n      } else if (rand < 5/8) {\n        dur2 = frac.build(3, 8);\n      } else {\n        dur2 = frac.build(2, 4);\n      }\n    }\n\n    const dur1 = slot.duration.minus(dur2);\n    if (dur1.toFloat <= 0) {\n      throw 'too small to generate 2 beat comping';\n    }\n    seed = seed || 54;\n    const halfNote = frac.build(2, 4);\n    const below = slot.chord.chordTonesBelow(seed + 3);\n    const idx1 = Math.floor(Math.random() * (below.length - 1));\n    let notes1 = [below[idx1]];\n    if (Math.random() < 0.3) {\n      notes1 = [below[idx1], below[idx1 + 1]];\n    }\n    if (halfNote.lessThan(dur1)) {\n      this.upsertByDur(notes1, halfNote.plus(dur1.minus(halfNote)));\n    } else {\n      this.upsertByDur(notes1, dur1);\n    }\n\n    let idx2 = Math.floor(Math.random() * (below.length - 1));\n    if (idx1 === idx2) {\n      idx2 = Math.floor(Math.random() * (below.length - 1));\n      if (idx1 === idx2) {\n        idx2 = Math.floor(Math.random() * (below.length - 1));\n      }\n    }\n    let notes2 = [below[idx2]];\n    if (Math.random() < 0.2) {\n      notes2 = [below[idx2], below[idx2 + 1]];\n    }\n    this.upsertByDur(notes2, dur2);\n  }\n\n  _oneBeatComping(slot, skipSecondHalf, seed, decorate) {\n    const halfBeat = frac.build(1, 8);\n    if (skipSecondHalf) {\n      this.upsertByDur(slot.chord.chordTonesBelow(seed).slice(0, 2), halfBeat.times(frac.build(2)));\n      return;\n    }\n    if (!decorate) {\n      this.upsertByDur(slot.chord.chordTonesBelow(seed).slice(0, 2), halfBeat);\n      this.upsertByDur(slot.chord.chordTonesBelow(seed).slice(2, 3), halfBeat);\n      return;\n    }\n    const quarterBeat = frac.build(1, 16);\n    let halfBeatIdx;\n    const rand = Math.random();\n    if (rand < 0.65) {\n      halfBeatIdx = 0;\n    } else if (rand < 0.93) {\n      halfBeatIdx = 1;\n    } else {\n      halfBeatIdx = 2;\n    }\n    const durations = [quarterBeat, quarterBeat];\n    durations.splice(halfBeatIdx, 0, halfBeat);\n    const notes = [\n      slot.chord.chordTonesBelow(seed).slice(2, 3),\n      slot.chord.chordTonesBelow(seed).slice(3, 4)];\n    math.shuffle(notes);\n    this.upsertByDur(slot.chord.chordTonesBelow(seed).slice(0, 2), durations[0]);\n    this.upsertByDur(notes[0], durations[1]);\n    this.upsertByDur(notes[1], durations[2]);\n  }\n\n  addOneBeatComping() {\n    let seed = 54;\n    this._upsertComping(slot => {\n      if (!slot.duration.times(frac.build(4)).isWhole()) {\n        throw 'Unable to add one beat comping for this time sig.'\n      }\n      const numBeats = slot.duration.times(frac.build(4)).toFloat();\n\n      const skipNum = Math.floor(Math.random() * numBeats);\n      math.range(0, numBeats).forEach(idx => {\n        let decorate = false;\n        if (idx >= Math.floor(numBeats / 2)) {\n          decorate = Math.random() < .15 * (idx / 1.5 + 1);\n        }\n        this._oneBeatComping(slot, skipNum === idx && idx !== 1, seed, decorate);\n      });\n      seed = this._genCompSeed(seed);\n    });\n  }\n\n  addDecoratedTwoBeatComping() {\n    this._upsertComping(slot => {\n      // TODO replace 54 (G4) with something less arbitrary, e.g. the top note from the previous chord voicing.\n      if (slot.duration.lessThan(frac.build(2, 4))) {\n        this._twoBeatComping(slot);\n        return;\n      }\n      const dur2 = frac.build(1, 8);\n      let dur1 = slot.duration.over(frac.build(2));\n      if (slot.duration.equals(frac.build(3, 4))) {\n        dur1 = frac.build(2, 4);\n      }\n      dur1 = dur1.minus(dur2);\n      const dur3 = slot.duration.minus(dur1).minus(dur2);\n      this.upsertByDur(slot.chord.chordTonesBelow(54).slice(0, 2), dur1);\n      this.upsertByDur(slot.chord.chordTonesBelow(54).slice(2, 3), dur2);\n      this.upsertByDur(slot.chord.chordTonesBelow(54).slice(1, 2), dur3);\n    });\n  }\n\n  _createChordSlots() {\n    const finalEndTime = this._getMaxEndTime();\n    const durationPerMeasure = this.getDurationPerMeasure();\n    const chordLocs = this.doc.chordLocs;\n    const slots = [];\n    if (this.doc.pickup.toFloat() > 0) {\n      slots.push({\n        chord: null,\n        duration: this.doc.pickup,\n        start: this.doc.pickup.negative(),\n        end: frac.build(0),\n      });\n    }\n    chordLocs.forEach((chordLoc, idx) => {\n      const chord = chordLoc.chord;\n      const startTime = chordLoc.start;\n      const endTime = idx + 1 < chordLocs.length ? chordLocs[idx + 1].start : finalEndTime;\n      _split(startTime, endTime, durationPerMeasure).forEach(splitRes => {\n        const duration = splitRes.end.minus(splitRes.start);\n        slots.push({\n          chord: chord,\n          duration: duration,\n          start: splitRes.start,\n          end: splitRes.end,\n        });\n      });\n    });\n    return slots;\n  }\n\n  _upsertComping(algo) {\n    const onlyAddToCursorSlot = !this.getCurrVoice().noteGps.atTail();\n    const currTime = this.getCursorTime();\n    let shouldAdd = false;\n    const slots = this._createChordSlots();\n    slots.forEach((slot, idx) => {\n      if (currTime.equals(slot.start)) {\n        shouldAdd = true;\n      } else {\n        if (onlyAddToCursorSlot) {\n          shouldAdd = false;\n        }\n      }\n      if (!shouldAdd) {\n        return;\n      }\n\n      // Deal with pickup measure.\n      if (!slot.chord) {\n        this.upsertByDur([null], slot.duration);\n        return;\n      }\n      const res = algo(slot, idx > 0 ? slots[idx - 1] : null);\n      if (res) {\n        // Each beat/step is multiplied by slot.duration, so we need to scale\n        // down relNote.start by dividing by slot.duration.\n        this.upsertBeat(res.map(relNote => {\n          const res = relNote.clone();\n          res.start = relNote.start.over(slot.duration);\n          return res;\n        }), slot.duration);\n      }\n    });\n  }\n\n  _getMaxEndTime() {\n    let poss = this.doc.pickup.negative();\n    this.doc.voices.forEach(voice => {\n      const finalNoteGp = voice.noteGps.get2ndLast();\n      if (finalNoteGp && poss.lessThan(finalNoteGp.end)) {\n        poss = finalNoteGp.end;\n      }\n    });\n    if (this.doc.chordLocs.length > 0) {\n      const finalChordLoc = this.doc.chordLocs[this.doc.chordLocs.length - 1];\n      const lastChordEnd = location.nextMeasureTime(finalChordLoc.start, this.getDurationPerMeasure());\n      if (poss.lessThan(lastChordEnd)) {\n        poss = lastChordEnd\n      }\n    }\n    return poss;\n  }\n\n  getDurationPerMeasure() {\n    return frac.build(this.doc.timeSigNumer, this.doc.timeSigDenom);\n  }\n\n  incrTimeSigNumer() {\n    this.doc.timeSigNumer += 1;\n  }\n\n  decrTimeSigNumer() {\n    if (this.doc.timeSigNumer <= 1) {\n      return;\n    }\n    this.doc.timeSigNumer -= 1;\n  }\n\n  incrTimeSigDenom() {\n    this.doc.timeSigDenom *= 2;\n  }\n\n  decrTimeSigDenom() {\n    this.doc.timeSigDenom /= 2;\n  }\n\n  setTitle(title) {\n    this.doc.title = title;\n  }\n\n  getTitle() {\n    return this.doc.title;\n  }\n\n  // oldCurrTime arg is needed because we may have removed the voice before\n  // calling this method.\n  _setVoiceIdxAndAlign(idx, oldCurrTime) {\n    oldCurrTime = oldCurrTime || this.getCursorTime();\n    this.editor.currVoiceIdx = idx;\n    this._alignTime(oldCurrTime);\n  }\n\n  setVoiceIdx(idx) {\n    this.editor.currVoiceIdx = idx;\n  }\n\n  goUp() {\n    if (this.isChordMode()) {\n      const measNum = location.measureNum(this.getCursorTime(), this.getDurationPerMeasure());\n      const barsPerLine = 4;\n      const lineNum = location.lineNum(measNum, barsPerLine);\n      this.navUp();\n      if (lineNum === 0) {\n        return;\n      }\n      const currTime = this.getCursorTime();\n      this.disableChordMode();\n      this._setVoiceIdxAndAlign(this.doc.voices.length - 1, currTime);\n      return;\n    }\n    if (this.editor.currVoiceIdx > 0) {\n      this._nextVoice(-1);\n      return;\n    }\n    this.enableChordMode();\n  }\n\n  goDown() {\n    if (this.isChordMode()) {\n      const currTime = this.getCursorTime();\n      this.disableChordMode();\n      this._setVoiceIdxAndAlign(0, currTime);\n      return;\n    }\n    if (this.editor.currVoiceIdx + 1 < this.doc.voices.length) {\n      this._nextVoice(1);\n      return;\n    }\n    this.enableChordMode();\n    this.navDown();\n  }\n\n  _finalVoice() {\n    this.setVoiceIdx(this.doc.voices.length - 1);\n  }\n\n  _nextVoice(jump, oldCurrTime) {\n    jump = jump || 1;\n    const newCurrVoiceIdx = math.mod(\n      this.editor.currVoiceIdx + jump, this.doc.voices.length);\n    if (newCurrVoiceIdx !== this.editor.currVoiceIdx + jump) {\n      return;\n    }\n    this._setVoiceIdxAndAlign(newCurrVoiceIdx, oldCurrTime);\n  }\n\n  _alignTime(oldCurrTime) {\n    const maxNotesPerLine = 999;\n    iter.boundedWhile(breakFunc => {\n      if (this.getCursorTime().lessThan(oldCurrTime)) {\n        return breakFunc();\n      }\n      // Use navLeftMeasure instead of navLeft to ensure\n      // that in chord mode, the cursor is not in between beats.\n      this.navLeftMeasure();\n    }, maxNotesPerLine);\n    iter.boundedWhile(breakFunc => {\n      if (this.getCursorTime().geq(oldCurrTime)) {\n        return breakFunc();\n      }\n      this.navRight();\n    }, maxNotesPerLine);\n  }\n\n  toggle24And44() {\n    if ([2, 4].indexOf(this.doc.timeSigNumer) === -1) {\n      this.ebanner.slowDisplay(\n        'This only works for 2/4 or 4/4 time signatures.');\n      return;\n    }\n    const mult = this.doc.timeSigNumer === 2 ? frac.build(2) : frac.build(1, 2);\n    this.doc.timeSigNumer = frac.build(this.doc.timeSigNumer).times(mult).toFloat();\n    this.doc.chordLocs.forEach(loc => {\n      loc.start = loc.start.times(mult);\n    });\n    this.doc.keySigLocs.forEach(loc => {\n      loc.start = loc.start.times(mult);\n    });\n    this.doc.voices.forEach(voice => {\n      voice.noteGps.toArray().forEach(noteGp => {\n        noteGp.start = noteGp.start.times(mult);\n        noteGp.end = noteGp.end.times(mult);\n      });\n    });\n    // Note that setPickup is not used because noteGp\n    // shifting is completed above.\n    this.doc.pickup = this.doc.pickup.times(mult);\n    this.setTempo(frac.build(this.getTempo()).times(mult).toFloat());\n  }\n\n  swingify() {\n    this.doc.tempoStr = '';\n    const newVoices = [];\n    this.doc.voices.forEach(voice => {\n      const noteGpsArr = voice.noteGps.toArray();\n      const beatDur = frac.build(1, 4);\n      const res = chunking.periodicSplit(noteGpsArr, beatDur)\n      res.forEach((_, idx) => {\n        // Perform mutation\n        _swingifyOneBeat(res, idx);\n      });\n      newVoices.push(Voice.fromNoteGpsArray(\n        chunking.mergeTiesAndRests(res), voice.clef));\n    });\n    this.doc.setVoices(newVoices);\n  }\n\n  implicitSwing() {\n    if (this.doc.tempoStr == 'Swing') {\n      this.doc.tempoStr = '';\n      return;\n    }\n    this.doc.tempoStr = 'Swing';\n    const durationPerMeasure = frac.build(\n      this.doc.timeSigNumer, this.doc.timeSigDenom);\n    const newVoices = [];\n    this.doc.voices.forEach(voice => {\n      const noteGpsArr = voice.noteGps.toArray();\n      const resNoteGps = [];\n      chunking.splitIntoMeasures(noteGpsArr, durationPerMeasure).forEach(meas => {\n        if (meas.length === 0) {\n          return;\n        }\n        const start = meas[0].start;\n        const end = meas[meas.length - 1].end;\n        const chunks = chunking.exec(\n          meas, start, end, this.doc.timeSigNumer, this.doc.timeSigDenom);\n        chunks.forEach(chunk => {\n          const noteGpsArrInChunk = chunk.getNoteGps();\n          const isTuplet = chunk instanceof chunking.TupletChunk;\n          if (isTuplet) {\n            if (noteGpsArrInChunk.length === 2) {\n              const left = noteGpsArrInChunk[0];\n              if (left.getDuration().equals(frac.build(1, 6))) {\n                const right = noteGpsArrInChunk[1];\n                if (right.getDuration().equals(frac.build(1, 12))) {\n                  // TODO move this into a helper for alt-left and alt-right.\n                  const leftClone = left.clone();\n                  const rightClone = right.clone();\n                  leftClone.end = left.start.plus(frac.build(1, 8));\n                  rightClone.start = leftClone.end;\n                  resNoteGps.push(leftClone, rightClone);\n                  return;\n                }\n              }\n            }\n          }\n          resNoteGps.push(...noteGpsArrInChunk);\n        });\n      });\n      newVoices.push(Voice.fromNoteGpsArray(\n        chunking.mergeTiesAndRests(resNoteGps), voice.clef));\n    });\n    this.doc.setVoices(newVoices);\n  }\n\n  enharmSpelling(spellingsStr) {\n    if (this.isChordMode()) {\n      return;\n    }\n    const currNoteGp = this.getCurrVoice().noteGps.getCurr();\n    if (!currNoteGp) {\n      return;\n    }\n    if (!spellingsStr) {\n      currNoteGp.notes.forEach(note => {\n        note.spelling = null;\n      });\n      return;\n    }\n    const spellings = spellingsStr.split(',').map(str => {\n      const chord = _parseChordStr(str, this.ebanner);\n      if (!chord) {\n        return null;\n      }\n      return chord.root;\n    });\n    if (spellings.some(s => { return s == null; })) {\n      return;\n    }\n    if (spellings.length != currNoteGp.notes.length) {\n      return;\n    }\n    currNoteGp.notes.forEach((note, idx) => {\n      note.spelling = spellings[idx];\n    });\n  }\n\n  // Only for the purpose of auto-generating comping\n  appendVoice() {\n    if (this.doc.chordLocs.length === 0) {\n      this.ebanner.slowDisplay(\n        'This only works if you have added chords to the song.');\n      return;\n    }\n    this.disableChordMode();\n    this._finalVoice();\n    this.addVoice();\n  }\n\n  addVoice(voice) {\n    const nextIdx = this.isChordMode() ? 0 : this.editor.currVoiceIdx + 1;\n    voice = voice || new Voice(null, 'bass');\n    this.doc.voices.splice(nextIdx, 0, voice);\n    if (nextIdx === 0) {\n      this.goDown();\n    } else {\n      this._nextVoice();\n    }\n  }\n\n  removeVoice() {\n    if (this.isChordMode()) {\n      this.doc.clearChords();\n      return;\n    }\n    if (this.doc.voices.length < 2) {\n      return;\n    }\n    const oldCurrTime = this.getCursorTime();\n    this.doc.voices.splice(this.editor.currVoiceIdx, 1);\n    this._nextVoice(-1, oldCurrTime);\n  }\n\n  toggleClef() {\n    if (this.isChordMode()) {\n      return;\n    }\n\n    const voice = this.getCurrVoice();\n    voice.clef = voice.clef != 'treble' ? 'treble' : 'bass';\n  }\n\n  _abcVoices() {\n    return this.doc.voices.map((voice, idx) => {\n      const showChords = idx === 0;\n      // const showChords = false;\n      const showChordsCursor = !this.viewMode && showChords && this.editor.cursorOnChords;\n      const chordLocs = (\n        showChordsCursor ? addChordCursor(this.doc.chordLocs, this.getCursorTime()) :\n        this.doc.chordLocs);\n      const showNotesCursor = !this.viewMode && !this.editor.cursorOnChords && idx === this.editor.currVoiceIdx;\n      return voice.getAbcStrings(\n        this.abcNoteDuration,\n        this.doc,\n        this.showSpelling,\n        chordLocs,\n        showChords,\n        showNotesCursor,\n        idx,\n        this.getCursorTime());\n    }).flat();\n  }\n\n  toggleView() {\n    this.save();\n    const url = new URL(document.URL);\n    let view = url.searchParams.get('view');\n    view = view === '1' ? '0' : '1';\n    const newUrl = new URL(document.URL);\n    newUrl.searchParams.set('view', view);\n    window.location.href = newUrl;\n  }\n\n  setComposer(c) {\n    this.doc.composer = c;\n  }\n\n  cut() {\n    if (this.isChordMode()) {\n      this.ebanner.display('Not supported');\n      return;\n    }\n    this.copy();\n    this.truncateRight();\n  }\n\n  truncateRight() {\n    const noteGps = this.getCurrVoice().noteGps;\n    const cursorTime = this.getCursorTime();\n    while(!noteGps.atTail()) {\n      this.skipRight();\n      this.unsafeRemoveFromNoteGps();\n    }\n    this.setCursorTimeSyncPointer(cursorTime);\n  }\n\n  // TODO think about pasting multiple voices with chords, and\n  // recording the links/title of the pasted parts.\n  copy() {\n    let data = null;\n    if (this.isChordMode()) {\n      const currTime = this.getCursorTime();\n      data = this.doc.chordLocs.filter(chordLoc => {\n        return !chordLoc.start.lessThan(currTime);\n      }).map(chordLoc => {\n        const clone = chordLoc.clone();\n        clone.start = chordLoc.start.minus(currTime);\n        return clone;\n      });\n    } else {\n      if (this._isOutOfSync()) {\n        this._surger();\n      }\n      const noteGpArr = this.getCurrVoice().noteGps.toArrayStartingFromCurr();\n      const voice = Voice.fromNoteGpsArray(noteGpArr);\n      data = voice.toJson();\n    }\n    localStorage.setItem('pasteBuffer', JSON.stringify(data));\n  }\n\n  paste() {\n    let data;\n    let json;\n    try {\n      data = localStorage.getItem('pasteBuffer');\n      json = JSON.parse(data);\n    } catch (err) {\n      console.log('Pasting non-music data.', err, data);\n      return;\n    }\n    if (this.isChordMode()) {\n      let chordLocs;\n      try {\n        chordLocs = json.map(loc => { return ChordLoc.fromJson(loc); });\n      } catch(err) {\n        this.ebanner.display('Error: Pasting non-chord JSON.');\n        console.log('Pasting non-chord JSON.', err, json);\n        return;\n      }\n      const currTime = this.getCursorTime();\n      chordLocs.forEach(chordLoc => {\n        const clone = chordLoc.clone();\n        clone.start = chordLoc.start.plus(currTime);\n        this._insertChordLoc(clone);\n      });\n      return;\n    }\n    let voice;\n    try {\n      voice = Voice.fromJson(json);\n    } catch(err) {\n      this.ebanner.display('Error: Pasting non-voice JSON.');\n      console.log('Pasting non-voice JSON.', err, json);\n      return;\n    }\n    const noteGpsArr = voice.noteGps.toArray();\n    this.insertNoteGps(noteGpsArr);\n  }\n\n  insertNoteGps(noteGpsArr, stationaryCursor) {\n    if (noteGpsArr.length == 0) {\n      return;\n    }\n    const currTime = this.getCursorTime();\n    const shift = currTime.minus(noteGpsArr[0].start);\n    noteGpsArr.forEach(noteGp => {\n      noteGp.start = noteGp.start.plus(shift);\n      noteGp.end = noteGp.end.plus(shift);\n    });\n    noteGpsArr.forEach(noteGp => {\n      this.upsertByDur(\n        noteGp.notes.map(note => {return note.noteNum;}),\n        noteGp.end.minus(noteGp.start));\n    });\n    if (stationaryCursor) {\n      this.setCursorTimeSyncPointer(currTime);\n    }\n  }\n\n  getAbc() {\n    const tempoStr = this.doc.tempoStr ? `\"${this.doc.tempoStr}\"` : '';\n    return `X: 1\nT: ${this.doc.title}\nC: ${this.doc.composer}\nM: ${this.doc.timeSigNumer}/${this.doc.timeSigDenom}\nK: ${this.doc.keySigSp.toString()}\nQ: ${this.abcNoteDuration.toString()} = ${this.doc.tempo} ${tempoStr}\nL: ${this.abcNoteDuration.toString()}\n${this._abcVoices().join('')}\n`;\n  }\n}\n\n// idx is the potential start of a beat.\nfunction _swingifyOneBeat(noteGpsArr, idx) {\n  const noteGp0 = noteGpsArr[idx];\n  // Don't swing if noteGp0 is not at the start of a beat.\n  if (!noteGp0.start.times(frac.build(4)).isWhole()) {\n    return;\n  }\n  const oneBeat = frac.build(1, 4);\n  const dur0 = noteGp0.getDuration();\n  if (!dur0.lessThan(oneBeat)) {\n    return;\n  }\n  if (idx + 1 >= noteGpsArr.length) {\n    return;\n  }\n  const noteGp1 = noteGpsArr[idx + 1];\n  const dur1 = noteGp1.getDuration();\n  if (!dur0.plus(dur1).lessThan(oneBeat)) {\n    if (noteGp0.tie) {\n      return;\n    }\n    const newDur0 = (\n      dur0.lessThan(frac.build(1, 8)) ? frac.build(1, 12)\n      : frac.build(1, 6));\n    noteGp0.end = noteGp0.start.plus(newDur0);\n    noteGp1.start = noteGp0.end;\n    return;\n  }\n  if (idx + 2 >= noteGpsArr.length) {\n    return;\n  }\n  const noteGp2 = noteGpsArr[idx + 2];\n  const dur2 = noteGp2.getDuration();\n  // Don't swing if there are more than 3 notes in a beat.\n  if (dur0.plus(dur1).plus(dur2).lessThan(oneBeat)) {\n    return;\n  }\n\n  noteGp0.end = noteGp0.start.plus(frac.build(1, 12));\n  noteGp1.start = noteGp0.end;\n  noteGp1.end = noteGp1.start.plus(frac.build(1, 12));\n  noteGp2.start = noteGp1.end;\n}\n\nfunction findUpsertIdx(inputChordLocs, time) {\n  // Case 1: on the far left.\n  if (inputChordLocs.length === 0 || time.lessThan(inputChordLocs[0].start)) {\n    return {idx: 0, update: false};\n  }\n  for (let idx = 0; idx < inputChordLocs.length; idx++ ) {\n    const chordLoc = inputChordLocs[idx];\n    // Case 2: time is at idx\n    if (time.equals(chordLoc.start)) {\n      return {idx: idx, update: true};\n    }\n    // Case 4: on the far right.\n    if (idx + 1 >= inputChordLocs.length) {\n      return {idx: inputChordLocs.length, update: false};\n    }\n    // Case 3: time is sandwiched between idx and idx + 1\n    const nextChordLoc = inputChordLocs[idx+1];\n    const sandwiched = chordLoc.start.lessThan(time) && time.lessThan(nextChordLoc.start);\n    if (sandwiched) {\n      return {idx: idx + 1, update: false};\n    }\n  }\n  // Impossible.\n  console.warn('failed to find upsertIdx; inputChordLocs, time:', inputChordLocs, time);\n  throw 'failed to find upsertIdx';\n}\n\nfunction addChordCursor(inputChordLocs, cursorTime) {\n  const upsertInfo = findUpsertIdx(inputChordLocs, cursorTime);\n  if (upsertInfo.update) {\n    return inputChordLocs.map((chordLoc, idx) => {\n      const clone = chordLoc.clone();\n      if (idx === upsertInfo.idx) {\n        clone.onCursor = true;\n      }\n      return clone;\n    });\n  }\n  const res = inputChordLocs.map(chordLoc => {\n    return chordLoc.clone();\n  });\n  res.splice(upsertInfo.idx, 0, new ChordLoc(null, cursorTime, true));\n  return res;\n}\n\nfunction _parseChordStr(chordStr, ebanner) {\n  if (!chordStr) {\n    return;\n  }\n  try {\n    return new chd.Chord(Parser.parse(chordStr));\n  } catch(err) {\n    if (ebanner) {\n      ebanner.display('failed to parse chord: ' + chordStr);\n    }\n    console.warn('failed to parse chord: ', chord, err);\n    return;\n  }\n}\n\nfunction getSongUrl(id) {\n  const newUrl = new URL(document.URL.split('#')[0]);\n  newUrl.searchParams.set('id', id);\n  return newUrl;\n}\n\nfunction collapseGraceNotesToSimultaneousNotes(noteGps) {\n  function _merge(noteGpsToMerge) {\n    if (noteGpsToMerge.length == 0) {\n      throw 'noteGpsToMerge.length cannot be 0.';\n    }\n    const notes = [];\n    const lastNoteGp = noteGpsToMerge[noteGpsToMerge.length - 1].clone();\n    noteGpsToMerge.forEach(noteGp => {\n      notes.push(...noteGp.notes);\n    });\n  return new NoteGp(notes, lastNoteGp.start, lastNoteGp.end, lastNoteGp.tie);\n  }\n\n  const res = [];\n  let noteGpsToMerge = [];\n  for (let idx = 0; idx < noteGps.length; idx++) {\n    const currNoteGp = noteGps[idx];\n    if (noteGpsToMerge.length == 0) {\n      noteGpsToMerge.push(currNoteGp);\n      continue;\n    }\n    if (noteGpsToMerge[0].start.equals(currNoteGp.start)) {\n      noteGpsToMerge.push(currNoteGp);\n      continue;\n    }\n    // Context: currNoteGp start at a different place.\n    // Outcome: merge and re-initialize oteGpsToMerge.\n    res.push(_merge(noteGpsToMerge));\n    noteGpsToMerge = [currNoteGp];\n  }\n  if (noteGpsToMerge.length > 0) {\n    res.push(_merge(noteGpsToMerge));\n  }\n  return res;\n}","/**\n * @fileoverview Description of this file.\n */\n\n\nconst html = `\n<style>\n#banner {\n    position: fixed;\n    top: 0;\n    left: 50%;\n\n    background-color: #f9edbe;\n    border-color: #f0c36d;\n    border-style: solid;\n    border-width: 1px;\n    padding: 6px;\n    font-size: 20px;\n\n    visibility: hidden;\n}\n</style>\n<div id='banner'>\n</div>\n`;\n\nexport class EphemeralBanner extends HTMLElement {\n  constructor() {\n    super();\n    this.root = null;\n    this.timeout = null;\n  }\n\n  connectedCallback() {\n    this.root = this.attachShadow({ mode: 'open' });\n    this.root.innerHTML = html;\n  }\n\n  display(message, color, period) {\n    color = color || '#f9edbe';\n    period = period || 2 * 1000;\n    if (!this.root) {\n      return;\n    }\n    window.clearTimeout(this.timeout);\n    const banner = this.root.querySelector('#banner');\n    banner.textContent = message;\n    banner.style.visibility = 'visible';\n    banner.style.backgroundColor = color;\n    this.timeout = window.setTimeout(() => {\n      banner.style.visibility = 'hidden';\n    }, period);\n  }\n\n  slowDisplay(message) {\n    this.display(message, null, 6 * 1000);\n  }\n}\n\ncustomElements.define('eph-banner', EphemeralBanner);\n","import * as state from '../fire/state.js';\nimport * as banner from '../fire/banner.js';\n\nexport class RenderMgr {\n  constructor(canvasDiv) {\n    this._eBanner = new banner.EphemeralBanner();\n    this._canvasDiv = canvasDiv;\n  }\n\n  render(song) {\n    const stateMgr = new state.StateMgr(this._eBanner);\n    stateMgr.doc.timeSigNumer = song.timeSigChanges.defaultVal.upperNumeral;\n    stateMgr.doc.timeSigDenom = song.timeSigChanges.defaultVal.lowerNumeral;\n    stateMgr.setTitle(song.title);\n    stateMgr.setPickup(song.pickup8n.over(8).negative());\n    stateMgr.setTempo(song.tempo8nPerMinChanges.defaultVal);\n    stateMgr.doc.tempoStr = song.swingChanges.defaultVal.ratio.toFloat() > 1 ? 'Swing' : '';\n    stateMgr.doc.keySigSp = song.keySigChanges.defaultVal;\n    \n    stateMgr.doc.voices = [];\n    song.getVisibleVoices().forEach((voice, idx) => {\n      if (idx >= stateMgr.doc.voices.length) {\n        stateMgr.addVoice(new state.Voice(null, voice.clef.toLowerCase()));\n      }\n      stateMgr.disableChordMode();\n      stateMgr.setVoiceIdx(idx);\n      stateMgr.navHead();\n      voice.noteGps.forEach(qng => {\n        const noteNums = qng.getNoteNums();\n        stateMgr.upsertByDur(noteNums.length ? qng.getNoteNums() : [null], qng.end8n.minus(qng.start8n).over(8));\n      });\n    });\n\n    stateMgr.enableChordMode();\n    song.chordChanges.getChanges().forEach(chordChange => {\n      stateMgr.setCursorTimeSyncPointer(chordChange.start8n.over(8));\n      stateMgr.insertChord(chordChange.val.toString().replace('maj', 'M'));\n    });\n\n    stateMgr.viewMode = true;\n\n    const params = {};\n    const moreParams = {};\n    const abcStr = stateMgr.getAbc();\n    ABCJS.renderAbc(this._canvasDiv, abcStr, params, moreParams);\n  }\n\n  clear() {\n    this._canvasDiv.innerHTML = '';\n    this._canvasDiv.removeAttribute(\"style\");\n  }\n  \n}",null,null,null,null,null],"names":["Cell","noteNumToAbc","mod","html","gcd","Frac","math.gcd","range","shuffle","fromNoteNum","getNoteNumToNoAccidSpelling","fromNoteNumWithMapping","fromNoteNumWithFlat","fromNoteNumWithSharp","fromNoteNumWithChord","getStandardMappingInC","getDiminishedMappingInC","translateMapping","Spelling","letterToBaseNoteNum","getNextLetter","fromNoteNumWithLetter","toLyricsTokens","splitAfter","splitBefore","Voice","fromJson","Note","frac.build","beat.buildNote","location.nextMeasureTime","math.isPowerOf2","math.range","math.mod","debug.version","frac.Frac","chunking.SingletonChunk","spell.fromNoteNum","spell.fromNoteNumWithChord","spell.fromNoteNumWithFlat","spell.fromNoteNumWithSharp","location.measureNum","lineNum","location.lineNum","spell.fromJson","frac.fromJson","pointed.List","chunking.mergeTiesAndRests","chunking.periodicSplit","chunking.exec","chd.Chord","spell.Spelling","chunking.isPossibleTuplet","storage.retrieve","location.measureNumToTime","location.computePrevBeat","chunking.tupletChunking","chunking.toChunks","bassComp.simpleBass","bassComp.twoBeatBass","bassComp.bossaNovaBass","comp.bossaNovaComp","math.shuffle","iter.boundedWhile","chunking.splitIntoMeasures","chunking.TupletChunk","banner.EphemeralBanner","state.StateMgr","state.Voice"],"mappings":"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"}